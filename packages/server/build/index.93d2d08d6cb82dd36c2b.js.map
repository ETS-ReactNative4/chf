{"version":3,"file":"index.10cdac55340154fc3126.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/containers/Vendor.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/user/index.web.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport VendorView from '../components/VendorView';\nimport { FILTERED_PRODUCTS_QUERY } from '../../common/schema';\nimport COLLECTIONS_QUERY from '../../common/graphql/SFY/sfyCollectionsQuery.graphql';\nimport VENDOR_QUERY from '../../common/graphql/VendorQuery.graphql';\nimport CATEGORY_QUERY from '../../common/graphql/SFY/sfySingleCategoryByHandle.graphql';\nimport ADMIN_CAT_QUERY from '../../common/graphql/SFY/sfyAdminCollectionByHandle.graphql';\nimport VENDORS_QUERY from '../../common/graphql/VendorsQuery.graphql';\nimport LOC_CATEGORY_QUERY from '../../common/graphql/CategoryQuery.graphql';\n\nclass Vendor extends React.Component {\n  render() {\n    return <VendorView {...this.props} />;\n  }\n}\n\nconst VendorWithApollo = compose(\n  FILTERED_PRODUCTS_QUERY(),\n  graphql(CATEGORY_QUERY, {\n    options: props => {\n      const { vendor_name: handle } = props.match.params;\n      // const page = props.location.search;\n      // console.log('PROPS HERE::', props);\n      // console.log('PAGE', page);\n      const reg = /[=](\\d)/;\n      const first = parseInt(reg.exec(props.location.search)[1]);\n      // console.log('FIRST ', first);\n      const displayLim = 12;\n      const fetchNum = first * displayLim;\n      // console.log('FETCHNUM:', fetchNum);\n      return { variables: { handle, first: fetchNum }, fetchPolicy: 'cache-first' };\n    },\n    props: ({ data }) => {\n      const { loading, error, sfy_shop, fetchMore, variables } = data;\n      // console.log('LOADING:??', data);\n      let currEndCursor, hasNextPage, hasPreviousPage;\n      if (!loading && sfy_shop) {\n        const { products } = sfy_shop.collectionByHandle;\n        if (products.edges.length > 0) currEndCursor = products.edges[products.edges.length - 1].cursor;\n        hasNextPage = products.pageInfo.hasNextPage;\n        hasPreviousPage = products.pageInfo.hasPreviousPage;\n      }\n      // console.log('Products length',sfy_shop);\n      const loadMore = async (first = 12, after = currEndCursor) => {\n        const updatedVars = { ...variables, after, first };\n        const data = await fetchMore({\n          variables: updatedVars,\n          updateQuery: (prevResult, { fetchMoreResult }) => {\n            if (fetchMoreResult.sfy_shop.collectionByHandle.products.edges.length === 0) return prevResult;\n            // console.log('PREVRESULT:', prevResult);\n            const updatedResult = JSON.parse(JSON.stringify(prevResult));\n            updatedResult.sfy_shop.collectionByHandle.products.edges = [\n              ...prevResult.sfy_shop.collectionByHandle.products.edges,\n              ...fetchMoreResult.sfy_shop.collectionByHandle.products.edges\n            ];\n            updatedResult.sfy_shop.collectionByHandle.products.pageInfo =\n              fetchMoreResult.sfy_shop.collectionByHandle.products.pageInfo;\n\n            return updatedResult;\n          }\n        });\n        // console.log('IS THIS RUNNING EVERYTIME ?', data);\n        return data;\n      };\n      // console.log('WHAT THE FUCKK::', sfy_shop);\n      if (error) throw new Error(`Error in Products Query: ${error}`);\n      if (loading || !sfy_shop) return { loading };\n      if (!loading && sfy_shop) {\n        return {\n          loading,\n          category: sfy_shop.collectionByHandle,\n          currEndCursor,\n          hasNextPage,\n          hasPreviousPage,\n          loadMore\n        };\n      }\n    }\n  }),\n  graphql(VENDORS_QUERY, {\n    props: ({ data: { loading, error, vendors } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loading, vendors };\n    }\n  }),\n  // graphql(LOC_CATEGORY_QUERY, {\n  //   options: props => {\n  //     const { category: handle } = props.match.params;\n  //     return { variables: { handle } };\n  //   },\n  //   props: ({ data: { loading, error, category: locCategory } }) => {\n  //     if (error) throw new Error(`Error in Vendors Query: ${error}`);\n  //     return { loading, locCategory };\n  //   }\n  // }),\n  graphql(ADMIN_CAT_QUERY, {\n    options: props => {\n      const { vendor_name: handle } = props.match.params;\n      return { variables: { handle } };\n    },\n    props: ({ data: { admin_collectionByHandle, loading, error } }) => {\n      // console.log('LOADING::', loading);\n      if (!loading && !error) {\n        const { productsCount } = admin_collectionByHandle;\n        return { productsCount, loadingCount: loading };\n      }\n      if (error) {\n        return { countError: error, productsCount: null };\n      }\n      return { loadingCount: loading, productsCount: null };\n\n      // if (loadingProductCount) {\n      //   return { loadingProductCount };\n      // }\n      // if (!error) {\n      //   return { loadingProductCount, productsCount };\n      // } else {\n      //   return { countError: error };\n      // }\n    }\n  }),\n  graphql(COLLECTIONS_QUERY, {\n    options: () => {\n      return { variables: { [`first`]: 50 } };\n    },\n    props: ({ data }) => {\n      const { loading, error, sfy_shop: sfy_shop_collections } = data;\n      if (error) throw new Error(`Error in Categories (Vendor Page) Query: ${error}`);\n      return { loading, sfy_shop_collections };\n    }\n  }),\n  graphql(VENDOR_QUERY, {\n    options: props => {\n      console.log('PROPS MATCH::', props.match.params);\n      return { variables: { input: { handle: props.match.params.vendor_name } } };\n    },\n    props: ({ data }) => {\n      const { loading, error, vendor } = data;\n      // console.log('DATA:::', data);\n      if (error) throw new Error(`Error in Categories (Vendor Page) Query: ${error}`);\n      return { loading, vendor };\n    }\n  })\n)(Vendor);\n\nVendor.propTypes = {\n  location: PropTypes.object,\n  search: PropTypes.string\n};\n\nexport default VendorWithApollo;\n","import React from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport translate from '../../i18n';\nimport access from './access';\nimport resolvers from './resolvers';\nimport resources from './locales';\n// import ProfileView from './components/ProfileView';\nimport { MenuItem } from '../../modules/common/components/web';\n// import Users from './containers/Users';\n// import UserEdit from './containers/UserEdit';\n// import UserAdd from './containers/UserAdd';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\n// import ForgotPassword from './containers/ForgotPassword';\n// import ResetPassword from './containers/ResetPassword';\n\nimport { AuthRoute, IfLoggedIn, IfNotLoggedIn, /*withLoadedUser,*/ withLogout } from './containers/Auth';\n\nimport Feature from '../connector';\n\n// const ProfileName = withLoadedUser(\n//   ({ currentUser }) => (currentUser ? currentUser.fullName || currentUser.username : null)\n// );\n\nconst LogoutLink = withRouter(\n  withLogout(({ logout, history }) => (\n    <a\n      href=\"javascript:void(0)\"\n      onClick={e => {\n        e.preventDefault();\n        (async () => {\n          await logout();\n          history.push('/');\n        })();\n      }}\n      className=\"nav-link\"\n    >\n      Logout\n    </a>\n  ))\n);\n\nexport * from './containers/Auth';\n\nconst NavLinkUsersWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/users\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.users')}\n  </NavLink>\n));\nconst NavLinkLoginWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/login\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.sign')}\n  </NavLink>\n));\n\nexport default new Feature(access, {\n  route: [\n    // <AuthRoute exact path=\"/profile\" role={['user', 'admin']} redirect=\"/login\" component={ProfileView} />,\n    // <AuthRoute exact path=\"/users\" redirect=\"/profile\" role=\"admin\" component={Users} />,\n    // <AuthRoute exact path=\"/users/new\" role={['admin']} component={UserAdd} />,\n    // <AuthRoute path=\"/users/:id\" redirect=\"/profile\" role={['user', 'admin']} component={UserEdit} />,\n    <AuthRoute exact path=\"/register\" redirectOnLoggedIn redirect=\"/admin/dashboard\" component={Register} />,\n    <AuthRoute\n      exact\n      path=\"/admin/login\"\n      redirectOnLoggedIn\n      redirect=\"/admin/dashboard\"\n      component={withRouter(({ history }) => (\n        <Login onLogin={() => history.push('/admin/dashboard')} />\n      ))}\n    />,\n    // <AuthRoute exact path=\"/forgot-password\" redirectOnLoggedIn redirect=\"/profile\" component={ForgotPassword} />,\n    // <AuthRoute exact path=\"/reset-password/:token\" redirectOnLoggedIn redirect=\"/profile\" component={ResetPassword} />\n  ],\n  // navItem: [\n  //   <IfLoggedIn key=\"/users\" role=\"admin\">\n  //     <MenuItem>\n  //       <NavLinkUsersWithI18n />\n  //     </MenuItem>\n  //   </IfLoggedIn>\n  // ],\n  // navItemRight: [\n  //   // <IfLoggedIn key=\"/profile\">\n  //   //   <MenuItem>\n  //   //     <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">\n  //   //       <ProfileName />\n  //   //     </NavLink>\n  //   //   </MenuItem>\n  //   // </IfLoggedIn>,\n  //   <IfLoggedIn key=\"/logout\">\n  //     <MenuItem>\n  //       <LogoutLink />\n  //     </MenuItem>\n  //   </IfLoggedIn>,\n  //   <IfNotLoggedIn key=\"/login\">\n  //     <MenuItem>\n  //       <NavLinkLoginWithI18n />\n  //     </MenuItem>\n  //   </IfNotLoggedIn>\n  // ],\n  resolver: resolvers,\n  localization: { ns: 'user', resources },\n  // eslint-disable-next-line react/display-name\n  rootComponentFactory: req => (req ? <CookiesProvider cookies={req.universalCookies} /> : <CookiesProvider />)\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAdA;AACA;AAHA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AA3DA;AA8DA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA2BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAVA;AACA;AAaA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AATA;AAAA;AAAA;AADA;AACA;AAgBA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AALA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAhDA;;;;A","sourceRoot":""}