{"version":3,"file":"index.8f315454442cac72858f.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Seo/SeoForm.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\n\nconst SeoForm = props => {\n  const {\n    seo,\n    uploadSeo,\n    uploadSeoContent,\n    selectedProduct,\n    selectedBrand,\n    selectedCollection,\n    selectedCategory\n  } = props;\n  // console.log('SELECTED SEO', seo);\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        title: seo ? seo.title : '',\n        description: seo ? seo.description : '',\n        keywords: seo ? seo.keywords : ''\n      }}\n      validateOnBlur={true}\n      validate={validateAll}\n      validateOnChange={false}\n      onSubmit={async (values, actions) => {\n        try {\n          switch (selectedCategory) {\n            case 'products':\n              await uploadSeoContent({ handle: selectedProduct, ...values });\n\n              break;\n            case 'brands':\n              await uploadSeo({ path: 'vendor', handle: selectedBrand, seo: { ...values } });\n              break;\n            case 'collections':\n              await uploadSeo({ path: 'collection', handle: selectedCollection, seo: { ...values } });\n              break;\n            default:\n              return;\n          }\n        } catch (e) {\n          console.log('ERROR:', e);\n        }\n        // MyImaginaryRestApiCall(user.id, values).then(\n        // updatedUser => {\n        actions.setSubmitting(false);\n        // updateUser(updatedUser);\n        // onClose();\n        // },\n        // error => {\n        // actions.setSubmitting(false);\n        // actions.setErrors(transformMyRestApiErrorsToAnObject(error));\n        // actions.setStatus({ msg: 'Set some arbitrary status or data' });\n        // }\n        // );\n      }}\n      render={({ errors, status, touched, isSubmitting }) => {\n        return (\n          <Form className=\"admin__form__seo\">\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"text\" name=\"title\" placeholder=\"Title\" />\n              {errors.title && touched.title && <div className=\"admin__form__seo--error\">{errors.title}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field\n                component=\"textarea\"\n                className=\"admin__form__seo--input\"\n                name=\"description\"\n                placeholder=\"Description\"\n              />\n              {errors.description &&\n                errors.description &&\n                touched.description && <div className=\"admin__form__seo--error\">{errors.description}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"text\" name=\"keywords\" placeholder=\"Keywords\" />\n              {errors.keywords &&\n                errors.keywords &&\n                touched.keywords && <div className=\"admin__form__seo--error\">{errors.keywords}</div>}\n            </div>\n            {status && status.msg && <div className=\"admin__form__seo--status\">{status.msg}</div>}\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        );\n      }}\n    />\n  );\n};\nSeoForm.propTypes = {\n  seo: PropTypes.object,\n  uploadSeo: PropTypes.func,\n  uploadSeoContent: PropTypes.func,\n  selectedProduct: PropTypes.string,\n  selectedBrand: PropTypes.string,\n  selectedCollection: PropTypes.string,\n  selectedCategory: PropTypes.string\n};\nexport default SeoForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AACA;AAlBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAgCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AAAA;AAAA;AAAA;AATA;AAWA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAxBA;AA6BA;AAzEA;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;;A","sourceRoot":""}