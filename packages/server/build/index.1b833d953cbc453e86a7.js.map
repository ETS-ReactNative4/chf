{"version":3,"file":"index.dc6b2bf98a52be89bf83.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/user/containers/Auth.web.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { withLoadedUser } from './AuthBase';\n\nconst AuthRoute = withLoadedUser(\n  ({ currentUser, role, redirect = '/admin/login', redirectOnLoggedIn, component: Component, ...rest }) => {\n    const RenderComponent = props => {\n      console.log('CURRENTUER:::', currentUser, role);\n      // The users is not logged in\n      if (redirectOnLoggedIn && currentUser) {\n        return <Redirect to={{ pathname: redirect }} />;\n      }\n\n      return isRoleMatch(role, currentUser) ? (\n        <Component currentUser={currentUser} {...props} {...rest} />\n      ) : (\n        <Redirect to={{ pathname: redirect }} />\n      );\n    };\n\n    return <Route {...rest} render={RenderComponent} />;\n  }\n);\n\nAuthRoute.propTypes = {\n  role: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n  redirect: PropTypes.string,\n  redirectOnLoggedIn: PropTypes.bool\n};\n\nconst isRoleMatch = (role, currentUser) => {\n  if (!role) {\n    return true;\n  }\n  return currentUser && (Array.isArray(role) ? role : [role]).includes(currentUser.role);\n};\n\nexport * from './AuthBase';\nexport { AuthRoute };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}