{"version":3,"file":"index.54aab3836e38101dffa3.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Locations/index.js","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/user/index.web.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport SIMPLE_PAGE_QUERY from '../../graphql/SimplePageQuery.graphql';\nimport DEALERS_QUERY from '../../graphql/Dealers.graphql';\nimport DEALER_BY_HANDLE_QUERY from '../../graphql/DealerQuery.graphql';\nimport UPDATE_DEALER from '../../graphql/UpdateDealer.graphql';\n\nimport LocationsView from './LocationsView';\n// import FormCreator from '../FormCreator';\n// import Text from '../FormCreator/FormTypes/Text';\n// import Formic from './Form';\n//\n// const LocationForm = new FormCreator({\n//   field: [<Text />]\n// });\n\nclass Locations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return <LocationsView {...this.props} />;\n  }\n}\n\nconst LocationsWithApollo = compose(\n  graphql(DEALER_BY_HANDLE_QUERY, {\n    options: props => {\n      return { variables: { handle: ' ' } };\n    },\n    props: ({ data }) => {\n      console.log('data', data);\n      return { ...data };\n    }\n  }),\n  graphql(SIMPLE_PAGE_QUERY, {\n    options: () => {\n      return { variables: { pageTitle: 'Locations' } };\n    },\n    props: ({ data }) => {\n      console.log('Locations Page data', data);\n      const { page, loading: loadingPage, error } = data;\n      if (loadingPage && !error) {\n        return { loadingPage, page: null };\n      } else {\n        return { page, loadingPage };\n      }\n    }\n  }),\n  graphql(DEALERS_QUERY, {\n    options: () => ({\n      variables: { first: 12, after: null }\n    }),\n    props: ({ data }) => {\n      console.log('DATA:::', data);\n      const { loading, error, dealers } = data;\n      if (error) {\n        return { dealersError: error };\n      }\n      if (loading) {\n        return { loadingDealers: loading };\n      }\n      if (!loading && !error) {\n        return { loadingDealers: loading, dealers };\n      }\n    }\n  }),\n  graphql(UPDATE_DEALER, {\n    props: ({ mutate }) => ({\n      updateDealer: async dealer => {\n        try {\n          const { data } = await mutate({\n            variables: { dealer },\n            update: (proxy, { data: { updateDealer } }) => {\n              console.log('UPDATED UPDATE:::', updateDealer);\n              // console.log('WHAT :???', DEALER_BY_HANDLE_QUERY);\n              // const query = DEALER_BY_HANDLE_QUERY;\n              const data = proxy.readQuery({\n                query: gql`\n                  query dealerByHandle($handle: String) {\n                    dealerByHandle(handle: $handle) {\n                      id\n                      handle\n                      name\n                      street\n                      suite\n                      city\n                      zip\n                      state\n                      country\n                      email\n                      phone\n                      website\n                      lat\n                      lng\n                    }\n                  }\n                `,\n                variables: { handle: ' ' }\n              });\n              console.log('DEALERS QUERY::', DEALERS_QUERY);\n              const test = proxy.readQuery({ query: gql`\n                query dealers($first: Int, $after: Int) {\n                  dealers(first: $first, after: $after) {\n                    dealers_count\n                    edges {\n                      node {\n                        id\n                      }\n                    }\n                  }\n                }\n                `,\n                variables: { first: 12 }\n               });\n\n              console.log('DATA::', test);\n              // data.dealers.push(updatedDealer);\n              // proxy.writeQuery({ query: DEALERS_QUERY, data });\n            }\n          });\n          console.log('UPDATED::', data);\n          return data;\n        } catch (e) {\n          console.log('ERROR UPDATING:', e);\n        }\n      }\n    })\n  })\n)(Locations);\nexport default LocationsWithApollo;\n","import React from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport translate from '../../i18n';\nimport access from './access';\nimport resolvers from './resolvers';\nimport resources from './locales';\n// import ProfileView from './components/ProfileView';\nimport { MenuItem } from '../../modules/common/components/web';\n// import Users from './containers/Users';\n// import UserEdit from './containers/UserEdit';\n// import UserAdd from './containers/UserAdd';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\n// import ForgotPassword from './containers/ForgotPassword';\n// import ResetPassword from './containers/ResetPassword';\n\nimport { AuthRoute, IfLoggedIn, IfNotLoggedIn, /*withLoadedUser,*/ withLogout } from './containers/Auth';\n\nimport Feature from '../connector';\n\n// const ProfileName = withLoadedUser(\n//   ({ currentUser }) => (currentUser ? currentUser.fullName || currentUser.username : null)\n// );\n\nconst LogoutLink = withRouter(\n  withLogout(({ logout, history }) => (\n    <a\n      href=\"javascript:void(0)\"\n      onClick={e => {\n        e.preventDefault();\n        (async () => {\n          await logout();\n          history.push('/');\n        })();\n      }}\n      className=\"nav-link\"\n    >\n      Logout\n    </a>\n  ))\n);\n\nexport * from './containers/Auth';\n\nconst NavLinkUsersWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/users\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.users')}\n  </NavLink>\n));\nconst NavLinkLoginWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/login\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.sign')}\n  </NavLink>\n));\n\nexport default new Feature(access, {\n  route: [\n    // <AuthRoute exact path=\"/profile\" role={['user', 'admin']} redirect=\"/login\" component={ProfileView} />,\n    // <AuthRoute exact path=\"/users\" redirect=\"/profile\" role=\"admin\" component={Users} />,\n    // <AuthRoute exact path=\"/users/new\" role={['admin']} component={UserAdd} />,\n    // <AuthRoute path=\"/users/:id\" redirect=\"/profile\" role={['user', 'admin']} component={UserEdit} />,\n    <AuthRoute exact path=\"/register\" redirectOnLoggedIn redirect=\"/admin/dashboard\" component={Register} />,\n    <AuthRoute\n      exact\n      path=\"/admin/login\"\n      redirectOnLoggedIn\n      redirect=\"/admin/dashboard\"\n      component={withRouter(({ history }) => (\n        <Login onLogin={() => history.push('/admin/dashboard')} />\n      ))}\n    />,\n    // <AuthRoute exact path=\"/forgot-password\" redirectOnLoggedIn redirect=\"/profile\" component={ForgotPassword} />,\n    // <AuthRoute exact path=\"/reset-password/:token\" redirectOnLoggedIn redirect=\"/profile\" component={ResetPassword} />\n  ],\n  // navItem: [\n  //   <IfLoggedIn key=\"/users\" role=\"admin\">\n  //     <MenuItem>\n  //       <NavLinkUsersWithI18n />\n  //     </MenuItem>\n  //   </IfLoggedIn>\n  // ],\n  // navItemRight: [\n  //   // <IfLoggedIn key=\"/profile\">\n  //   //   <MenuItem>\n  //   //     <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">\n  //   //       <ProfileName />\n  //   //     </NavLink>\n  //   //   </MenuItem>\n  //   // </IfLoggedIn>,\n  //   <IfLoggedIn key=\"/logout\">\n  //     <MenuItem>\n  //       <LogoutLink />\n  //     </MenuItem>\n  //   </IfLoggedIn>,\n  //   <IfNotLoggedIn key=\"/login\">\n  //     <MenuItem>\n  //       <NavLinkLoginWithI18n />\n  //     </MenuItem>\n  //   </IfNotLoggedIn>\n  // ],\n  resolver: resolvers,\n  localization: { ns: 'user', resources },\n  // eslint-disable-next-line react/display-name\n  rootComponentFactory: req => (req ? <CookiesProvider cookies={req.universalCookies} /> : <CookiesProvider />)\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;;AARA;AACA;AAUA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAoBA;AArBA;AAuBA;AACA;AAYA;AAZA;AACA;AAcA;AACA;AACA;AACA;AAhDA;AACA;AAHA;AAAA;AAEA;AACA;AAiDA;AApDA;AACA;AADA;AAAA;AAAA;AACA;AAsDA;AACA;AAxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AA+DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AATA;AAAA;AAAA;AADA;AACA;AAgBA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AALA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAhDA;;;;A","sourceRoot":""}