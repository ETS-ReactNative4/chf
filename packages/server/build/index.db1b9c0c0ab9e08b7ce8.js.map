{"version":3,"file":"index.472163287c25ef6c26fc.hot-update.js","sources":["src/modules/vendor/sql.js"],"sourcesContent":["/*eslint-disable no-unused-vars*/\nimport knex from '../../sql/connector';\n\nexport default class Vendor {\n  get = {\n    async vendors() {\n      return knex\n        .select()\n        .from('vendors')\n        .orderBy('id')\n        .catch(err => console.log('Error retrieving vendors', err));\n    },\n    async vendorById(id, select = '*') {\n      return await knex\n        .select(select)\n        .from('vendors')\n        .where({ id })\n        .first()\n        .catch(err => console.log('Error retrieving the category data', err));\n    },\n    async vendorByHandle(handle, select = '*') {\n      return await knex\n        .select(select)\n        .from('vendors')\n        .where({ handle })\n        .first()\n        .catch(err => console.log('Error retrieving the category data', err));\n    },\n    async vendorCategories(vendor_id, select = '*') {\n      return await knex\n        .select('c.*')\n        .from('category_vendor_link AS cvl')\n        .innerJoin('categories AS c', 'c.id', 'cvl.category_id')\n        .where('cvl.vendor_id', '=', vendor_id)\n        .catch(err => console.log('Error retrieving Categories related Vendors data', err));\n    }\n  };\n  insertOrUpdate = {\n    async vendorInfo({ id, ...vendor }) {\n      try {\n        const update = await knex('vendors').where({ id });\n        if (update.length == 0) {\n          await knex('vendors')\n            .insert(vendor)\n            .returning([\n              'id',\n              'name',\n              'handle',\n              'logo_url',\n              'is_featured',\n              'is_top_six',\n              'top_six_position',\n              'description'\n            ]);\n        } else {\n          await knex('vendors')\n            .where({ id })\n            .update(vendor)\n            .returning([\n              'id',\n              'name',\n              'handle',\n              'logo_url',\n              'is_featured',\n              'is_top_six',\n              'top_six_position',\n              'description'\n            ]);\n        }\n      } catch (e) {\n        console.log('ERROR UPDATING VENDOR:', e);\n      }\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AA/BA;AAiCA;AACA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AA+BA;AACA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAnCA;;;;;;;A","sourceRoot":""}