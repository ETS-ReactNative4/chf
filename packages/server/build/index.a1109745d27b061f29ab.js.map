{"version":3,"file":"index.98dc40a061dd9cb66f1e.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Locations/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport SIMPLE_PAGE_QUERY from '../../graphql/SimplePageQuery.graphql';\nimport DEALERS_QUERY from '../../graphql/Dealers.graphql';\nimport DEALER_BY_HANDLE_QUERY from '../../graphql/DealerQuery.graphql';\nimport UPDATE_DEALER from '../../graphql/UpdateDealer.graphql';\n\nimport LocationsView from './LocationsView';\n// import FormCreator from '../FormCreator';\n// import Text from '../FormCreator/FormTypes/Text';\n// import Formic from './Form';\n//\n// const LocationForm = new FormCreator({\n//   field: [<Text />]\n// });\n\nclass Locations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return <LocationsView {...this.props} />;\n  }\n}\n\n// const LocationsWithApollo = compose(\n//   graphql(DEALER_BY_HANDLE_QUERY, {\n//     options: props => {\n//       return { variables: { handle: ' ' } };\n//     },\n//     props: ({ data }) => {\n//       console.log('data', data);\n//       return { ...data };\n//     }\n//   }),\n//   graphql(SIMPLE_PAGE_QUERY, {\n//     options: () => {\n//       return { variables: { pageTitle: 'Locations' } };\n//     },\n//     props: ({ data }) => {\n//       console.log('Locations Page data', data);\n//       const { page, loading: loadingPage, error } = data;\n//       if (loadingPage && !error) {\n//         return { loadingPage, page: null };\n//       } else {\n//         return { page, loadingPage };\n//       }\n//     }\n//   }),\n//   graphql(DEALERS_QUERY, {\n//     options: () => ({\n//       variables: { first: 12, after: null }\n//     }),\n//     props: ({ data }) => {\n//       console.log('DATA:::', data);\n//       const { loading, error, dealers } = data;\n//       if (error) {\n//         return { dealersError: error };\n//       }\n//       if (loading) {\n//         return { loadingDealers: loading };\n//       }\n//       if (!loading && !error) {\n//         return { loadingDealers: loading, dealers };\n//       }\n//     }\n//   }),\n//   graphql(UPDATE_DEALER, {\n//     props: ({ mutate }) => ({\n//       updateDealer: async dealer => {\n//         try {\n//           const {\n//             data: { updateDealer }\n//           } = await mutate({\n//             variables: { dealer }\n//             // update: (proxy, { data: { updateDealer } }) => {\n//             //   try {\n//             //     console.log('UPDATE DEALER::', updateDealer);\n//             //     const data = proxy.readQuery({ query: DEALERS_QUERY, variables: { first: 12 } });\n//             //     console.log('Data::: on update::??', data);\n//             //\n//             //   } catch (e) {\n//             //     console.log('EEE', e);\n//             //   }\n//             // }\n//           });\n//           console.log('UPDATED::', updateDealer);\n//           return updateDealer;\n//         } catch (e) {\n//           console.log('ERROR UPDATING:', e);\n//         }\n//       }\n//     })\n//   })\n// )(Locations);\nexport default Locations;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;;;;A","sourceRoot":""}