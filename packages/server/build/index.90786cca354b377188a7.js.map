{"version":3,"file":"index.c86e8809ad1aee70cbd0.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Vendors/VendorTable.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/containers/Vendors.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table as RSTable } from 'reactstrap';\n\nconst renderHead = columns => {\n  return columns.map(({ title, dataIndex, renderHeader, key }, idx) => {\n    return (\n      <th key={key + idx} className={`w-${columns.length === 2 ? 100 : 100 / columns.length}`}>\n        {renderHeader ? renderHeader(title, dataIndex) : title}\n      </th>\n    );\n  });\n};\n\nconst renderBody = (columns, dataSource) => {\n  return dataSource.map(entry => {\n    return <tr key={entry.id}>{renderData(columns, entry)}</tr>;\n  });\n};\n\nconst renderData = (columns, entry) => {\n  return columns.map(({ render, key }, idx) => {\n    return <td key={key + idx}>{render ? render(entry[key], entry) : entry[key]}</td>;\n  });\n};\n\nconst Table = ({ dataSource, columns, ...props }) => {\n  return (\n    <RSTable {...props}>\n      <thead>\n        <tr>{renderHead(columns)}</tr>\n      </thead>\n      <tbody>{renderBody(columns, dataSource)}</tbody>\n    </RSTable>\n  );\n};\n\nTable.propTypes = {\n  dataSource: PropTypes.array,\n  columns: PropTypes.array\n};\n\nexport default Table;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { MdSearch } from 'react-icons/md';\n\nimport AdminView from '../components/AdminView';\nimport Loader from '../../common/components/global/components/Loader';\nimport '../styles/productspecs.scss';\nimport VendorTable from '../components/Vendors/VendorTable';\n// import { ADMIN_PRODUCTS_QUERY /*MODIFY_PRODUCT_DATA*/ } from '../../common/schema';\nimport PRODUCTS_QUERY from '../graphql/Products.graphql';\nimport VENDORS_QUERY from '../../common/graphql/VendorsQuery.graphql';\n\nconst columns = [\n  {\n    title: '',\n    dataIndex: 'node',\n    key: 'logo_url',\n    // eslint-disable-next-line\n    render: (image, record) => {\n      return (\n        <div>\n          <img src={image ? image : ''} alt=\"\" />\n          {/* <Link to={{ pathname: `/admin/locations/${record.node.handle}` }}>{text}</Link> */}\n        </div>\n      );\n    }\n  },\n  {\n    title: (\n      <a href=\"#\">\n        <h3>Product</h3>\n      </a>\n    ),\n    dataIndex: 'node',\n    key: 'name',\n    // eslint-disable-next-line\n    render: (text, record) => {\n      return (\n        <div>\n          {text}\n          {/* <Link to={{ pathname: `/admin/locations/${record.node.handle}` }}>{text}</Link> */}\n        </div>\n      );\n    }\n  }\n  // {\n  //   title: (\n  //     <a href=\"#\">\n  //       <h3>Vendor</h3>\n  //     </a>\n  //   ),\n  //   dataIndex: 'node',\n  //   key: 'vendor',\n  //   // eslint-disable-next-line\n  //   render: (text, record) => {\n  //     return (\n  //       <div>\n  //         {text}\n  //         {/* <Link to={{ pathname: `/admin/locations/${record.node.handle}` }}>{text}</Link> */}\n  //       </div>\n  //     );\n  //   }\n  // },\n  // {\n  //   dataIndex: 'node',\n  //   key: 'handle',\n  //   // eslint-disable-next-line\n  //   render: (text, record) => {\n  //     return (\n  //       <div>\n  //         <Link to={{ pathname: `/admin/products/${record.node.handle}` }}>Edit</Link>\n  //       </div>\n  //     );\n  //   }\n  // }\n];\nconst LoadMore = ({ loadMore }) => {\n  return (\n    <div className=\"admin__loadmore\">\n      <button onClick={() => loadMore()}>Load More</button>\n    </div>\n  );\n};\nLoadMore.propTypes = {\n  loadMore: PropTypes.func\n};\nconst SearchBar = ({ handleSearch, value }) => {\n  return (\n    <div className=\"admin__searchbox\">\n      <span>\n        <MdSearch size={20} />\n      </span>\n      <input type=\"text\" placeholder=\"Search\" onChange={handleSearch} value={value} />\n    </div>\n  );\n};\nSearchBar.propTypes = {\n  handleSearch: PropTypes.func,\n  value: PropTypes.string\n};\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchActive: false,\n      searchValue: '',\n      filteredProducts: null\n    };\n  }\n  // componentDidUpdate(prevProps, prevState) {\n  //   const prevSearch = prevState.searchValue;\n  //   const currSearch = this.state.searchValue;\n  //   if (currSearch.length > 0 && currSearch !== prevSearch) {\n  //     this.setState({ searchActive: true });\n  //     this.searchQuery();\n  //     return;\n  //   }\n  //   if (currSearch !== prevSearch && currSearch.length == 0) {\n  //     return this.setState({ searchActive: false, filteredProducts: null });\n  //   }\n  // }\n  // searchQuery = async () => {\n  //   const { searchValue } = this.state;\n  //   const query = gql`\n  //     query admin_products($first: Int, $after: String, $query: String) {\n  //       admin_products(first: $first, after: $after, query: $query) {\n  //         edges {\n  //           cursor\n  //           node {\n  //             vendor\n  //             title\n  //             handle\n  //             featuredImage {\n  //               originalSrc\n  //             }\n  //           }\n  //         }\n  //       }\n  //     }\n  //   `;\n  //   const { data } = await this.props.client.query({\n  //     query,\n  //     fetchPolicy: 'cache-first',\n  //     variables: { first: 20, query: `title:${searchValue}*` }\n  //   });\n  //   const { admin_products } = data;\n  //   this.setState({ filteredProducts: admin_products });\n  // };\n  handleSearch = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n  render() {\n    console.log('VENDOR PROPS:::', this.props);\n    const { vendorsLoading, vendors } = this.props;\n    // const { searchActive, searchValue, filteredProducts } = this.state;\n    if (vendorsLoading) {\n      return (\n        <AdminView {...this.props}>\n          <Loader />\n        </AdminView>\n      );\n    }\n    return (\n      <AdminView {...this.props}>\n        <h2>Vendors</h2>\n        <div className=\"admin__tableview\">\n          <div className=\"admin__productspecs\">\n            {/* <SearchBar handleSearch={this.handleSearch} value={searchValue} /> */}\n            {/* {searchActive && filteredProducts ? (\n              <ProductSpecs dataSource={filteredProducts.edges} columns={columns} />\n            ) : (\n            )} */}\n            <VendorTable dataSource={vendors} columns={columns} />\n          </div>\n          {/* <LoadMore loadMore={this.props.loadMore} /> */}\n        </div>\n      </AdminView>\n    );\n  }\n}\nconst ProductsApollo = compose(\n  withApollo,\n  graphql(VENDORS_QUERY, {\n    props: ({ data: { loading, error, vendors } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loadingVendors: loading, vendors };\n    }\n  })\n)(Products);\n\nexport default ProductsApollo;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AAZA;AAeA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAiDA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AACA;AAGA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAgDA;AACA;AACA;AAhDA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AANA;AADA;AAFA;AAeA;;;;AA9EA;AACA;AA+EA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AACA;AAOA;;;;A","sourceRoot":""}