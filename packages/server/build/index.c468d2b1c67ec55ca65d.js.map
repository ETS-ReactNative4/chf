{"version":3,"file":"index.3c557d7cf889752c8c28.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/containers/Dashboard.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/user/index.web.jsx"],"sourcesContent":["/*eslint-disable no-unused-vars*/\nimport React from 'react';\nimport { graphql, compose, withApollo } from 'react-apollo';\nimport ManageAdmins from '../../profile/components/ManageAdmins';\nimport SiteMap from '../components/SiteMap';\nimport AdminView from '../components/AdminView';\nimport PRODUCTS_QUERY from '../graphql/SiteMapProds.graphql';\nimport UPLOAD_CONTENT from '../graphql/UploadContent.graphql';\nimport SIMPLE_PAGE_QUERY from '../graphql/SimplePageQuery.graphql';\nimport DEALERS_QUERY from '../graphql/Dealers.graphql';\nimport DEALER_BY_HANDLE_QUERY from '../graphql/DealerQuery.graphql';\nimport UPDATE_DEALER from '../graphql/UpdateDealer.graphql';\nimport CREATE_SITEMAP from '../graphql/CreateSiteMap.graphql';\n\nclass Admin extends React.Component {\n  render() {\n    console.log('The props::::', this.props);\n    return (\n      <AdminView {...this.props}>\n        <div className=\"admin__dashboard\">\n          <ManageAdmins {...this.props} />\n          {/* <SiteMap {...this.props} /> */}\n        </div>\n      </AdminView>\n    );\n  }\n}\n\nconst AdminWithApollo = compose(\n  withApollo,\n  graphql(PRODUCTS_QUERY, {\n    options: () => ({\n      variables: { first: 250 }\n    }),\n    props: ({ data }) => {\n      console.log('DATA;::', data);\n      const { loading, error, admin_products, variables, fetchMore } = data;\n      if (error) {\n        throw new Error(error);\n      }\n      if (loading) {\n        return { productsLoading: loading };\n      }\n      if (!loading && admin_products) {\n        let currEndCursor;\n        let hasNextPage;\n        let hasPreviousPage;\n        const { edges } = admin_products;\n        if (edges.length > 0) {\n          currEndCursor = edges[edges.length - 1].cursor;\n        }\n        hasNextPage = admin_products.pageInfo.hasNextPage;\n        hasPreviousPage = admin_products.pageInfo.hasPreviousPage;\n        console.log('Curr end cursor::', currEndCursor);\n        const loadMore = (first = 50, after = currEndCursor) => {\n          const updatedVars = { ...variables, after, first };\n          console.log('UPDATED VARS::', updatedVars);\n          return fetchMore({\n            variables: updatedVars,\n            updateQuery: (prevResult, { fetchMoreResult }) => {\n              console.log('PREVRESULT:', prevResult);\n              if (fetchMoreResult.admin_products.edges.length === 0) return prevResult;\n              const updatedResult = JSON.parse(JSON.stringify(prevResult));\n              console.log('PREV RESULT STRING', updatedResult);\n              // const updatedResult = Object.assign({}, prevResult);\n              updatedResult.admin_products.edges = [\n                ...prevResult.admin_products.edges,\n                ...fetchMoreResult.admin_products.edges\n              ];\n              //\n              updatedResult.pageInfo = fetchMoreResult.admin_products.pageInfo;\n              // updatedResult.admin_products.pageInfo = fetchMoreResult.admin_products.pageInfo;\n              // console.log('udpatedres', updatedResult);\n              // const update = Object.assign({}, prevResult, {\n              //   admin_products: {\n              //     edges: [...prevResult.admin_products.edges, ...fetchMoreResult.admin_products.edges],\n              //     pageInfo: fetchMoreResult.admin_products.pageInfo\n              //     // __typename: prevResult.admin_products.__typename\n              //   },\n              //   __typename: prevResult.admin_products.__typename\n              // });\n              console.log('UPDATE::', updatedResult);\n              return updatedResult;\n            }\n          });\n        };\n        return {\n          productsLoading: loading,\n          admin_products,\n          loadMore,\n          products: {\n            currEndCursor,\n            hasNextPage,\n            hasPreviousPage\n          }\n        };\n      }\n    }\n  }),\n  graphql(CREATE_SITEMAP, {\n    props: ({ mutate }) => ({\n      createSiteMap: async () => {\n        // console.log('UPLOAD SEO DATA:', seoData);\n        const {\n          data: { createSiteMap }\n        } = await mutate();\n        // console.log('CONTENT:', updateProductSeo);\n        return createSiteMap;\n      }\n    })\n  })\n)(Admin);\n\nexport default AdminWithApollo;\n","import React from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport translate from '../../i18n';\nimport access from './access';\nimport resolvers from './resolvers';\nimport resources from './locales';\n// import ProfileView from './components/ProfileView';\nimport { MenuItem } from '../../modules/common/components/web';\nimport Users from './containers/Users';\n// import UserEdit from './containers/UserEdit';\n// import UserAdd from './containers/UserAdd';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\n// import ForgotPassword from './containers/ForgotPassword';\n// import ResetPassword from './containers/ResetPassword';\n\nimport { AuthRoute, IfLoggedIn, IfNotLoggedIn, /*withLoadedUser,*/ withLogout } from './containers/Auth';\n\nimport Feature from '../connector';\n\n// const ProfileName = withLoadedUser(\n//   ({ currentUser }) => (currentUser ? currentUser.fullName || currentUser.username : null)\n// );\n\nconst LogoutLink = withRouter(\n  withLogout(({ logout, history }) => (\n    <a\n      href=\"javascript:void(0)\"\n      onClick={e => {\n        e.preventDefault();\n        (async () => {\n          await logout();\n          history.push('/');\n        })();\n      }}\n      className=\"nav-link\"\n    >\n      Logout\n    </a>\n  ))\n);\n\nexport * from './containers/Auth';\n\nconst NavLinkUsersWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/users\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.users')}\n  </NavLink>\n));\nconst NavLinkLoginWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/login\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.sign')}\n  </NavLink>\n));\n\nexport default new Feature(access, {\n  route: [\n    // <AuthRoute exact path=\"/profile\" role={['user', 'admin']} redirect=\"/login\" component={ProfileView} />,\n    // <AuthRoute exact path=\"/admin/users\" component={Users} />,\n    // <AuthRoute exact path=\"/users/new\" role={['admin']} component={UserAdd} />,\n    // <AuthRoute path=\"/users/:id\" redirect=\"/profile\" role={['user', 'admin']} component={UserEdit} />,\n    <AuthRoute exact path=\"/register\" redirectOnLoggedIn redirect=\"/admin/dashboard\" component={Register} />,\n    <AuthRoute\n      exact\n      path=\"/admin/login\"\n      redirectOnLoggedIn\n      redirect=\"/admin/dashboard\"\n      component={withRouter(({ history }) => (\n        <Login onLogin={() => history.push('/admin/dashboard')} />\n      ))}\n    />\n    // <AuthRoute exact path=\"/forgot-password\" redirectOnLoggedIn redirect=\"/profile\" component={ForgotPassword} />,\n    // <AuthRoute exact path=\"/reset-password/:token\" redirectOnLoggedIn redirect=\"/profile\" component={ResetPassword} />\n  ],\n  // navItem: [\n  //   <IfLoggedIn key=\"/users\" role=\"admin\">\n  //     <MenuItem>\n  //       <NavLinkUsersWithI18n />\n  //     </MenuItem>\n  //   </IfLoggedIn>\n  // ],\n  // navItemRight: [\n  //   // <IfLoggedIn key=\"/profile\">\n  //   //   <MenuItem>\n  //   //     <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">\n  //   //       <ProfileName />\n  //   //     </NavLink>\n  //   //   </MenuItem>\n  //   // </IfLoggedIn>,\n  //   <IfLoggedIn key=\"/logout\">\n  //     <MenuItem>\n  //       <LogoutLink />\n  //     </MenuItem>\n  //   </IfLoggedIn>,\n  //   <IfNotLoggedIn key=\"/login\">\n  //     <MenuItem>\n  //       <NavLinkLoginWithI18n />\n  //     </MenuItem>\n  //   </IfNotLoggedIn>\n  // ],\n  resolver: resolvers,\n  localization: { ns: 'user', resources },\n  // eslint-disable-next-line react/display-name\n  rootComponentFactory: req => (req ? <CookiesProvider cookies={req.universalCookies} /> : <CookiesProvider />)\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAOA;;;;AAXA;AACA;AAaA;AAGA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AAnEA;AAsEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AATA;AAAA;AAAA;AADA;AACA;AAgBA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AALA;AASA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAhDA;;;;A","sourceRoot":""}