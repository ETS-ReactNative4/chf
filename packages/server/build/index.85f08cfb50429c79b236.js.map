{"version":3,"file":"index.38cc74c6a36ace3d3d70.hot-update.js","sources":["src/modules/admin/resolvers.js"],"sourcesContent":["import FileUploader from '../util/FileUploader';\n\nconst getField = (field, values) => {\n  if (values.hasOwnProperty(field)) {\n    return values[field];\n  }\n};\n// const handleLocationsCheck = async (context) => {\n//  const check = await context.get.dealers();\n//  console.log('CHECK::', check);\n//  return check;\n// }\n/*eslint-disable no-unused-vars*/\nexport default pubsub => ({\n  Query: {\n    async pages(obj, input, { Admin }) {\n      try {\n        const pages = await Admin.get.pages();\n        // console.log('PAGES:::', pages);\n        if (pages.length == 0) {\n          const page = await Admin.insert.page({ id: 0, name: 'home' });\n          // console.log('PAGE::', page);\n          return page;\n        }\n        return pages;\n      } catch (e) {\n        return e;\n      }\n    },\n    async page(obj, { id, pageTitle }, { Admin, Dealers }) {\n      try {\n        if (id) {\n          return { id };\n        } else {\n          console.log('NO ID:::', pageTitle);\n          const page = await Admin.get.pageByTitle(pageTitle);\n          if (page.name === 'locations') {\n            // const check = await handleLocationsCheck(Dealers);\n            // console.log('LOCATIONSCHECK DONE', check);\n          }\n          console.log('PAGE::', page);\n          return { id: page.id, title: page.title, name: page.name };\n        }\n      } catch (e) {\n        console.log('ERRROR GETTING PAGE:', e);\n        return e;\n      }\n    },\n    async vendorData(_, { handle }, { Admin }) {\n      console.log('Vendor HANDLE:', handle);\n      try {\n        const data = await Admin.get.vendorByHandle(handle);\n        console.log('DATA::', data, handle.length);\n        if (typeof data == 'undefined' && handle.length > 0) {\n          const vendor = await Admin.insert.vendorSeo(handle);\n          console.log('VENDOR::', vendor);\n          return vendor;\n        }\n        if (handle.length == 0) {\n          return null;\n        }\n        if (data) {\n          return { handle, seo: data };\n        }\n      } catch (e) {\n        return e;\n      }\n    },\n    async collectionData(_, { handle }, { Admin }) {\n      console.log('COLLECTION HANDLE:', handle);\n      try {\n        const data = await Admin.get.collectionByHandle(handle);\n        console.log('COLLECTION DATA::', data, handle);\n        if ((typeof data == 'undefined' || !data) && handle.length > 0) {\n          const collection = await Admin.insert.collectionSeo(handle);\n          console.log('VENDOR::', collection);\n          return collection;\n        }\n        if (handle.length == 0) {\n          return null;\n        }\n        if (data) {\n          const { id, ...rest } = data;\n          console.log('WE SHOULD SEND DATA::;', data);\n          return { id, seo: rest };\n        }\n      } catch (e) {\n        return e;\n      }\n      return null;\n    }\n  },\n  Page: {\n    async fields(obj, { field_names }, { Admin }, info) {\n      // console.log('PAGE ID::', obj);\n      const { page_content } = await Admin.get.pageContents(obj.id);\n      const requestedFields = field_names\n        .map(([section, field]) => {\n          return page_content\n            .map(({ field_value, ...rest }) => {\n              const values = JSON.parse(field_value);\n              if (section == rest.section_name) {\n                const combined = Object.assign({}, rest, { [field]: getField(field, values) });\n                return combined;\n              }\n            })\n            .reduce(\n              (accum, curr) => {\n                const field_value = curr[field];\n                delete curr[field];\n                accum = Object.assign({}, accum, curr, { field_value: { [field]: field_value } });\n                return accum;\n              },\n              { field_value: null }\n            );\n        })\n        .reduce((accum, curr) => {\n          accum['field_value'] = Object.assign({}, accum['field_value'], curr['field_value']);\n          delete curr['field_value'];\n          accum = Object.assign({}, accum, curr);\n          return accum;\n        }, {});\n      // console.log('REQUESTED FIELDS:', requestedFields);\n      const { field_value, ...fields } = requestedFields;\n      const stringValues = JSON.stringify(field_value);\n      const data = { ...fields, field_value: stringValues };\n      return [data];\n    }\n  },\n  Mutation: {\n    async signS3(obj, { filename, filetype }) {\n      const signedRequest = await FileUploader.getSignedUrl({ filename, filetype });\n      // console.log('signedRequest::??', signedRequest);\n      return signedRequest;\n    },\n    async uploadPageContent(obj, { pageContent }, { Admin }) {\n      try {\n        const [data] = await Admin.update.pageContent(pageContent);\n        return data.page_content;\n      } catch (e) {\n        console.log('EERROO', e);\n      }\n    },\n    async uploadSeo(obj, { path, handle, seo }, { Admin }) {\n      console.log('PATH::', path);\n      console.log('HANDLE::', handle);\n      console.log('SEO::', seo);\n      try {\n        const [data] = await Admin.update.seo({ path, handle, seo });\n        console.log('DATA::', data);\n        return data;\n      } catch (e) {\n        console.log('ERROR UPDATING SEO DATA::', e);\n      }\n    }\n  },\n  Subscription: {}\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AALA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAcA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AACA;AAAA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AACA;AAAA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAfA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AA5EA;AA8EA;AACA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAnCA;AAqzBA;AA2BA;AA/IA;AAAA;;;;A","sourceRoot":""}