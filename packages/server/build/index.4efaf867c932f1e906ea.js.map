{"version":3,"file":"index.c920bafcc08b9e353691.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/search/containers/Search.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, graphql } from 'react-apollo';\nimport SearchView from '../components/SearchView';\nimport { FILTERED_PRODUCTS_QUERY } from '../../common/schema';\nimport CATEGORY_QUERY from '../../common/graphql/SFY/sfySingleCategoryByHandle.graphql';\nimport ADMIN_CAT_QUERY from '../../common/graphql/SFY/sfyAdminCollectionByHandle.graphql';\nimport VENDORS_QUERY from '../../common/graphql/VendorsQuery.graphql';\nimport LOC_CATEGORY_QUERY from '../../common/graphql/CategoryQuery.graphql';\n\n// handleClick = () => {\n//   const toUrlName = str => str.trim().replace(/[/\\s_]+/gi, '-');\n//   const term = toUrlName('Recumbent Bike');\n//   console.log('term', term);\n//   this.props.history.push({ pathname: '/search', search: `?q=${term}` });\n// };\n\nclass Search extends React.Component {\n  render() {\n    return <SearchView {...this.props} />;\n  }\n}\n\nconst SearchWithApollo = compose(FILTERED_PRODUCTS_QUERY(),\n  graphql(CATEGORY_QUERY, {\n    options: props => {\n      const { category: handle } = props.match.params;\n      // const page = props.location.search;\n      // console.log('PROPS HERE::', props);\n      // console.log('PAGE', page);\n      const reg = /[=](\\d)/;\n      const first = parseInt(reg.exec(props.location.search)[1]);\n      // console.log('FIRST ', first);\n      const displayLim = 12;\n      const fetchNum = first * displayLim;\n      // console.log('FETCHNUM:', fetchNum);\n      return { variables: { handle, first: fetchNum }, fetchPolicy: 'cache-first' };\n    },\n    props: ({ data }) => {\n      const { loading, error, sfy_shop, fetchMore, variables } = data;\n      // console.log('LOADING:??', data);\n      let currEndCursor, hasNextPage, hasPreviousPage;\n      if (!loading && sfy_shop) {\n        const { products } = sfy_shop.collectionByHandle;\n        if (products.edges.length > 0) currEndCursor = products.edges[products.edges.length - 1].cursor;\n        hasNextPage = products.pageInfo.hasNextPage;\n        hasPreviousPage = products.pageInfo.hasPreviousPage;\n      }\n      // console.log('Products length',sfy_shop);\n      const loadMore = async (first = 12, after = currEndCursor) => {\n        const updatedVars = { ...variables, after, first };\n        const data = await fetchMore({\n          variables: updatedVars,\n          updateQuery: (prevResult, { fetchMoreResult }) => {\n            if (fetchMoreResult.sfy_shop.collectionByHandle.products.edges.length === 0) return prevResult;\n            // console.log('PREVRESULT:', prevResult);\n            const updatedResult = JSON.parse(JSON.stringify(prevResult));\n            updatedResult.sfy_shop.collectionByHandle.products.edges = [\n              ...prevResult.sfy_shop.collectionByHandle.products.edges,\n              ...fetchMoreResult.sfy_shop.collectionByHandle.products.edges\n            ];\n            updatedResult.sfy_shop.collectionByHandle.products.pageInfo =\n              fetchMoreResult.sfy_shop.collectionByHandle.products.pageInfo;\n\n            return updatedResult;\n          }\n        });\n        // console.log('IS THIS RUNNING EVERYTIME ?', data);\n        return data;\n      };\n      // console.log('WHAT THE FUCKK::', sfy_shop);\n      if (error) throw new Error(`Error in Products Query: ${error}`);\n      if (loading || !sfy_shop) return { loading };\n      if (!loading && sfy_shop) {\n        return {\n          loading,\n          category: sfy_shop.collectionByHandle,\n          currEndCursor,\n          hasNextPage,\n          hasPreviousPage,\n          loadMore\n        };\n      }\n    }\n  }),\n  graphql(VENDORS_QUERY, {\n    props: ({ data: { loading, error, vendors } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loading, vendors };\n    }\n  }),\n  graphql(LOC_CATEGORY_QUERY, {\n    options: props => {\n      const { category: handle } = props.match.params;\n      return { variables: { handle } };\n    },\n    props: ({ data: { loading, error, category: locCategory } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loading, locCategory };\n    }\n  }),\n  graphql(ADMIN_CAT_QUERY, {\n    options: props => {\n      const { category: handle } = props.match.params;\n      return { variables: { handle } };\n    },\n    props: ({ data: { admin_collectionByHandle, loading, error } }) => {\n      // console.log('LOADING::', loading);\n      if (!loading && !error) {\n        const { productsCount } = admin_collectionByHandle;\n        return { productsCount, loadingCount: loading };\n      }\n      if (error) {\n        return { countError: error, productsCount: null };\n      }\n      return { loadingCount: loading, productsCount: null };\n\n      // if (loadingProductCount) {\n      //   return { loadingProductCount };\n      // }\n      // if (!error) {\n      //   return { loadingProductCount, productsCount };\n      // } else {\n      //   return { countError: error };\n      // }\n    }\n  })\n)(Search);\n\nSearch.propTypes = {\n  location: PropTypes.object,\n  search: PropTypes.string\n};\n\nexport default SearchWithApollo;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAdA;AACA;AAHA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AA3DA;AA8DA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AARA;AAWA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AACA;AA2BA;AACA;AACA;AAFA;AACA;AAIA;;;;A","sourceRoot":""}