{"version":3,"file":"index.dac29a64345c83ae289c.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/user/containers/UserOperations.js"],"sourcesContent":["import { graphql } from 'react-apollo';\nimport update from 'immutability-helper';\nimport { removeTypename } from '../../../../../common/utils';\n\nimport USERS_STATE_QUERY from '../graphql/UsersStateQuery.client.graphql';\nimport UPDATE_ORDER_BY from '../graphql/UpdateOrderBy.client.graphql';\nimport USERS_QUERY from '../graphql/UsersQuery.graphql';\nimport DELETE_USER from '../graphql/DeleteUser.graphql';\nimport UPDATE_FILTER from '../graphql/UpdateFilter.client.graphql';\nimport USERS_SUBSCRIPTION from '../graphql/UsersSubscription.graphql';\n\nconst withUsersState = Component =>\n  graphql(USERS_STATE_QUERY, {\n    props({ data: { usersState } }) {\n      return removeTypename(usersState);\n    }\n  })(Component);\n\nconst withUsers = Component =>\n  graphql(USERS_QUERY, {\n    options: ({ orderBy, filter, ...rest }) => {\n      console.log('ORDER BY::', orderBy, filter, rest);\n      return {\n        fetchPolicy: 'network-only',\n        variables: { orderBy, filter }\n      };\n    },\n    props({ data: { loading, users, refetch, error, subscribeToMore } }) {\n      return { loading, users, refetch, subscribeToMore, errors: error ? error.graphQLErrors : null };\n    }\n  })(Component);\n\nconst withUsersDeleting = Component =>\n  graphql(DELETE_USER, {\n    props: ({ mutate }) => ({\n      deleteUser: async id => {\n        try {\n          const {\n            data: { deleteUser }\n          } = await mutate({\n            variables: { id }\n          });\n\n          if (deleteUser.errors) {\n            return { errors: deleteUser.errors };\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })(Component);\n\nconst withOrderByUpdating = Component =>\n  graphql(UPDATE_ORDER_BY, {\n    props: ({ mutate }) => ({\n      onOrderBy: orderBy => {\n        mutate({ variables: { orderBy } });\n      }\n    })\n  })(Component);\n\nconst withFilterUpdating = Component =>\n  graphql(UPDATE_FILTER, {\n    props: ({ mutate }) => ({\n      onSearchTextChange(searchText) {\n        mutate({ variables: { filter: { searchText } } });\n      },\n      onRoleChange(role) {\n        mutate({ variables: { filter: { role } } });\n      },\n      onIsActiveChange(isActive) {\n        mutate({ variables: { filter: { isActive } } });\n      }\n    })\n  })(Component);\n\nfunction addUser(prev, node) {\n  return update(prev, {\n    users: {\n      $set: [...prev.users, node]\n    }\n  });\n}\n\nfunction deleteUser(prev, id) {\n  const index = prev.users.findIndex(user => user.id === id);\n  // ignore if not found\n  if (index < 0) {\n    return prev;\n  }\n  return update(prev, {\n    users: {\n      $splice: [[index, 1]]\n    }\n  });\n}\n\nconst subscribeToUsersList = (subscribeToMore, filter) => {\n  return subscribeToMore({\n    document: USERS_SUBSCRIPTION,\n    variables: { filter },\n    updateQuery: (\n      prev,\n      {\n        subscriptionData: {\n          data: {\n            usersUpdated: { mutation, node }\n          }\n        }\n      }\n    ) => {\n      switch (mutation) {\n        case 'CREATED':\n          return addUser(prev, node);\n        case 'DELETED':\n          return deleteUser(prev, node.id);\n        case 'UPDATED':\n          return deleteUser(prev, node.id);\n        default:\n          return prev;\n      }\n    }\n  });\n};\n\nexport { withUsersState, withUsers, withUsersDeleting, withOrderByUpdating, withFilterUpdating };\nexport { subscribeToUsersList };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAHA;AADA;AACA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAVA;AADA;AACA;AAaA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AACA;AALA;AAAA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AADA;AACA;AAoBA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AADA;AADA;AACA;AAQA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AADA;AADA;AACA;AAcA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAvBA;AAyBA;AACA;AACA;;;;;A","sourceRoot":""}