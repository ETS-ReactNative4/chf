{"version":3,"file":"index.d23577353c7ddf1658c5.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/common/schema/filteredProductsQuery.js","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/components/VendorView.web.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/containers/Vendor.jsx"],"sourcesContent":["import { graphql } from 'react-apollo';\nimport PRODUCTS_QUERY from '../graphql/SFY/sfyProductsQuery.graphql';\n\nconst capFirstLtr = str => str[0].toUpperCase() + str.slice(1);\n\nconst searchFormat = (str, joiner) => {\n  return str\n    .split('-')\n    .map(str => capFirstLtr(str))\n    .join(joiner);\n};\n\nconst vendorFilter = params => {\n  if ('vendor_name' in params) {\n    const vendorFormatted = searchFormat(params.vendor_name, ' ');\n    return `vendor:${vendorFormatted}`;\n  } else {\n    return undefined;\n  }\n};\n\nconst searchFilter = (queryStr, queryStrParam) => {\n  let filterValue = '';\n  if (queryStr && queryStr.includes(queryStrParam)) {\n    filterValue = queryStr.slice(queryStr.indexOf('=') + 1);\n  }\n  // console.log('fitlerValue', filterValue);\n  return filterValue.replace(/(-|%20)+/gi, ' ');\n};\n\nconst filteredProductsQuery = (queryString = PRODUCTS_QUERY) =>\n  graphql(queryString, {\n    options: props => {\n      let filterVal = '';\n      const { pathname } = props.location;\n      if (pathname.includes('/brands')) {\n        const { params } = props.match;\n        filterVal = vendorFilter(params);\n      } else if (pathname === '/search') {\n        const { search } = props.location;\n        filterVal = searchFilter(search, 'q');\n      }\n      return { variables: { [`first`]: 12, [`query`]: filterVal } };\n    },\n    props: ({ data }) => {\n      const { loading, error, sfy_shop, fetchMore, variables } = data;\n      const { query: searchPhrase } = variables;\n      let currEndCursor, hasNextPage, hasPreviousPage;\n      if (!loading && sfy_shop) {\n        const { products } = sfy_shop;\n        if (products.edges.length > 0) currEndCursor = products.edges[products.edges.length - 1].cursor;\n        hasNextPage = products.pageInfo.hasNextPage;\n        hasPreviousPage = products.pageInfo.hasPreviousPage;\n      }\n      const loadMore = (first = 12, after = currEndCursor) => {\n        const updatedVars = { ...variables, after, first };\n        return fetchMore({\n          variables: updatedVars,\n          updateQuery: (prevResult, { fetchMoreResult }) => {\n            if (fetchMoreResult.sfy_shop.products.edges.length === 0) return prevResult;\n            const updatedResult = JSON.parse(JSON.stringify(prevResult));\n            updatedResult.sfy_shop.products.edges = [\n              ...prevResult.sfy_shop.products.edges,\n              ...fetchMoreResult.sfy_shop.products.edges\n            ];\n            updatedResult.sfy_shop.products.pageInfo = fetchMoreResult.sfy_shop.products.pageInfo;\n            return updatedResult;\n          }\n        });\n      };\n      //\n      if (error) throw new Error(`Error in Products Query: ${error}`);\n      return { loading, sfy_shop, currEndCursor, hasNextPage, hasPreviousPage, loadMore, searchPhrase };\n    }\n  });\n\nexport default filteredProductsQuery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport classnames from 'classnames';\nimport {\n  PageLayout,\n  ScrollToTop,\n  // Hero,\n  CollapseMenu,\n  PageBreadcrumbs\n} from '../../common/components/global';\nimport { toUrlName } from '../../common/components/global/components/PageBreadcrumbs';\nimport ShopBreadcrumbs from './ShopBreadcrumbs';\nimport ShopGrid from './ShopGrid';\nimport ShopGridSort from './ShopGridSort';\nimport ShopGridPages from './ShopGridPages';\nimport Loader from '../../common/components/global/components/Loader';\n\nimport settings from '../../../../../../settings';\nimport '../styles/category-view.scss';\n\nconst capFirstLtr = str => str[0].toUpperCase() + str.slice(1);\n\nclass VendorView extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location } = props;\n    let filters = {};\n    if (\n      typeof location !== 'undefined' &&\n      'state' in location &&\n      typeof location.state !== 'undefined' &&\n      'filters' in location.state &&\n      typeof location.state.filters !== 'undefined'\n    ) {\n      filters = location.state.filters;\n    }\n    this.state = {\n      priceFilterLower: '',\n      priceFilterUpper: '',\n      priceConfirmed: false,\n      priceErr: null,\n      selectedPriceRange: null,\n      selectedPromotion: null,\n      selectedCategory: null,\n      selectedVendor: null,\n      sortMethod: 'featured',\n      displayLim: 12,\n      startDisplayIdx: 0,\n      currPg: 1,\n      filteredFinalIdx: null,\n      ...filters\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('Component DID UPDATE');\n    // const prevPageTotal = prevProps.productsCount;\n    // const totalProducts = this.props.productsCount;\n    const reg = /[=](\\d)/;\n    const { startDisplayIdx, displayLim, currPg } = this.state;\n    const action = this.props.history.action;\n    const prevPage = parseInt(reg.exec(prevProps.location.search)[1]);\n    const currentPage = parseInt(reg.exec(this.props.location.search)[1]);\n    const totalPages = Math.ceil(this.props.productsCount / displayLim);\n    // console.log('CURRENTPAGE ', currPg, prevState.currPg);\n    if (this.props.category) {\n      if (prevPage !== 1 && displayLim !== prevState.displayLim) {\n        // console.log('EDGES FINAL IDX', edgesFinalIdx, 'CURR PAGE:', currentPage);\n        // console.log('START DISPALY INDEX ', startDisplayIdx);\n        this.setState({ startDisplayIdx: displayLim, currPg: 1 });\n        return this.props.history.push({ pathname: this.props.location.pathname, search: `page=${1}` });\n      }\n      const { edges } = this.props.category.products;\n\n      const edgesFinalIdx = edges.length;\n      let finalStartIdx;\n      if (currentPage !== 1) {\n        finalStartIdx = edgesFinalIdx - currentPage + 1;\n      } else {\n        finalStartIdx = 0;\n      }\n\n      if (startDisplayIdx == 0 && currentPage !== 1 && currentPage !== totalPages) {\n        // console.log(' 1ST IF HIT START DISPLAY INDEX:', startDisplayIdx);\n        const nextStartIdX = edgesFinalIdx / 2;\n        // console.log('nextStartIdX', nextStartIdX);\n        return this.setState({ startDisplayIdx: nextStartIdX, currPg: currentPage });\n      } else if (currentPage == totalPages && startDisplayIdx !== finalStartIdx) {\n        // console.log('CURRENT PAGE:', currentPage);\n        // console.log('DISPLAY LIM::', this.state.displayLim);\n        // console.log('TOTAL Pages::', totalPages);\n        // console.log('TOTAL PRODUCTS', totalProducts);\n        // console.log('FINAL START:', finalStartIdx);\n        return this.setState({ startDisplayIdx: finalStartIdx, currPg: currentPage });\n      } else if (currentPage !== prevPage) {\n        // console.log('ELSE HIT:::', nextIdx);\n        let nextIdx = 0;\n        nextIdx = prevState.startDisplayIdx - displayLim;\n        if (currentPage < prevPage) {\n          return this.setState({ startDisplayIdx: nextIdx, currPg: currentPage });\n        }\n        if (currentPage == 1 && nextIdx !== 0) {\n          return this.setState({ startDisplayIdx: 0, currPg: currentPage });\n        } else if (currPg !== prevState.currPg) {\n          if (currentPage == 1 && nextIdx !== 0) {\n            return this.setState({ startDisplayIdx: 0, currPg: currentPage });\n          }\n          const nextStartIdX = edgesFinalIdx / 2;\n          // console.log('THIS SHOULD HIT');\n          return this.setState({ startDisplayIdx: nextStartIdX, currPg: currentPage });\n        }\n        // if (currentPage == 1) {\n        // return this.setState({ startDisplayIdx: finalStartIdx, currPg: currentPage });\n\n        // }\n      }\n\n      return; //this.loadNext(currentPage, startIdx);\n    }\n  }\n  handleInput = e => this.setState({ [e.target.name]: e.target.value });\n  scrollToGridTop = () => {\n    return window.scrollTo({\n      top: 200,\n      left: 0,\n      behavior: 'smooth'\n    });\n  };\n  applyPriceFilter = e => {\n    e.preventDefault();\n    this.setState({ priceErr: null });\n    const { priceFilterUpper: u, priceFilterLower: l } = this.state;\n\n    // Validate limits\n    if (!u || !l) return this.setState({ priceErr: 'Please enter an upper and lower price limit.' });\n    const isPrice = new RegExp(/^\\d+(\\.\\d{2})?$/, 'i');\n    if ([u, l].map(lim => isPrice.test(lim)).some(res => res == false)) {\n      return this.setState({ priceErr: 'Please enter valid prices.' });\n    }\n    // If validated, apply filter\n    this.setState({ priceConfirmed: true });\n  };\n  clearPriceFilter = e => {\n    e.preventDefault();\n    this.setState({ priceConfirmed: false, priceFilterLower: '', priceFilterUpper: '' });\n  };\n  getIdxsAndLims = () => {\n    const { edges } = this.props.sfy_shop.products;\n    const { startDisplayIdx, displayLim, currPg } = this.state;\n    const edgesFinalIdx = edges.length - 1;\n    const finalDisplayIdx = startDisplayIdx + displayLim - 1;\n    return { startDisplayIdx, displayLim, currPg, edgesFinalIdx, finalDisplayIdx };\n  };\n  setFilteredFinalIdx = filteredProds => {\n    this.setState({ filteredFinalIdx: filteredProds.length - 1 });\n  };\n  isPaginationDisabled = type => {\n    const { hasNextPage } = this.props;\n    const { selectedVendor, selectedCategory, filteredFinalIdx } = this.state;\n    const { startDisplayIdx, finalDisplayIdx, edgesFinalIdx } = this.getIdxsAndLims();\n    if (type === 'forward') {\n      if (selectedVendor || selectedCategory) {\n        if (finalDisplayIdx < filteredFinalIdx) return false;\n        else return true;\n      }\n      if (finalDisplayIdx < edgesFinalIdx) return false;\n      else {\n        if (hasNextPage) return false;\n        else return true;\n      }\n    }\n    if (type === 'back') {\n      if (startDisplayIdx > 0) return false;\n      else return true;\n    }\n  };\n  handleLimChange = e => {\n    const newLim = parseInt(e.target.value);\n    const { displayLim: oldLim, edgesFinalIdx } = this.getIdxsAndLims();\n    const nextFinalDisplayIdx = newLim - 1;\n    if (newLim > oldLim) {\n      if (nextFinalDisplayIdx > edgesFinalIdx) {\n        const first = nextFinalDisplayIdx - edgesFinalIdx;\n        this.props.loadMore(first);\n      }\n    }\n    return this.setState({ startDisplayIdx: 0, displayLim: newLim, currPg: 1 });\n  };\n  handlePageForward = () => {\n    const { currPg } = this.getIdxsAndLims();\n    // const nextStartDisplayIdx = startDisplayIdx + displayLim;\n    // const nextFinalDisplayIdx = nextStartDisplayIdx + displayLim - 1;\n    // if (nextFinalDisplayIdx > edgesFinalIdx) {\n    //   const first = nextFinalDisplayIdx - edgesFinalIdx;\n    //   this.props.loadMore(first);\n    // }\n    // console.log('currPage', currPg);\n    // this.setState({ startDisplayIdx: nextStartDisplayIdx, currPg: currPg + 1 }, () => this.scrollToGridTop());\n    this.props.history.push({ pathname: this.props.location.pathname, search: `page=${currPg + 1}` });\n  };\n  handlePageBack = () => {\n    const { startDisplayIdx, displayLim, currPg } = this.getIdxsAndLims();\n    const backLog = startDisplayIdx - displayLim;\n    if (backLog >= 0) {\n      this.setState({ currPg: currPg - 1 });\n      // this.props.history.goBack();\n      this.props.history.push({ pathname: this.props.location.pathname, search: `page=${currPg - 1}` });\n    } else {\n      this.props.history.push({ pathname: this.props.location.pathname, search: `page=${1}` });\n    }\n  };\n  selectSortMethod = sortMethod => this.setState({ sortMethod: sortMethod });\n  selectPriceRange = priceRangeId => {\n    const { selectedPriceRange } = this.state;\n    if (selectedPriceRange && selectedPriceRange === priceRangeId) {\n      this.setState({ selectedPriceRange: null });\n    } else {\n      this.setState({ selectedPriceRange: priceRangeId });\n    }\n  };\n  selectPromotion = promotionId => {\n    const { selectedPromotion } = this.state;\n    if (selectedPromotion && selectedPromotion === promotionId) {\n      this.setState({ selectedPromotion: null });\n    } else {\n      this.setState({ selectedPromotion: promotionId });\n    }\n  };\n  selectCategory = categoryId => {\n    const { selectedCategory } = this.state;\n    if (selectedCategory && selectedCategory === categoryId) {\n      this.setState({ selectedCategory: null, startDisplayIdx: 0, currPg: 1 });\n    } else {\n      if (this.props.hasNextPage) this.props.loadMore(100);\n      this.setState({ selectedCategory: categoryId, startDisplayIdx: 0, currPg: 1 });\n    }\n  };\n  selectVendor = vendorId => {\n    const { selectedVendor } = this.state;\n    if (selectedVendor && selectedVendor === vendorId) {\n      this.setState({ selectedVendor: null, startDisplayIdx: 0, currPg: 1 });\n    } else {\n      if (this.props.hasNextPage) this.props.loadMore(100);\n      this.setState({ selectedVendor: vendorId, startDisplayIdx: 0, currPg: 1 });\n    }\n  };\n  parseCategories = () => {\n    const {\n      sfy_shop_collections: {\n        collections: { edges: categories }\n      }\n    } = this.props;\n    return categories.map(({ node: { id, title: name } }) => ({ id, name, url_name: toUrlName(name) }));\n  };\n  calcTotalPages = (totalProducts, lim) => {\n    // console.log('TOTAL PRODUCTS::', totalProducts);\n    const total = Math.ceil(totalProducts / lim);\n    let pages = [];\n    let count;\n    for (count = 0; count < total; count += 1) {\n      pages.push(count + 1);\n    }\n    // console.log('PAGES::', pages);\n    return pages;\n  };\n  pageClick = page => {\n    // console.log('value::', page, currIdx);\n    this.setState({ currPg: page });\n    this.props.history.push({ pathname: this.props.location.pathname, search: `page=${page}` });\n    // const startIdx =\n  };\n  render() {\n    const { selectedPriceRange, selectedPromotion, selectedCategory } = this.state;\n    const {\n      promotions,\n      priceRanges,\n      vendor,\n      // heroImage,\n      bannerImage,\n      loading,\n      sfy_shop,\n      sfy_shop_collections\n    } = this.props;\n    const { priceConfirmed, priceFilterUpper, priceFilterLower, displayLim } = this.state;\n    const filtersToPass = { priceConfirmed, priceFilterUpper, priceFilterLower };\n    // console.log(\"BRAND PROPS\", vendor);\n    const renderMetaData = vendor => (\n      <Helmet\n        title={vendor.title}\n        meta={[\n          {\n            name: 'description',\n            content: `${vendor.description}`\n          },\n          {\n            name: 'keywords',\n            content: `${vendor.keywords}`\n          }\n        ]}\n      />\n    );\n    if (loading || !sfy_shop || !sfy_shop_collections || !vendor) {\n      return (\n        <PageLayout>\n          {/* {renderMetaData(vendor)} */}\n          <Loader />\n        </PageLayout>\n      );\n    } else if (vendor && !sfy_shop) {\n      return (\n        <PageLayout>\n          {renderMetaData(vendor.vendorData.seo)}\n          <Loader />\n        </PageLayout>\n      );\n    } else {\n      const { products } = sfy_shop;\n      const { collections: categories } = sfy_shop_collections;\n      return (\n        <PageLayout>\n          {renderMetaData(vendor.vendorData.seo)}\n          <ScrollToTop />\n          {/* <Hero overlayNav={true} image={heroImage} /> */}\n          {/* <LowPriceBanner /> */}\n          <img src={bannerImage.link} alt={bannerImage.name} />\n          <PageBreadcrumbs {...this.props} />\n          <div className=\"category-view\">\n            <div className=\"category-view__sidebar\">\n              <div className=\"category-view__collapse-label\">FILTER BY</div>\n              <div className=\"category-view__collapse-menu\">\n                {categories && categories.edges.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"CATEGORY\">\n                      {categories.edges.map(({ node: { id, title } }) => (\n                        <div\n                          key={id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedCategory === id\n                          })}\n                          onClick={() => this.selectCategory(id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{title}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                <div className=\"category-view__collapse\">\n                  <CollapseMenu label=\"PRICE\">\n                    <form className=\"category-view__collapse-item\">\n                      <div>\n                        <label>Lower Limit</label>\n                        <div>\n                          <span>$</span>\n                          <input\n                            style={{ width: '60%' }}\n                            type=\"text\"\n                            name=\"priceFilterLower\"\n                            value={this.state.priceFilterLower}\n                            placeholder=\"0\"\n                            onChange={e => this.handleInput(e)}\n                          />\n                        </div>\n                      </div>\n                      <div>\n                        <label>Upper Limit</label>\n                        <div>\n                          <span>$</span>\n                          <input\n                            style={{ width: '60%' }}\n                            type=\"text\"\n                            name=\"priceFilterUpper\"\n                            value={this.state.priceFilterUpper}\n                            placeholder=\"0\"\n                            onChange={e => this.handleInput(e)}\n                          />\n                        </div>\n                      </div>\n                      <button disabled={this.state.priceConfirmed} onClick={e => this.applyPriceFilter(e)}>\n                        Confirm\n                      </button>\n                      {this.state.priceConfirmed ? (\n                        <button onClick={e => this.clearPriceFilter(e)}> Clear </button>\n                      ) : null}\n                      {this.state.priceErr ? <div>{this.state.priceErr}</div> : null}\n                    </form>\n                  </CollapseMenu>\n                </div>\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                {'promotions' in this.props && promotions.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"PROMOTIONS\">\n                      {promotions.map(promotion => (\n                        <div\n                          key={promotion.id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedPromotion === promotion.id\n                          })}\n                          onClick={() => this.selectPromotion(promotion.id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{promotion.name}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                {'priceRanges' in this.props && priceRanges.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"PRICE RANGE\">\n                      {priceRanges.map(priceRange => (\n                        <div\n                          key={priceRange.id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedPriceRange === priceRange.id\n                          })}\n                          onClick={() => this.selectPriceRange(priceRange.id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{priceRange.name}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"category-view__main\">\n              <h1 className=\"header header--upper header--primary category-view__main-header\">\n                {products.edges.length > 0\n                  ? `${products.edges[0].node.vendor} Equipment`\n                  : this.props.match.params.vendor_name\n                      .split('-')\n                      .map(item => capFirstLtr(item))\n                      .join(' ')}\n              </h1>\n              <ShopBreadcrumbs\n                categories={vendor.categories}\n                for=\"category\"\n                filtersToPass={filtersToPass}\n                vendorUrlName={this.props.match.params.vendor_name}\n              />\n              <ShopGridSort\n                selectSortMethod={this.selectSortMethod}\n                handleLimChange={this.handleLimChange}\n                {...this.state}\n              />\n              <ShopGrid\n                {...this.state}\n                {...this.props}\n                products={products}\n                setFilteredFinalIdx={this.setFilteredFinalIdx}\n              />\n              <ShopGridPages\n                {...this.props}\n                {...this.state}\n                currentPageIdx={this.state.currentPageIdx}\n                pageClick={this.pageClick}\n                pages={this.calcTotalPages(this.props.productsCount, displayLim)}\n                currentPage={this.props.page}\n                isDisabled={this.isPaginationDisabled}\n                handlePageForward={this.handlePageForward}\n                handlePageBack={this.handlePageBack}\n              />\n              {/* <ShopGridPages\n                {...this.props}\n                {...this.state}\n                isDisabled={this.isPaginationDisabled}\n                handlePageForward={this.handlePageForward}\n                handlePageBack={this.handlePageBack}\n              /> */}\n            </div>\n          </div>\n        </PageLayout>\n      );\n    }\n  }\n}\n\nVendorView.propTypes = {\n  location: PropTypes.object,\n  promotions: PropTypes.array,\n  priceRanges: PropTypes.array,\n  vendor: PropTypes.object,\n  heroImage: PropTypes.object,\n  bannerImage: PropTypes.object,\n  vendors: PropTypes.array,\n  loading: PropTypes.bool,\n  sfy_shop: PropTypes.object,\n  hasNextPage: PropTypes.bool,\n  loadMore: PropTypes.func,\n  match: PropTypes.object,\n  sfy_shop_collections: PropTypes.object\n};\nVendorView.defaultProps = {\n  heroImage: {\n    name: 'Shop',\n    link: 'https://s3-us-west-2.amazonaws.com/chf-rcomm/shop_hero.png'\n  },\n  bannerImage: {\n    name: 'Low Price Guaranteed',\n    link: 'https://s3-us-west-2.amazonaws.com/chf-rcomm/shop_banner.png'\n  }\n};\n\nexport default VendorView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport VendorView from '../components/VendorView';\nimport { FILTERED_PRODUCTS_QUERY } from '../../common/schema';\nimport COLLECTIONS_QUERY from '../../common/graphql/SFY/sfyCollectionsQuery.graphql';\nimport VENDOR_QUERY from '../../common/graphql/VendorQuery.graphql';\nimport CATEGORY_QUERY from '../../common/graphql/SFY/sfySingleCategoryByHandle.graphql';\nimport ADMIN_CAT_QUERY from '../../common/graphql/SFY/sfyAdminCollectionByHandle.graphql';\nimport VENDORS_QUERY from '../../common/graphql/VendorsQuery.graphql';\nimport LOC_CATEGORY_QUERY from '../../common/graphql/CategoryQuery.graphql';\n\nclass Vendor extends React.Component {\n  render() {\n    return <VendorView {...this.props} />;\n  }\n}\n\nconst VendorWithApollo = compose(\n  FILTERED_PRODUCTS_QUERY(),\n  graphql(CATEGORY_QUERY, {\n    options: props => {\n      const { category: handle } = props.match.params;\n      // const page = props.location.search;\n      // console.log('PROPS HERE::', props);\n      // console.log('PAGE', page);\n      const reg = /[=](\\d)/;\n      const first = parseInt(reg.exec(props.location.search)[1]);\n      // console.log('FIRST ', first);\n      const displayLim = 12;\n      const fetchNum = first * displayLim;\n      // console.log('FETCHNUM:', fetchNum);\n      return { variables: { handle, first: fetchNum }, fetchPolicy: 'cache-first' };\n    },\n    props: ({ data }) => {\n      const { loading, error, sfy_shop, fetchMore, variables } = data;\n      // console.log('LOADING:??', data);\n      let currEndCursor, hasNextPage, hasPreviousPage;\n      if (!loading && sfy_shop) {\n        const { products } = sfy_shop.collectionByHandle;\n        if (products.edges.length > 0) currEndCursor = products.edges[products.edges.length - 1].cursor;\n        hasNextPage = products.pageInfo.hasNextPage;\n        hasPreviousPage = products.pageInfo.hasPreviousPage;\n      }\n      // console.log('Products length',sfy_shop);\n      const loadMore = async (first = 12, after = currEndCursor) => {\n        const updatedVars = { ...variables, after, first };\n        const data = await fetchMore({\n          variables: updatedVars,\n          updateQuery: (prevResult, { fetchMoreResult }) => {\n            if (fetchMoreResult.sfy_shop.collectionByHandle.products.edges.length === 0) return prevResult;\n            // console.log('PREVRESULT:', prevResult);\n            const updatedResult = JSON.parse(JSON.stringify(prevResult));\n            updatedResult.sfy_shop.collectionByHandle.products.edges = [\n              ...prevResult.sfy_shop.collectionByHandle.products.edges,\n              ...fetchMoreResult.sfy_shop.collectionByHandle.products.edges\n            ];\n            updatedResult.sfy_shop.collectionByHandle.products.pageInfo =\n              fetchMoreResult.sfy_shop.collectionByHandle.products.pageInfo;\n\n            return updatedResult;\n          }\n        });\n        // console.log('IS THIS RUNNING EVERYTIME ?', data);\n        return data;\n      };\n      // console.log('WHAT THE FUCKK::', sfy_shop);\n      if (error) throw new Error(`Error in Products Query: ${error}`);\n      if (loading || !sfy_shop) return { loading };\n      if (!loading && sfy_shop) {\n        return {\n          loading,\n          category: sfy_shop.collectionByHandle,\n          currEndCursor,\n          hasNextPage,\n          hasPreviousPage,\n          loadMore\n        };\n      }\n    }\n  }),\n  graphql(VENDORS_QUERY, {\n    props: ({ data: { loading, error, vendors } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loading, vendors };\n    }\n  }),\n  // graphql(LOC_CATEGORY_QUERY, {\n  //   options: props => {\n  //     const { category: handle } = props.match.params;\n  //     return { variables: { handle } };\n  //   },\n  //   props: ({ data: { loading, error, category: locCategory } }) => {\n  //     if (error) throw new Error(`Error in Vendors Query: ${error}`);\n  //     return { loading, locCategory };\n  //   }\n  // }),\n  graphql(ADMIN_CAT_QUERY, {\n    options: props => {\n      const { category: handle } = props.match.params;\n      return { variables: { handle } };\n    },\n    props: ({ data: { admin_collectionByHandle, loading, error } }) => {\n      // console.log('LOADING::', loading);\n      if (!loading && !error) {\n        const { productsCount } = admin_collectionByHandle;\n        return { productsCount, loadingCount: loading };\n      }\n      if (error) {\n        return { countError: error, productsCount: null };\n      }\n      return { loadingCount: loading, productsCount: null };\n\n      // if (loadingProductCount) {\n      //   return { loadingProductCount };\n      // }\n      // if (!error) {\n      //   return { loadingProductCount, productsCount };\n      // } else {\n      //   return { countError: error };\n      // }\n    }\n  }),\n  graphql(COLLECTIONS_QUERY, {\n    options: () => {\n      return { variables: { [`first`]: 50 } };\n    },\n    props: ({ data }) => {\n      const { loading, error, sfy_shop: sfy_shop_collections } = data;\n      if (error) throw new Error(`Error in Categories (Vendor Page) Query: ${error}`);\n      return { loading, sfy_shop_collections };\n    }\n  }),\n  graphql(VENDOR_QUERY, {\n    options: props => {\n      console.log('PROPS MATCH::', props.match.params);\n      return { variables: { input: { handle: props.match.params.vendor_name } } };\n    },\n    props: ({ data }) => {\n      const { loading, error, vendor } = data;\n      // console.log('DATA:::', data);\n      if (error) throw new Error(`Error in Categories (Vendor Page) Query: ${error}`);\n      return { loading, vendor };\n    }\n  })\n)(Vendor);\n\nVendor.propTypes = {\n  location: PropTypes.object,\n  search: PropTypes.string\n};\n\nexport default VendorWithApollo;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AA1CA;AADA;AACA;AA6CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAgGA;AAAA;AACA;AAjGA;AAkGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAxGA;AAyGA;AACA;AAFA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAtHA;AAuHA;AACA;AACA;AACA;AA1HA;AA0HA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAjIA;AAkIA;AACA;AACA;AApIA;AAoIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxJA;AAyJA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApKA;AAoKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAhLA;AAgLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3LA;AA2LA;AAAA;AACA;AA5LA;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApMA;AAoMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5MA;AA4MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArNA;AAqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9NA;AA8NA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAtOA;AAuOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjPA;AAkPA;AACA;AACA;AACA;AACA;AACA;AAvPA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAbA;AA6BA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAwJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAPA;AADA;AAeA;AACA;AACA;AAAA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAFA;AAFA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAFA;AAFA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAnCA;AADA;AADA;AADA;AA2CA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAmBA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAnFA;AAuGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAKA;AAGA;AACA;AAJA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AA1BA;AAxGA;AAPA;AA+JA;AACA;;;;AAxcA;AACA;AA0cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAdA;AACA;AAHA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AA3DA;AA8DA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA2BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAVA;AACA;AAaA;AACA;AACA;AAFA;AACA;AAIA;;;;A","sourceRoot":""}