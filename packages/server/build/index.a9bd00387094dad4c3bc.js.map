{"version":3,"file":"index.f0aac1eb9e1666d0508e.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/components/SimilarProducts.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import classnames from 'classnames';\nimport { Link } from 'react-router-dom';\n//import removeVendorName from '../utils/helpers';\n//import { toUrlName } from '../../common/components/global/components/PageBreadcrumbs';\nimport ResponsiveShpfyPicture from '../../common/components/global/components/ResponsiveShpfyPicture';\n\nimport '../styles/similar-products.scss';\n\nclass SimilarProducts extends React.Component {\n  location = handle => ({ pathname: `/product/${handle}` });\n  renderImage = image => {\n    const className = image.hasOwnProperty('className') ? image.className : '';\n    const options = {\n      image: image.link,\n      altText: image.name,\n      className,\n      image_size: '300X300',\n      sources: [\n        {\n          image: image.link,\n          image_size: '700X700',\n          size: '(min-width: 990px)'\n        },\n        {\n          image: image.link,\n          image_size: '370X370',\n          size: '(max-width: 450px)'\n        }\n      ]\n    };\n    return <ResponsiveShpfyPicture options={options} />;\n  };\n  productLocation = (vendor, handle, id, title, productType) => {\n    // console.log('ID', id, 'TITLE', title, 'PRODUCT TYPE', productType);\n    // console.log('NODE::', node);\n    const regex = /(\\/|[\"])/gm;\n    const subst = ``;\n\n    // The substituted value will be contained in the result variable\n    const result = title.replace(regex, subst);\n    const path = vendor\n      .split(' ')\n      .join('-')\n      .toLowerCase();\n    // console.log('HANDLE:::', `/product/${path}/${handle}`);\n\n    return {\n      pathname: `/product/${path}/${result\n        .split(' ')\n        .join('-')\n        .toLowerCase()}/${productType\n        .split('/')\n        .join('-')\n        .toLowerCase()}`,\n      state: handle,\n      search: `handle=${handle}`\n    };\n  };\n\n  render() {\n    const { relatedProducts } = this.props;\n    if (!relatedProducts || (Array.isArray(relatedProducts) && relatedProducts.length === 0)) return null;\n    return (\n      <div className=\"similar-products\">\n        <h2 className=\"similar-products__header\">Similar items related to this product.</h2>\n        <div className=\"similar-products__description\">\n          Based on your selection, here are similar items you may be interested in.\n        </div>\n        <div className=\"similar-products__item-container\">\n          {Array.isArray(relatedProducts) && relatedProducts.length > 0 ? (\n            relatedProducts.map(({ id, handle, image, vendor, title, productType }) => (\n              <Link\n                key={id}\n                to={this.productLocation(vendor, handle, id, title, productType)}\n                className=\"similar-products__item\"\n              >\n                {/* <img src={image} alt={title} /> */}\n                {this.renderImage({ link: image, name: title })}\n\n                <div className=\"similar-products__item-name\">{`${vendor} ${title}`}</div>\n              </Link>\n            ))\n          ) : (\n            <span>No similar product(s) to display</span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nSimilarProducts.propTypes = {\n  relatedProducts: PropTypes.array\n};\n\nexport default SimilarProducts;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAXA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAOA;AACA;AATA;AAWA;;;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AARA;AADA;AAaA;AAAA;AAAA;AAAA;AAfA;AALA;AAyBA;;;;AAhFA;AACA;AAkFA;AACA;AADA;AACA;AAGA;;;;A","sourceRoot":""}