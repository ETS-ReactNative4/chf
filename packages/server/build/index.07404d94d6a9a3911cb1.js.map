{"version":3,"file":"index.122921625bac7c02c2f1.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/locations/components/Map.jsx"],"sourcesContent":["import React from 'react';\nimport { compose, withProps, withStateHandlers, lifecycle } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps';\n// import { FaLocationArrow, FaMapMarkerAlt } from 'react-icons/fa';\nimport UserLocation from '../assets/UserLocation.png';\nimport MapMarker from '../assets/MapMarker.png';\nimport '../styles/map.scss';\n\nconst Map = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=AIzaSyCb-6kBhsPsodgVOuaG6AubbqcmFx3sJiA&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div className={'map-loading-ele'} style={{ height: `100%` }} />,\n    containerElement: <div className={'map__container'} style={{ height: `100%` }} />,\n    mapElement: <div className={'map__map-element'} style={{ height: `100%` }} />\n  }),\n  withStateHandlers(() => ({ isOpen: null }), {\n    onToggleOpen: () => marker => ({\n      isOpen: marker.street\n    })\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.setState({\n        onMapMounted: ref => {\n          refs.map = ref;\n        },\n        onBoundsChanged: () => {\n          // probs need to bring this back long term\n        },\n        onPlacesChanged: bounds => {\n          // console.log('BOUNDS:;', bounds);\n          // if (bounds.j.j === bounds.j.l && bounds.l.j === bounds.l.l) {\n          //   const center = this.props.center;\n          //   const { dealers } = this.props;\n          //   const dealer = this.props.closestDealer(dealers, center);\n          //   refs.map.fitBounds(bounds.extend({ lat: dealer.lat, lng: dealer.lng }));\n          // } else {\n          refs.map.fitBounds(bounds);\n          // }\n        }\n      });\n    },\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.center !== this.props.center) {\n        this.state.onPlacesChanged(nextProps.bounds);\n      }\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => {\n  if (props.selectedLocation) props.onToggleOpen({ street: props.selectedLocation });\n\n  return (\n    <GoogleMap\n      options={{\n        fullscreenControl: props.fullscreenControl\n      }}\n      ref={props.onMapMounted}\n      onBoundsChanged={props.onBoundsChanged}\n      defaultZoom={props.zoom}\n      defaultCenter={props.center}\n    >\n      {props.markers\n        ? props.markers.map(({ node: marker }) => {\n            console.log('MARKER::', marker);\n            return marker ? (\n              <Marker\n                key={marker.id}\n                // ref={c => (this[`marker_${marker.id}`] = c)}\n                icon={{ url: MapMarker }}\n                position={{ lat: parseInt(marker.lat), lng: parseInt(marker.lng) }}\n                onClick={() => {\n                  props.selectLocation(marker.street);\n                  props.onToggleOpen(marker);\n                }}\n              >\n                {props.isOpen === marker.street && (\n                  <InfoWindow\n                    className={'map__info-window'}\n                    onCloseClick={() => {\n                      props.clearLocation();\n                      props.onToggleOpen({ street: null });\n                    }}\n                  >\n                    <div className={'map__info-window-text-container'} data-marker-id={marker.id}>\n                      <p className={'map__info-window-text'}>{marker.name}</p>\n                      <p className={'map__info-window-text'}>\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={`https://www.google.com/maps/dir/?api=1&destination=${marker.street.replace(\n                            ' ',\n                            '+'\n                          )}+${marker.city.replace(' ', '+')}+${marker.country.replace(' ', '+')}`}\n                        >\n                          {marker.street} {marker.address_2 ? `, ${marker.address_2}` : null}\n                          <br />\n                          {marker.city}, {marker.state} {marker.zip}\n                        </a>\n                      </p>\n                      <p className={'map__info-window-text'}>\n                        <a href={`tel:${marker.phone}`}>{marker.phone}</a>\n                      </p>\n                      <p className={'map__info-window-text'}>\n                        <a href={`mailto:${marker.email}`}>{marker.email}</a>\n                      </p>\n                      <p className={'map__info-window-text'}>\n                        <a\n                          className={'map__info-window-text'}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={`https://${marker.website}`}\n                        >\n                          {marker.website}\n                        </a>\n                      </p>\n                    </div>\n                  </InfoWindow>\n                )}\n              </Marker>\n            ) : null;\n          })\n        : null}\n      {props.search && props.center ? (\n        <Marker\n          position={props.center}\n          icon={{\n            url: UserLocation\n          }}\n        />\n      ) : null}\n    </GoogleMap>\n  );\n});\n\nexport default Map;\n"],"mappings":";;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAgCA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAQA;AARA;AAQA;AACA;AACA;AAVA;AAUA;AAVA;AAUA;AAVA;AADA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AADA;AAtBA;AAPA;AAXA;AAuDA;AAEA;AAEA;AACA;AACA;AADA;AAFA;AAvEA;AAgFA;AACA;AACA;;;;A","sourceRoot":""}