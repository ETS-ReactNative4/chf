{"version":3,"file":"index.9448b36e72af617e4a95.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/styles/main-layout.scss","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/styles/productspecs.scss","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/AdminView.web.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Menu.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/ProductSpecs/ProductTable.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/ProductSpecs/index.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Seo/index.js","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/containers/Products.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/graphql/Products.graphql","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/index.web.jsx","webpack:///../client/src/modules/admin/styles/productspecs.scss?8359","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/common/components/web/ui-bootstrap/components/Table.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/common/graphql/UpdateProductData.graphql","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/common/graphql/VendorQuery.graphql","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/common/schema/adminProductsQuery.js","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/components/VendorView.web.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/containers/Vendor.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/index.web.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/profile/components/ManageSpecs.jsx","src/modules/admin/resolvers.js","src/modules/vendor/resolvers.js","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/server/src/modules/vendor/schema.graphql"],"sourcesContent":["exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"html{overflow-x:hidden}#root{position:relative;min-height:100vh;-ms-flex-direction:column;flex-direction:column}#root,.admin-layout{display:-ms-flexbox;display:flex}.admin-layout{background-color:#f9f9f9;height:100vh}.admin-layout__content{-ms-flex-direction:column;flex-direction:column;background-color:#f1f1f1;width:100vw}\", \"\", {\"version\":3,\"sources\":[\"/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/styles/main-layout.scss\"],\"names\":[],\"mappings\":\"AAEA,KACE,iBAAkB,CACnB,MAKC,kBAAkB,iBAED,0BACjB,qBAAsB,CAEvB,oBANC,oBAAA,YAAa,CAQf,cACE,yBACA,YAAa,CASb,uBACE,0BAAA,sBAAsB,yBACG,WACb,CAEb\",\"file\":\"main-layout.scss\",\"sourcesContent\":[\"@import './utils/index';\\n\\nhtml {\\n  overflow-x: hidden;\\n}\\n\\n// sass-lint:disable-block no-ids\\n#root {\\n  display: flex;\\n  position: relative;\\n  // max-width: 100vw;\\n  min-height: 100vh;\\n  flex-direction: column;\\n  // overflow-x: hidden;\\n}\\n\\n.admin-layout {\\n  background-color: $siteBackgroundColor;\\n  height: 100vh;\\n  display: flex;\\n  // &__navbar {\\n  //   background-color: $contentBackgroundColor;\\n  //   @media (min-width: 1109px) {\\n  //     background-color: $headerBackgroundColor;\\n  //     height: $headerHeight;\\n  //   }\\n  // }\\n  &__content {\\n    flex-direction: column;\\n    background-color: #f1f1f1;\\n    width: 100vw;\\n    // width: calc(100% - 15%);\\n  }\\n  // &__footer {\\n  //   background-color: $footerBackgroundColor;\\n  // }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".admin .profile-view__sidebar{border-right:1px solid;height:100vh}.admin .profile-view__content{height:calc(100vh - 20px);position:relative;padding:0 30px;width:80vw}.admin__tableview{border:1px solid;padding:0 30px 30px}.admin__productspecs{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.admin__productspecs .table{width:100%;font-size:1em}.admin__productspecs .table-dark{background-color:#212529}.admin__productspecs .table tbody,.admin__productspecs .table thead tr th h3{color:#1b1c1c}.admin__productspecs .table tbody tr{border-bottom:1px solid}.admin__productspecs .table tbody tr td div{padding:10px 0}.admin__productspecs .table tbody tr td div img{height:3.125em;width:3.125em}.admin__productspecs .table tbody tr:last-of-type{border-bottom:none}.admin__productspecs .table tbody tr:nth-of-type(odd){background-color:hsla(0,0%,100%,.05)}.admin__searchbox{margin-left:11%;border:2px solid #1b1c1c;width:40%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.admin__searchbox span{padding-left:10px}.admin__loadmore{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.admin__loadmore button{border:1px solid;padding:10px}\", \"\", {\"version\":3,\"sources\":[\"/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/styles/productspecs.scss\"],\"names\":[],\"mappings\":\"AACA,8BAGM,uBAAuB,YACV,CAJnB,8BAQM,0BAA0B,kBAER,eACQ,UACf,CACZ,kBAGD,iBAAiB,mBACU,CAC5B,qBAGC,oBAAA,aAAa,0BACb,qBAAsB,CAHvB,4BAWG,WAAW,aACG,CAZjB,iCAcK,wBAAyB,CAd9B,6EA8BK,aAAc,CA9BnB,qCAgCO,uBAAwB,CAhC/B,4CAmCW,cAA0B,CAnCrC,gDAqCa,eAAe,aACD,CAtC3B,kDA4CO,kBAAmB,CA5C1B,sDA+CO,oCAAqC,CACtC,kBAQL,gBAAgB,yBACS,UACf,oBACV,aAAa,sBACb,kBAAmB,CALpB,uBAOG,iBAAkB,CACnB,iBAGD,oBAAA,aAAa,qBACb,sBAAuB,CAFxB,wBAKG,iBAAiB,YACJ,CACd\",\"file\":\"productspecs.scss\",\"sourcesContent\":[\"@import './utils/index';\\n.admin {\\n  .profile-view {\\n    &__sidebar {\\n      border-right: solid 1px;\\n      height: 100vh;\\n    }\\n    &__content {\\n      // height: 100vh;\\n      height: calc(100vh - 20px);\\n\\n      position: relative;\\n      padding: 0px 30px 0px 30px;\\n      width: 80vw;\\n    }\\n  }\\n  &__tableview {\\n    border: solid 1px;\\n    padding: 0px 30px 30px 30px;\\n  }\\n  &__productspecs {\\n    // width: inherit;\\n    display: flex;\\n    flex-direction: column;\\n    // border: solid 1px;\\n    // height: 100vh;\\n    // overflow-y: scroll;\\n    // padding: 30px;\\n    // width: calc(100vw - 25vw);\\n    // position: relative;\\n    .table {\\n      width: 100%;\\n      font-size: 1em;\\n      &-dark {\\n        background-color: #212529;\\n      }\\n      thead {\\n        tr {\\n          // height: 2em;\\n          th {\\n            h3 {\\n              color: #1b1c1c;\\n            }\\n          }\\n          // th:first-of-type {\\n          //   width: 50px;\\n          // }\\n        }\\n      }\\n      tbody {\\n        color: #1b1c1c;\\n        tr {\\n          border-bottom: solid 1px;\\n          td {\\n            div {\\n              padding: 10px 0px 10px 0px;\\n              img {\\n                height: 3.125em;\\n                width: 3.125em;\\n              }\\n            }\\n          }\\n        }\\n        tr:last-of-type {\\n          border-bottom: none;\\n        }\\n        tr:nth-of-type(odd) {\\n          background-color: hsla(0,0%,100%,.05);\\n        }\\n      }\\n      &-striped {\\n        // color: white;\\n      }\\n    }\\n  }\\n  &__searchbox {\\n    margin-left: 11%;\\n    border: solid 2px #1b1c1c;\\n    width: 40%;\\n    display: flex;\\n    align-items: center;\\n    span {\\n      padding-left: 10px;\\n    }\\n  }\\n  &__loadmore {\\n    display: flex;\\n    justify-content: center;\\n    button {\\n      // height: 40px;\\n      border: solid 1px;\\n      padding: 10px;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport AdminLayout from './AdminLayout';\nimport ProfileMenu, { isAdminVerified } from '../../profile/components/ProfileMenu';\nimport ProfileOverview from '../../profile/components/ProfileOverview';\nimport ProfilePassword from '../../profile/components/ProfilePassword';\nimport ProfileAddress from '../../profile/components/ProfileAddress';\n// import ManageCarousel from '../../profile/components/ManageCarousel';\nimport Carousel from './CarouselImages';\nimport Menu from './Menu';\n\nimport ManageSpecs from '../../profile/components/ManageSpecs';\nimport ManageSeo from './Seo';\nimport ManageLocations from './Locations';\n\nimport '../../profile/styles/profile-view.scss';\n\n// import ProfileView from '../../profile/containers/Profile';\n\nconst renderMetaData = () => (\n  <Helmet\n    title=\"Admin\"\n    meta={[\n      {\n        name: 'description',\n        content: 'Admin page'\n      }\n    ]}\n  />\n);\nconst adminViews = [\n  // { view: 'manageAdmins', component: ManageAdmins },\n  { view: 'manageCarousel', component: Carousel },\n  { view: 'manageSpecs', component: ManageSpecs },\n  { view: 'manageSeo', component: ManageSeo },\n  { view: 'manageLocations', component: ManageLocations }\n];\nclass AdminView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentView: 'manageLocations'\n    };\n  }\n  changeView = selectedView => this.setState({ currentView: selectedView });\n\n  handleProductSelect = e => this.setState({ selectedProduct: e.target.value });\n\n  renderAdminView = viewList => {\n    if (!isAdminVerified(this.props)) return null;\n    const { currentView } = this.state;\n    const [selectedView] = viewList.filter(v => v.view === currentView);\n    if (!selectedView) return null;\n    const { component: Component } = selectedView;\n    return <Component {...this.state} {...this.props} />;\n  };\n  render() {\n    const { currentView } = this.state;\n    return (\n      <AdminLayout>\n        {/* {renderMetaData()} */}\n        <div className=\" admin profile-view\">\n          <aside className=\"profile-view__sidebar\">\n            <Menu {...this.state} {...this.props} changeView={this.changeView} />\n          </aside>\n          <section className=\"profile-view__content\">{this.props.children}</section>\n        </div>\n      </AdminLayout>\n    );\n  }\n}\n\nexport default AdminView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import Helmet from 'react-helmet';\nimport classnames from 'classnames';\nimport { MdImage, MdList, MdPerson } from 'react-icons/md';\n// import {  } from '../../common/components/global';\n// import settings from '../../../../../../settings';\nimport '../../profile/styles/profile-menu.scss';\n\nexport const isAdminVerified = props => {\n  const { currentUser } = props;\n  if (currentUser) {\n    const hasKeys = ['id', 'role', 'email'].every(el => currentUser.hasOwnProperty(el) && currentUser[el]);\n    if (hasKeys && currentUser.role === 'admin') return true;\n  }\n  return false;\n};\n\nclass ProfileMenu extends React.Component {\n  render() {\n    // const {  } = this.state;\n    const { currentView, changeView } = this.props;\n    console.log('MENU PROPS:', this.props);\n    // TODO: Hide manage links when not admin\n    return (\n      <nav className=\"profile-menu\">\n        <ul className=\"profile-menu__list\">\n          <li className=\"profile-menu__list-item\">\n            <button\n              className={classnames('profile-menu__button', {\n                'profile-menu__button--active': currentView === 'dashboard'\n              })}\n              onClick={() => changeView('dashboard')}\n            >\n              <MdPerson className=\"profile-menu__icon\" />\n              <span className=\"profile-menu__text\">Dashboard</span>\n            </button>\n          </li>\n          {/* <li className=\"profile-menu__list-item\">\n            <button\n              className={classnames('profile-menu__button', {\n                'profile-menu__button--active': currentView === 'profilePassword'\n              })}\n              onClick={() => changeView('profilePassword')}\n              // disabled\n            >\n              <MdLock className=\"profile-menu__icon\" />\n              <span className=\"profile-menu__text\">Change Password</span>\n            </button>\n          </li> */}\n          {/* <li className=\"profile-menu__list-item\">\n            <button\n              className={classnames('profile-menu__button', {\n                'profile-menu__button--active': currentView === 'profileAddress'\n              })}\n              onClick={() => changeView('profileAddress')}\n              // disabled\n            >\n              <MdPinDrop className=\"profile-menu__icon\" />\n              <span className=\"profile-menu__text\">Change Address</span>\n            </button>\n          </li> */}\n          {/* {isAdminVerified(this.props) ? (\n            <li className=\"profile-menu__list-item\">\n              <button\n                className={classnames('profile-menu__button', {\n                  'profile-menu__button--active': currentView === 'manageAdmins'\n                })}\n                onClick={() => changeView('manageAdmins')}\n                // disabled\n              >\n                <MdPeople className=\"profile-menu__icon\" />\n                <span className=\"profile-menu__text\">Manage Administrators</span>\n              </button>\n            </li>\n          ) : null} */}\n          {isAdminVerified(this.props) ? (\n            <li className=\"profile-menu__list-item\">\n              <button\n                className={classnames('profile-menu__button', {\n                  'profile-menu__button--active': currentView === 'manageCarousel'\n                })}\n                onClick={() => this.props.history.push({ pathname: '/admin/carousel' })}\n                // disabled\n              >\n                <MdImage className=\"profile-menu__icon\" />\n                <span className=\"profile-menu__text\">Manage Image Carousel</span>\n              </button>\n            </li>\n          ) : null}\n          {isAdminVerified(this.props) ? (\n            <li className=\"profile-menu__list-item\">\n              <button\n                className={classnames('profile-menu__button', {\n                  'profile-menu__button--active': currentView === 'manageSpecs'\n                })}\n                onClick={() => this.props.history.push({ pathname: '/admin/products' })}\n              >\n                <MdList className=\"profile-menu__icon\" />\n                <span className=\"profile-menu__text\">Manage Product Specifications</span>\n              </button>\n            </li>\n          ) : null}\n          {isAdminVerified(this.props) ? (\n            <li className=\"profile-menu__list-item\">\n              <button\n                className={classnames('profile-menu__button', {\n                  'profile-menu__button--active': currentView === 'manageSeo'\n                })}\n                onClick={() => this.props.history.push({ pathname: '/admin/seo' })}\n              >\n                <MdList className=\"profile-menu__icon\" />\n                <span className=\"profile-menu__text\">Manage Seo</span>\n              </button>\n            </li>\n          ) : null}\n          {isAdminVerified(this.props) ? (\n            <li className=\"profile-menu__list-item\">\n              <button\n                className={classnames('profile-menu__button', {\n                  'profile-menu__button--active': currentView === 'manageLocations'\n                })}\n                onClick={() => this.props.history.push({ pathname: '/admin/locations' })}\n              >\n                <MdList className=\"profile-menu__icon\" />\n                <span className=\"profile-menu__text\">Manage Locations</span>\n              </button>\n            </li>\n          ) : null}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nProfileMenu.propTypes = {\n  currentView: PropTypes.string,\n  changeView: PropTypes.func\n};\nProfileMenu.defaultProps = {};\n\nexport default ProfileMenu;\n","import React from 'react';\nimport { Table } from '../../../common/components/web';\n\nconst ProductTable = ({ dataSource, columns, ...props }) => {\n  return <Table {...props} striped={false} dataSource={dataSource} columns={columns} />;\n};\n\nexport default ProductTable;\n","import React from 'react';\nimport ProductTable from './ProductTable';\n\nconst ProductSpecs = props => {\n  return <ProductTable {...props} />;\n};\n\nexport default ProductSpecs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose, withApollo } from 'react-apollo';\nimport { compose as Rcompose } from 'ramda';\n// import classnames from 'classnames';\n// import { Formik, Field, Form } from 'formik';\n// import { MdClose, MdSave } from 'react-icons/md';\nimport '../../../profile/styles/manage-specs.scss';\n\nimport Loader from '../../../common/components/global/components/Loader';\nimport SeoForm from './SeoForm';\n\nimport '../../styles/forms.scss';\nimport VENDORS_QUERY from '../../../common/graphql/VendorsQuery.graphql';\n\nimport PRODUCT_SEO_QUERY from '../../graphql/ProductSeoQuery.graphql';\nimport UPLOAD_SEO_CONTENT from '../../graphql/UploadSeoContent.graphql';\nimport COLLECTIONS_QUERY from '../../graphql/CollectionsQuery.graphql';\nimport VENDOR_SEO_QUERY from '../../graphql/VendorSeoQuery.graphql';\nimport COLLECTION_SEO_QUERY from '../../graphql/CollectionSeoQuery.graphql';\nimport UPLOAD_SEO from '../../graphql/UploadSeo.graphql';\n\n// import PRODUCT_DATA_QUERY from '../../../common/graphql/ProductDataQuery.graphql';\nimport ADD_PRODUCT_DATA from '../../../common/graphql/AddProductData.graphql';\nimport UPDATE_PRODUCT_DATA from '../../../common/graphql/UpdateProductData.graphql';\nimport { ADMIN_PRODUCTS_QUERY, MODIFY_PRODUCT_DATA } from '../../../common/schema';\n// import { prodFeatures, prodSpecs } from '../../../products/components/SingleProductView';\n\nconst selectProdString = 'Select a product';\nconst selectSpecString = 'Select a specification';\nconst selectContent = 'Select a category';\nconst selectBrandString = 'Select a brand';\nconst selectCollectionString = 'Select a collection';\n// const fullSpecs = [...prodSpecs, ...prodFeatures];\nconst clearedSubmissionResult = { submissionError: null, submissionSuccess: null };\n\nclass ManageSeo extends React.Component {\n  state = {\n    currentEdit: {},\n    selectedProduct: selectProdString,\n    selectedBrand: selectBrandString,\n    selectedCollection: selectCollectionString,\n    selectedSpec: selectSpecString,\n    selectedCategory: selectContent,\n    currentCategoryValues: null,\n    categories: ['Products', 'Brands', 'Collections'],\n    specInput: '',\n    submissionError: null,\n    submissionSuccess: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // const { selectedCategory } = this.state;\n    if (prevState.selectedProduct !== this.state.selectedProduct) {\n      this.loadProductSeo(this.state.selectedProduct);\n    }\n    if (this.state.selectedCategory === 'brands' && prevState.selectedBrand !== this.state.selectedBrand) {\n      this.loadBrandSeo(this.state.selectedBrand);\n      // console.log('brand', brand);\n    }\n    if (\n      this.state.selectedCategory === 'collections' &&\n      prevState.selectedCollection !== this.state.selectedCollection\n    ) {\n      this.loadCollectionSeo(this.state.selectedCollection);\n    }\n    // if (prevState.selectedCategory !== selectedCategory) {\n    //   console.log('SELECTED CAT IS DIFF', selectedCategory);\n    //   // const { productsLoading, sfy_shop, productData } = this.props;\n    //   console.log('THE PROPS::', this.props);\n    // }\n  }\n  loadProductSeo = async handle => {\n    const {\n      data: { productData }\n    } = await this.props.refetchProductData({ handle });\n    // console.log('PRODUCT', productData);\n    this.setState({ currentCategoryValues: productData.seo });\n  };\n  loadCollectionSeo = async handle => {\n    const {\n      data: { collectionData }\n    } = await this.props.refetchCollectionSeo({ handle });\n    // console.log('COLLECTION loaded::', collectionData);\n    this.setState({ currentCategoryValues: collectionData.seo });\n  };\n  loadBrandSeo = async handle => {\n    const {\n      data: { vendorData }\n    } = await this.props.refetchBrandSeo({ handle });\n    // console.log('Brand::', vendorData);\n    this.setState({ currentCategoryValues: vendorData.seo });\n  };\n  handleProductSelect = e =>\n    this.setState({\n      selectedProduct: e.target.value,\n      selectedSpec: selectSpecString,\n      currentEdit: {},\n      ...clearedSubmissionResult\n    });\n  handleCategorySelect = e => {\n    this.setState({ selectedCategory: e.target.value.toLowerCase() });\n  };\n  handleSpecSelect = e =>\n    this.setState({\n      selectedSpec: e.target.value,\n      ...clearedSubmissionResult\n    });\n\n  handleSpecInput = e => {\n    const { currentEdit: prevEdit } = this.state;\n    const {\n      target: { name, value }\n    } = e;\n    this.setState({ currentEdit: { ...prevEdit, [name]: value } });\n  };\n\n  submitSpecs = async e => {\n    e.preventDefault();\n\n    const {\n      productData,\n      addProductData,\n      updateProductData,\n      sfy_shop: { products }\n    } = this.props;\n    const { currentEdit, selectedProduct } = this.state;\n\n    const currentSpecs = productData === null ? {} : productData;\n    const { __typename, id, ...specsToSubmit } = Object.assign(currentSpecs, currentEdit, {\n      handle: selectedProduct\n    });\n\n    let dataUpdateResult;\n    if (productData === null) {\n      // If adding a new product data to rcomm db, add sku and product name from Shopify\n      const [sfyData] = products.edges.filter(({ node }) => node.handle === selectedProduct);\n      const {\n        title,\n        vendor,\n        variants: { edges: variantEdges }\n      } = sfyData.node;\n      const { sku: _sku } = variantEdges[0].node;\n      const updatedSubmission = { ...specsToSubmit, product_name: `${vendor} ${title}`, sku: _sku };\n      dataUpdateResult = await addProductData(updatedSubmission);\n    } else {\n      dataUpdateResult = await updateProductData(specsToSubmit);\n    }\n\n    if (!dataUpdateResult) return;\n\n    if ('errors' in dataUpdateResult) {\n      return this.setState({ submissionError: dataUpdateResult.errors[0] });\n    }\n\n    if ('productData' in dataUpdateResult && dataUpdateResult.productData) {\n      const { product_name, handle } = dataUpdateResult.productData;\n      this.props.refetchProductData({ handle });\n      return this.setState({\n        submissionSuccess: `Successfully updated ${product_name}!`,\n        currentEdit: {},\n        selectedSpec: selectSpecString\n      });\n    }\n  };\n\n  renderInputValue = () => {\n    const { selectedSpec, currentEdit } = this.state;\n    const { productData } = this.props;\n    if (selectedSpec in currentEdit) return currentEdit[selectedSpec];\n    else if (productData && selectedSpec in productData) return productData[selectedSpec];\n    else return '';\n  };\n\n  handleCancelEdit = () => {\n    const { currentEdit, selectedSpec } = this.state;\n    if (selectedSpec in currentEdit) {\n      const { [selectedSpec]: removed, ...rest } = currentEdit;\n      this.setState({ currentEdit: rest });\n    }\n    return;\n  };\n\n  isDisabled = () => {\n    const { loadingProductData, productData } = this.props;\n    if (!loadingProductData && !productData) return false;\n    if (Object.keys(this.state.currentEdit).length > 0) return false;\n    return true;\n  };\n  validateTitle = (values, errors) => {\n    if (!values.title) {\n      errors.title = 'Required';\n    } else if (values.title.length > 60) {\n      errors.title = 'The title length should be under 60 characters';\n    }\n    return { values, errors };\n  };\n  validateDescription = ({ values, errors }) => {\n    if (!values.description) {\n      errors.description = 'Required';\n    } else if (values.description.length > 320) {\n      errors.description = 'Content descriptions should be 320 characters or less';\n    }\n    return { values, errors };\n  };\n  validateKeyWords = ({ values, errors }) => {\n    if (!values.keywords) {\n      errors.keywords = 'Required';\n    }\n    return { values, errors };\n  };\n  validateAll = values => {\n    let errors = {};\n    const composeValidation = Rcompose(this.validateKeyWords, this.validateDescription, this.validateTitle);\n    const validation = composeValidation(values, errors);\n    return validation.errors;\n  };\n  handleBrandSelect = e => {\n    this.setState({ selectedBrand: e.target.value });\n  };\n  handleCollectionSelect = e => {\n    this.setState({ selectedCollection: e.target.value });\n  };\n  renderSelect = category => {\n    const { selectedProduct, selectedBrand, selectedCollection } = this.state;\n    const { vendors, collections } = this.props;\n    switch (category) {\n      case 'products': {\n        const products = this.props.sfy_shop.products.edges;\n        return products ? (\n          <div>\n            <label htmlFor=\"product-select\">Please select a product to change seo values</label>\n            <select id=\"product-select\" onChange={this.handleProductSelect} value={selectedProduct}>\n              <option value={selectProdString} disabled>\n                {selectProdString}\n              </option>\n              {products\n                ? products.map(({ node }) => (\n                    <option key={node.handle} value={node.handle}>\n                      {`${node.vendor}: ${node.title}`}\n                    </option>\n                  ))\n                : null}\n            </select>\n          </div>\n        ) : null;\n      }\n      case 'brands': {\n        return (\n          <div>\n            <label htmlFor=\"product-select\">Please select a brand to change seo values</label>\n            <select id=\"product-select\" onChange={this.handleBrandSelect} value={selectedBrand}>\n              <option value={selectBrandString} disabled>\n                {selectBrandString}\n              </option>\n              {vendors\n                ? vendors.map(({ handle, name }) => (\n                    <option key={handle} value={handle}>\n                      {`${name}`}\n                    </option>\n                  ))\n                : null}\n            </select>\n          </div>\n        );\n      }\n      case 'collections': {\n        return (\n          <div>\n            <label htmlFor=\"product-select\">Please select a collection to change seo values</label>\n            <select id=\"product-select\" onChange={this.handleCollectionSelect} value={selectedCollection}>\n              <option value={selectCollectionString} disabled>\n                {selectCollectionString}\n              </option>\n              {collections\n                ? collections.map(({ node }) => (\n                    <option key={node.handle} value={node.handle}>\n                      {`${node.title}`}\n                    </option>\n                  ))\n                : null}\n            </select>\n          </div>\n        );\n      }\n      default:\n        return null;\n    }\n  };\n  currentSeoData = () => {\n    return this.state.currentCategoryValues;\n  };\n  render() {\n    const {\n      selectedProduct,\n      selectedBrand,\n      selectedCollection,\n      selectedCategory,\n      categories,\n      currentCategoryValues\n    } = this.state;\n    const { productsLoading, sfy_shop } = this.props;\n    // console.log('THE PROPS::', this.props);\n    let products = null;\n    // let seo = null;\n    if (!productsLoading && sfy_shop && 'products' in sfy_shop) {\n      if (sfy_shop.products.edges.length > 0) {\n        products = sfy_shop.products.edges;\n      }\n    }\n    // if (productData) {\n    //   seo = productData.seo;\n    // }\n    if (!products) {\n      return <Loader />;\n    }\n\n    return (\n      <section className=\"manage-specs\">\n        <div className=\"form__select-group\">\n          <label htmlFor=\"product-select\">Please select content category to update</label>\n          <select id=\"product-select\" onChange={this.handleCategorySelect} value={selectedCategory}>\n            <option value={selectedCategory} disabled>\n              {selectedCategory}\n            </option>\n            {categories.map(category => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </div>\n        {this.renderSelect(selectedCategory)}\n\n        <SeoForm\n          seo={this.currentSeoData()}\n          validateAll={this.validateAll}\n          uploadSeoContent={this.props.uploadSeoContent}\n          uploadSeo={this.props.uploadSeo}\n          selectedProduct={selectedProduct}\n          selectedBrand={selectedBrand}\n          selectedCollection={selectedCollection}\n          selectedCategory={selectedCategory}\n          valuesAvailable={currentCategoryValues}\n        />\n      </section>\n    );\n  }\n}\n\nconst ManageSeoWithApollo = compose(\n  withApollo,\n  ADMIN_PRODUCTS_QUERY(),\n  graphql(VENDOR_SEO_QUERY, {\n    options: () => ({ variables: { handle: '' } }),\n    props: ({ data }) => {\n      // console.log('VENDOR SEO Data::', data);\n      const { loading, error, refetch } = data;\n      if (error) {\n        return { brandSeoError: error };\n      }\n      if (!loading) {\n        return { refetchBrandSeo: refetch };\n      }\n    }\n  }),\n  graphql(COLLECTION_SEO_QUERY, {\n    options: () => ({ variables: { handle: '' } }),\n    props: ({ data }) => {\n      // console.log('COLLECITON SEO DATA::', data);\n      const { loading, error, refetch } = data;\n\n      if (error) {\n        return { collectionSeoError: error };\n      }\n      if (!loading) {\n        return { loadingCollectionSeo: loading, refetchCollectionSeo: refetch };\n      }\n    }\n  }),\n  graphql(COLLECTIONS_QUERY, {\n    options: () => ({ variables: { first: 100 } }),\n    props: ({ data }) => {\n      // console.log('COLLECTIONS QUERY DATA::', data);\n      const { loading, admin_collections } = data;\n      if (!loading) {\n        const { edges } = admin_collections;\n        return { loadingCollections: loading, collections: edges };\n      }\n    }\n  }),\n  graphql(PRODUCT_SEO_QUERY, {\n    options: () => ({ variables: { handle: '' }, fetchPolicy: 'network-only' }),\n    props: ({ data }) => {\n      // console.log('PRODUCTS SEO DATA', data);\n      const { loading: loadingProductData, error, productData, refetch: refetchProductData } = data;\n      if (error) throw new Error(`Error in Related Prodcuts Query: ${error}`);\n      return { loadingProductData, productData, refetchProductData };\n    }\n  }),\n  graphql(UPLOAD_SEO, {\n    props: ({ mutate }) => ({\n      uploadSeo: async seoData => {\n        const { data } = await mutate({ variables: seoData });\n        return data.uploadSeo;\n      }\n    })\n  }),\n  graphql(UPLOAD_SEO_CONTENT, {\n    props: ({ mutate }) => ({\n      uploadSeoContent: async seoData => {\n        // console.log('UPLOAD SEO DATA:', seoData);\n        const {\n          data: { updateProductSeo }\n        } = await mutate({ variables: { seo: seoData } });\n        // console.log('CONTENT:', updateProductSeo);\n        return updateProductSeo;\n      }\n    })\n  }),\n  graphql(VENDORS_QUERY, {\n    props: ({ data: { loading, error, vendors } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loading, vendors };\n    }\n  }),\n  MODIFY_PRODUCT_DATA(ADD_PRODUCT_DATA, 'addProductData'),\n  MODIFY_PRODUCT_DATA(UPDATE_PRODUCT_DATA, 'updateProductData')\n)(ManageSeo);\n\nManageSeo.propTypes = {\n  uploadSeo: PropTypes.func,\n  refetchBrandSeo: PropTypes.func,\n  refetchCollectionSeo: PropTypes.func,\n  vendors: PropTypes.array,\n  collections: PropTypes.array,\n  productsLoading: PropTypes.bool,\n  products: PropTypes.array,\n  productSpecs: PropTypes.array,\n  refetchProductData: PropTypes.func,\n  sfy_shop: PropTypes.object,\n  productData: PropTypes.object,\n  loadingProductData: PropTypes.bool,\n  uploadSeoContent: PropTypes.func\n};\n\nexport default ManageSeoWithApollo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { MdSearch } from 'react-icons/md';\n\nimport AdminView from '../components/AdminView';\nimport Loader from '../../common/components/global/components/Loader';\nimport '../styles/productspecs.scss';\nimport ProductSpecs from '../components/ProductSpecs';\n// import { ADMIN_PRODUCTS_QUERY /*MODIFY_PRODUCT_DATA*/ } from '../../common/schema';\nimport PRODUCTS_QUERY from '../graphql/Products.graphql';\n\nconst columns = [\n  {\n    title: '',\n    dataIndex: 'node',\n    key: 'featuredImage',\n    // eslint-disable-next-line\n    render: (image, record) => {\n      return (\n        <div>\n          <img src={image ? image.originalSrc : ''} alt=\"\" />\n          {/* <Link to={{ pathname: `/admin/locations/${record.node.handle}` }}>{text}</Link> */}\n        </div>\n      );\n    }\n  },\n  {\n    title: (\n      <a href=\"#\">\n        <h3>Product</h3>\n      </a>\n    ),\n    dataIndex: 'node',\n    key: 'title',\n    // eslint-disable-next-line\n    render: (text, record) => {\n      return (\n        <div>\n          {text}\n          {/* <Link to={{ pathname: `/admin/locations/${record.node.handle}` }}>{text}</Link> */}\n        </div>\n      );\n    }\n  },\n  {\n    title: (\n      <a href=\"#\">\n        <h3>Vendor</h3>\n      </a>\n    ),\n    dataIndex: 'node',\n    key: 'vendor',\n    // eslint-disable-next-line\n    render: (text, record) => {\n      return (\n        <div>\n          {text}\n          {/* <Link to={{ pathname: `/admin/locations/${record.node.handle}` }}>{text}</Link> */}\n        </div>\n      );\n    }\n  },\n  {\n    dataIndex: 'node',\n    key: 'handle',\n    // eslint-disable-next-line\n    render: (text, record) => {\n      return (\n        <div>\n          <Link to={{ pathname: `/admin/products/${record.node.handle}` }}>Edit</Link>\n        </div>\n      );\n    }\n  }\n];\nconst LoadMore = ({ loadMore }) => {\n  return (\n    <div className=\"admin__loadmore\">\n      <button onClick={() => loadMore()}>Load More</button>\n    </div>\n  );\n};\nLoadMore.propTypes = {\n  loadMore: PropTypes.func\n};\nconst SearchBar = ({ handleSearch, value }) => {\n  return (\n    <div className=\"admin__searchbox\">\n      <span>\n        <MdSearch size={20} />\n      </span>\n      <input type=\"text\" placeholder=\"Search\" onChange={handleSearch} value={value} />\n    </div>\n  );\n};\nSearchBar.propTypes = {\n  handleSearch: PropTypes.func,\n  value: PropTypes.string\n};\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchActive: false,\n      searchValue: '',\n      filteredProducts: null\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const prevSearch = prevState.searchValue;\n    const currSearch = this.state.searchValue;\n    if (currSearch.length > 0 && currSearch !== prevSearch) {\n      this.setState({ searchActive: true });\n      this.searchQuery();\n      return;\n    }\n    if (currSearch !== prevSearch && currSearch.length == 0) {\n      return this.setState({ searchActive: false, filteredProducts: null });\n    }\n  }\n  searchQuery = async () => {\n    const { searchValue } = this.state;\n    const query = gql`\n      query admin_products($first: Int, $after: String, $query: String) {\n        admin_products(first: $first, after: $after, query: $query) {\n          edges {\n            cursor\n            node {\n              vendor\n              title\n              featuredImage {\n                originalSrc\n              }\n            }\n          }\n        }\n      }\n    `;\n    const { data } = await this.props.client.query({\n      query,\n      fetchPolicy: 'cache-first',\n      variables: { first: 20, query: `title:${searchValue}*` }\n    });\n    const { admin_products } = data;\n    this.setState({ filteredProducts: admin_products });\n  };\n  handleSearch = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n  render() {\n    const { productsLoading, admin_products } = this.props;\n    const { searchActive, searchValue, filteredProducts } = this.state;\n    if (productsLoading) {\n      return (\n        <AdminView {...this.props}>\n          <Loader />\n        </AdminView>\n      );\n    }\n    return (\n      <AdminView {...this.props}>\n        <h2>Product Specifications</h2>\n        <div className=\"admin__tableview\">\n          <div className=\"admin__productspecs\">\n            <SearchBar handleSearch={this.handleSearch} value={searchValue} />\n            {searchActive && filteredProducts ? (\n              <ProductSpecs dataSource={filteredProducts.edges} columns={columns} />\n            ) : (\n              <ProductSpecs dataSource={admin_products.edges} columns={columns} />\n            )}\n          </div>\n          <LoadMore loadMore={this.props.loadMore} />\n        </div>\n      </AdminView>\n    );\n  }\n}\nconst ProductsApollo = compose(\n  withApollo,\n  graphql(PRODUCTS_QUERY, {\n    options: () => ({\n      variables: { first: 50 }\n    }),\n    props: ({ data }) => {\n      console.log('DATA;::', data);\n      const { loading, error, admin_products, variables, fetchMore } = data;\n      if (error) {\n        throw new Error(error);\n      }\n      if (loading) {\n        return { productsLoading: loading };\n      }\n      if (!loading && admin_products) {\n        let currEndCursor;\n        let hasNextPage;\n        let hasPreviousPage;\n        const { edges } = admin_products;\n        if (edges.length > 0) {\n          currEndCursor = edges[edges.length - 1].cursor;\n        }\n        hasNextPage = admin_products.pageInfo.hasNextPage;\n        hasPreviousPage = admin_products.pageInfo.hasPreviousPage;\n        console.log('Curr end cursor::', currEndCursor);\n        const loadMore = (first = 50, after = currEndCursor) => {\n          const updatedVars = { ...variables, after, first };\n          console.log('UPDATED VARS::', updatedVars);\n          return fetchMore({\n            variables: updatedVars,\n            updateQuery: (prevResult, { fetchMoreResult }) => {\n              console.log('PREVRESULT:', prevResult);\n              if (fetchMoreResult.admin_products.edges.length === 0) return prevResult;\n              const updatedResult = JSON.parse(JSON.stringify(prevResult));\n              console.log('PREV RESULT STRING', updatedResult);\n              // const updatedResult = Object.assign({}, prevResult);\n              updatedResult.admin_products.edges = [\n                ...prevResult.admin_products.edges,\n                ...fetchMoreResult.admin_products.edges\n              ];\n              //\n              updatedResult.pageInfo = fetchMoreResult.admin_products.pageInfo;\n              // updatedResult.admin_products.pageInfo = fetchMoreResult.admin_products.pageInfo;\n              // console.log('udpatedres', updatedResult);\n              // const update = Object.assign({}, prevResult, {\n              //   admin_products: {\n              //     edges: [...prevResult.admin_products.edges, ...fetchMoreResult.admin_products.edges],\n              //     pageInfo: fetchMoreResult.admin_products.pageInfo\n              //     // __typename: prevResult.admin_products.__typename\n              //   },\n              //   __typename: prevResult.admin_products.__typename\n              // });\n              console.log('UPDATE::', updatedResult);\n              return updatedResult;\n            }\n          });\n        };\n        return {\n          productsLoading: loading,\n          admin_products,\n          loadMore,\n          products: {\n            currEndCursor,\n            hasNextPage,\n            hasPreviousPage\n          }\n        };\n      }\n    }\n  })\n)(Products);\n\nexport default ProductsApollo;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"admin_products\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"after\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"admin_products\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"after\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"after\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"cursor\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"vendor\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"featuredImage\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originalSrc\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transformedSrc\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"maxWidth\"},\"value\":{\"kind\":\"IntValue\",\"value\":\"100\"}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"maxHeight\"},\"value\":{\"kind\":\"IntValue\",\"value\":\"100\"}}],\"directives\":[]}]}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"pageInfo\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hasNextPage\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hasPreviousPage\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":406}};\n    doc.loc.source = {\"body\":\"query admin_products($first: Int, $after: String, $query: String) {\\n  admin_products(first: $first, after: $after, query: $query) {\\n    edges {\\n      cursor\\n      node {\\n        handle\\n        title\\n        vendor\\n        featuredImage {\\n          originalSrc\\n          transformedSrc(maxWidth: 100, maxHeight:100)\\n        }\\n      }\\n    }\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"admin_products\"] = oneQuery(doc, \"admin_products\");\n        \n","import React from 'react';\n// import { Route } from 'react-router-dom';\nimport Dashboard from './containers/Dashboard';\nimport Carousel from './containers/Carousel';\nimport ProductSpecs from './containers/ProductSpecs';\nimport Seo from './containers/Seo';\nimport Locations from './containers/Locations';\nimport Location from './containers/Location';\nimport Products from './containers/Products';\n// import Products from './containers/Products';\n\nimport reducers from './reducers';\nimport { AuthRoute /*withLoadedUser,*/ } from '../user/containers/Auth';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: [\n    <AuthRoute exact path=\"/admin/dashboard\" role={['admin']} component={Dashboard} />,\n    <AuthRoute exact path=\"/admin/carousel\" role={['admin']} component={Carousel} />,\n    // <AuthRoute exact path=\"/admin/product-specs\" role={['admin']} component={ProductSpecs} />,\n    <AuthRoute exact path=\"/admin/seo\" role={['admin']} component={Seo} />,\n    <AuthRoute exact path=\"/admin/locations\" role={['admin']} component={Locations} />,\n    <AuthRoute exact path=\"/admin/locations/:location_handle\" role={['admin']} component={Location} />,\n    <AuthRoute exact path=\"/admin/products\" role={['admin']} component={Products} />,\n    <AuthRoute exact path=\"/admin/products/:product\" role={['admin']} component={ProductSpecs} />\n  ],\n  reducer: { admin: reducers }\n});\n","\n    var content = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--10-1!../../../../../../node_modules/postcss-loader/lib/index.js??ref--10-2!../../../../../../node_modules/sass-loader/lib/loader.js??ref--10-3!./productspecs.scss\");\n    var insertCss = require(\"!../../../../../../node_modules/isomorphic-style-loader/lib/insertCss.js\");\n\n    if (typeof content === 'string') {\n      content = [[module.id, content, '']];\n    }\n\n    module.exports = content.locals || {};\n    module.exports._getContent = function() { return content; };\n    module.exports._getCss = function() { return content.toString(); };\n    module.exports._insertCss = function(options) { return insertCss(content, options) };\n    \n    // Hot Module Replacement\n    // https://webpack.github.io/docs/hot-module-replacement\n    // Only activated in browser context\n    if (module.hot && typeof window !== 'undefined' && window.document) {\n      var removeCss = function() {};\n      module.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js??ref--10-1!../../../../../../node_modules/postcss-loader/lib/index.js??ref--10-2!../../../../../../node_modules/sass-loader/lib/loader.js??ref--10-3!./productspecs.scss\", function() {\n        content = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--10-1!../../../../../../node_modules/postcss-loader/lib/index.js??ref--10-2!../../../../../../node_modules/sass-loader/lib/loader.js??ref--10-3!./productspecs.scss\");\n\n        if (typeof content === 'string') {\n          content = [[module.id, content, '']];\n        }\n\n        removeCss = insertCss(content, { replace: true });\n      });\n      module.hot.dispose(function() { removeCss(); });\n    }\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table as RSTable } from 'reactstrap';\n\nconst renderHead = columns => {\n  return columns.map(({ title, dataIndex, renderHeader, key }, idx) => {\n    return (\n      <th key={key + idx} className={`w-${columns.length === 2 ? 100 : 100 / columns.length}`}>\n        {renderHeader ? renderHeader(title, dataIndex) : title}\n      </th>\n    );\n  });\n};\n\nconst renderBody = (columns, dataSource) => {\n  return dataSource.map(entry => {\n    return <tr key={entry.id}>{renderData(columns, entry)}</tr>;\n  });\n};\n\nconst renderData = (columns, entry) => {\n  return columns.map(({ dataIndex, render, key }, idx) => {\n    return <td key={key + idx}>{render ? render(entry[dataIndex][key], entry) : entry[dataIndex]}</td>;\n  });\n};\n\nconst Table = ({ dataSource, columns, ...props }) => {\n  return (\n    <RSTable {...props}>\n      <thead>\n        <tr>{renderHead(columns)}</tr>\n      </thead>\n      <tbody>{renderBody(columns, dataSource)}</tbody>\n    </RSTable>\n  );\n};\n\nTable.propTypes = {\n  dataSource: PropTypes.array,\n  columns: PropTypes.array\n};\n\nexport default Table;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateProductData\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ProductDataInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateProductData\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"productData\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"sku\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"product_name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"shock_absorption\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"console\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"user_ids\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"workouts\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hrt_monitoring\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"stride_technology\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"power\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"design\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"drive_system\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"handlebars\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"seat\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"pedals\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"frame\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"finish\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"motion\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"exercises\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"weight_stack\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"included_accessories\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"optional_weight_stack\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"running_area\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"motor\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"speed\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"incline\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"resistance_levels\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"resistance_system\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"stride\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"max_user_weight\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"ramp\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"stored_vertical_height\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"seat_floor_distance\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"warranty\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"errors\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"field\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":766}};\n    doc.loc.source = {\"body\":\"\\nmutation updateProductData($input: ProductDataInput!) {\\n  updateProductData(input: $input) {\\n    productData {\\n      id\\n      sku\\n      product_name\\n      handle\\n      shock_absorption\\n      console\\n      user_ids\\n      workouts\\n      hrt_monitoring\\n      stride_technology\\n      power\\n      design\\n      drive_system\\n      handlebars\\n      seat\\n      pedals\\n      frame\\n      finish\\n      motion\\n      exercises\\n      weight_stack\\n      included_accessories\\n      optional_weight_stack\\n      running_area\\n      motor\\n      speed\\n      incline\\n      resistance_levels\\n      resistance_system\\n      stride\\n      max_user_weight\\n      ramp\\n      stored_vertical_height\\n      seat_floor_distance\\n      warranty\\n    }\\n    errors {\\n      field\\n      message\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"updateProductData\"] = oneQuery(doc, \"updateProductData\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"vendor\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VendorQueryInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"vendor\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"logo_url\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_featured\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"vendorData\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"seo\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"keywords\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":305}};\n    doc.loc.source = {\"body\":\"query vendor($input: VendorQueryInput!) {\\n  vendor(input: $input) {\\n    id\\n    name\\n    handle\\n    logo_url\\n    is_featured\\n    categories {\\n      id\\n      name\\n      handle\\n    }\\n     vendorData(input: $input) {\\n      id\\n      seo {\\n        title\\n        description\\n        keywords\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"vendor\"] = oneQuery(doc, \"vendor\");\n        \n","import { graphql } from 'react-apollo';\nimport ADMIN_PRODUCTS_QUERY from '../graphql/SFY/sfyAdminProductsQuery.graphql';\n\nexport default (queryString, first) =>\n  graphql(queryString ? queryString : ADMIN_PRODUCTS_QUERY, {\n    options: () => {\n      return { variables: { [`first`]: first ? first : 250 } };\n    },\n    props: ({ data }) => {\n      const { loading: productsLoading, error, sfy_shop, fetchMore, variables } = data;\n      let currEndCursor, hasNextPage, hasPreviousPage;\n      if (!productsLoading && sfy_shop) {\n        const { products } = sfy_shop;\n        //console.log('products', products);\n        if (products.edges.length > 0) currEndCursor = products.edges[products.edges.length - 1].cursor;\n        hasNextPage = products.pageInfo.hasNextPage;\n        hasPreviousPage = products.pageInfo.hasPreviousPage;\n      }\n      const loadMore = (first = 250, after = currEndCursor) => {\n        const updatedVars = { ...variables, after, first };\n        return fetchMore({\n          variables: updatedVars,\n          updateQuery: (prevResult, { fetchMoreResult }) => {\n            if (fetchMoreResult.sfy_shop.products.edges.length === 0) return prevResult;\n            const updatedResult = JSON.parse(JSON.stringify(prevResult));\n            updatedResult.sfy_shop.products.edges = [\n              ...prevResult.sfy_shop.products.edges,\n              ...fetchMoreResult.sfy_shop.products.edges\n            ];\n            updatedResult.sfy_shop.products.pageInfo = fetchMoreResult.sfy_shop.products.pageInfo;\n            //console.log('udpatedres', updatedResult);\n            return updatedResult;\n          }\n        });\n      };\n      if (error) throw new Error(`Error in Admin Products Query: ${error}`);\n      if (productsLoading || !sfy_shop) return { productsLoading, sfy_shop };\n      if (!productsLoading && sfy_shop) {\n        return {\n          productsLoading,\n          sfy_shop,\n          currEndCursor,\n          hasNextPage,\n          hasPreviousPage,\n          loadMore\n        };\n      }\n    }\n  });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport classnames from 'classnames';\nimport {\n  PageLayout,\n  ScrollToTop,\n  // Hero,\n  CollapseMenu,\n  PageBreadcrumbs\n} from '../../common/components/global';\nimport { toUrlName } from '../../common/components/global/components/PageBreadcrumbs';\nimport ShopBreadcrumbs from './ShopBreadcrumbs';\nimport ShopGrid from './ShopGrid';\nimport ShopGridSort from './ShopGridSort';\n// import ShopGridPages from './ShopGridPages';\nimport Loader from '../../common/components/global/components/Loader';\n\nimport settings from '../../../../../../settings';\nimport '../styles/category-view.scss';\n\nconst capFirstLtr = str => str[0].toUpperCase() + str.slice(1);\n\nclass VendorView extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location } = props;\n    let filters = {};\n    if (\n      typeof location !== 'undefined' &&\n      'state' in location &&\n      typeof location.state !== 'undefined' &&\n      'filters' in location.state &&\n      typeof location.state.filters !== 'undefined'\n    ) {\n      filters = location.state.filters;\n    }\n    this.state = {\n      priceFilterLower: '',\n      priceFilterUpper: '',\n      priceConfirmed: false,\n      priceErr: null,\n      selectedPriceRange: null,\n      selectedPromotion: null,\n      selectedCategory: null,\n      selectedVendor: null,\n      sortMethod: 'featured',\n      displayLim: 12,\n      startDisplayIdx: 0,\n      currPg: 1,\n      filteredFinalIdx: null,\n      ...filters\n    };\n  }\n  handleInput = e => this.setState({ [e.target.name]: e.target.value });\n  scrollToGridTop = () => {\n    return window.scrollTo({\n      top: 200,\n      left: 0,\n      behavior: 'smooth'\n    });\n  };\n  applyPriceFilter = e => {\n    e.preventDefault();\n    this.setState({ priceErr: null });\n    const { priceFilterUpper: u, priceFilterLower: l } = this.state;\n\n    // Validate limits\n    if (!u || !l) return this.setState({ priceErr: 'Please enter an upper and lower price limit.' });\n    const isPrice = new RegExp(/^\\d+(\\.\\d{2})?$/, 'i');\n    if ([u, l].map(lim => isPrice.test(lim)).some(res => res == false)) {\n      return this.setState({ priceErr: 'Please enter valid prices.' });\n    }\n    // If validated, apply filter\n    this.setState({ priceConfirmed: true });\n  };\n  clearPriceFilter = e => {\n    e.preventDefault();\n    this.setState({ priceConfirmed: false, priceFilterLower: '', priceFilterUpper: '' });\n  };\n  getIdxsAndLims = () => {\n    const { edges } = this.props.sfy_shop.products;\n    const { startDisplayIdx, displayLim, currPg } = this.state;\n    const edgesFinalIdx = edges.length - 1;\n    const finalDisplayIdx = startDisplayIdx + displayLim - 1;\n    return { startDisplayIdx, displayLim, currPg, edgesFinalIdx, finalDisplayIdx };\n  };\n  setFilteredFinalIdx = filteredProds => {\n    this.setState({ filteredFinalIdx: filteredProds.length - 1 });\n  };\n  isPaginationDisabled = type => {\n    const { hasNextPage } = this.props;\n    const { selectedVendor, selectedCategory, filteredFinalIdx } = this.state;\n    const { startDisplayIdx, finalDisplayIdx, edgesFinalIdx } = this.getIdxsAndLims();\n    if (type === 'forward') {\n      if (selectedVendor || selectedCategory) {\n        if (finalDisplayIdx < filteredFinalIdx) return false;\n        else return true;\n      }\n      if (finalDisplayIdx < edgesFinalIdx) return false;\n      else {\n        if (hasNextPage) return false;\n        else return true;\n      }\n    }\n    if (type === 'back') {\n      if (startDisplayIdx > 0) return false;\n      else return true;\n    }\n  };\n  handleLimChange = e => {\n    const newLim = parseInt(e.target.value);\n    const { displayLim: oldLim, edgesFinalIdx } = this.getIdxsAndLims();\n    const nextFinalDisplayIdx = newLim - 1;\n    if (newLim > oldLim) {\n      if (nextFinalDisplayIdx > edgesFinalIdx) {\n        const first = nextFinalDisplayIdx - edgesFinalIdx;\n        this.props.loadMore(first);\n      }\n    }\n    return this.setState({ startDisplayIdx: 0, displayLim: newLim, currPg: 1 });\n  };\n  handlePageForward = () => {\n    const { startDisplayIdx, displayLim, edgesFinalIdx, currPg } = this.getIdxsAndLims();\n    const nextStartDisplayIdx = startDisplayIdx + displayLim;\n    const nextFinalDisplayIdx = nextStartDisplayIdx + displayLim - 1;\n    if (nextFinalDisplayIdx > edgesFinalIdx) {\n      const first = nextFinalDisplayIdx - edgesFinalIdx;\n      this.props.loadMore(first);\n    }\n    this.setState({ startDisplayIdx: nextStartDisplayIdx, currPg: currPg + 1 }, () => this.scrollToGridTop());\n  };\n  handlePageBack = () => {\n    const { startDisplayIdx, displayLim, currPg } = this.getIdxsAndLims();\n    const backLog = startDisplayIdx - displayLim;\n    if (backLog >= 0) this.setState({ startDisplayIdx: backLog, currPg: currPg - 1 }, () => this.scrollToGridTop());\n    else this.setState({ startDisplayIdx: 0, currPg: 1 }, () => this.scrollToGridTop());\n  };\n  selectSortMethod = sortMethod => this.setState({ sortMethod: sortMethod });\n  selectPriceRange = priceRangeId => {\n    const { selectedPriceRange } = this.state;\n    if (selectedPriceRange && selectedPriceRange === priceRangeId) {\n      this.setState({ selectedPriceRange: null });\n    } else {\n      this.setState({ selectedPriceRange: priceRangeId });\n    }\n  };\n  selectPromotion = promotionId => {\n    const { selectedPromotion } = this.state;\n    if (selectedPromotion && selectedPromotion === promotionId) {\n      this.setState({ selectedPromotion: null });\n    } else {\n      this.setState({ selectedPromotion: promotionId });\n    }\n  };\n  selectCategory = categoryId => {\n    const { selectedCategory } = this.state;\n    if (selectedCategory && selectedCategory === categoryId) {\n      this.setState({ selectedCategory: null, startDisplayIdx: 0, currPg: 1 });\n    } else {\n      if (this.props.hasNextPage) this.props.loadMore(100);\n      this.setState({ selectedCategory: categoryId, startDisplayIdx: 0, currPg: 1 });\n    }\n  };\n  selectVendor = vendorId => {\n    const { selectedVendor } = this.state;\n    if (selectedVendor && selectedVendor === vendorId) {\n      this.setState({ selectedVendor: null, startDisplayIdx: 0, currPg: 1 });\n    } else {\n      if (this.props.hasNextPage) this.props.loadMore(100);\n      this.setState({ selectedVendor: vendorId, startDisplayIdx: 0, currPg: 1 });\n    }\n  };\n  parseCategories = () => {\n    const {\n      sfy_shop_collections: {\n        collections: { edges: categories }\n      }\n    } = this.props;\n    return categories.map(({ node: { id, title: name } }) => ({ id, name, url_name: toUrlName(name) }));\n  };\n  render() {\n    const { selectedPriceRange, selectedPromotion, selectedCategory } = this.state;\n    const {\n      promotions,\n      priceRanges,\n      vendor,\n      // heroImage,\n      bannerImage,\n      loading,\n      sfy_shop,\n      sfy_shop_collections\n    } = this.props;\n    const { priceConfirmed, priceFilterUpper, priceFilterLower } = this.state;\n    const filtersToPass = { priceConfirmed, priceFilterUpper, priceFilterLower };\n    console.log(\"BRAND PROPS\", vendor);\n    const renderMetaData = vendor => (\n      <Helmet\n        title={vendor.title}\n        meta={[\n          {\n            name: 'description',\n            content: `${vendor.description}`\n          },\n          {\n            name: 'keywords',\n            content: `${vendor.keywords}`\n          }\n        ]}\n      />\n    );\n    if (loading || !sfy_shop || !sfy_shop_collections || !vendor) {\n      return (\n        <PageLayout>\n          {/* {renderMetaData(vendor)} */}\n          <Loader />\n        </PageLayout>\n      );\n    } else if (vendor && !sfy_shop) {\n      return (\n        <PageLayout>\n          {renderMetaData(vendor.vendorData.seo)}\n          <Loader />\n        </PageLayout>\n      );\n    } else {\n      const { products } = sfy_shop;\n      const { collections: categories } = sfy_shop_collections;\n      return (\n        <PageLayout>\n          {renderMetaData(vendor.vendorData.seo)}\n          <ScrollToTop />\n          {/* <Hero overlayNav={true} image={heroImage} /> */}\n          {/* <LowPriceBanner /> */}\n          <img src={bannerImage.link} alt={bannerImage.name} />\n          <PageBreadcrumbs {...this.props} />\n          <div className=\"category-view\">\n            <div className=\"category-view__sidebar\">\n              <div className=\"category-view__collapse-label\">FILTER BY</div>\n              <div className=\"category-view__collapse-menu\">\n                {categories && categories.edges.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"CATEGORY\">\n                      {categories.edges.map(({ node: { id, title } }) => (\n                        <div\n                          key={id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedCategory === id\n                          })}\n                          onClick={() => this.selectCategory(id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{title}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                <div className=\"category-view__collapse\">\n                  <CollapseMenu label=\"PRICE\">\n                    <form className=\"category-view__collapse-item\">\n                      <div>\n                        <label>Lower Limit</label>\n                        <div>\n                          <span>$</span>\n                          <input\n                            style={{ width: '60%' }}\n                            type=\"text\"\n                            name=\"priceFilterLower\"\n                            value={this.state.priceFilterLower}\n                            placeholder=\"0\"\n                            onChange={e => this.handleInput(e)}\n                          />\n                        </div>\n                      </div>\n                      <div>\n                        <label>Upper Limit</label>\n                        <div>\n                          <span>$</span>\n                          <input\n                            style={{ width: '60%' }}\n                            type=\"text\"\n                            name=\"priceFilterUpper\"\n                            value={this.state.priceFilterUpper}\n                            placeholder=\"0\"\n                            onChange={e => this.handleInput(e)}\n                          />\n                        </div>\n                      </div>\n                      <button disabled={this.state.priceConfirmed} onClick={e => this.applyPriceFilter(e)}>\n                        Confirm\n                      </button>\n                      {this.state.priceConfirmed ? (\n                        <button onClick={e => this.clearPriceFilter(e)}> Clear </button>\n                      ) : null}\n                      {this.state.priceErr ? <div>{this.state.priceErr}</div> : null}\n                    </form>\n                  </CollapseMenu>\n                </div>\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                {'promotions' in this.props && promotions.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"PROMOTIONS\">\n                      {promotions.map(promotion => (\n                        <div\n                          key={promotion.id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedPromotion === promotion.id\n                          })}\n                          onClick={() => this.selectPromotion(promotion.id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{promotion.name}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                {'priceRanges' in this.props && priceRanges.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"PRICE RANGE\">\n                      {priceRanges.map(priceRange => (\n                        <div\n                          key={priceRange.id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedPriceRange === priceRange.id\n                          })}\n                          onClick={() => this.selectPriceRange(priceRange.id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{priceRange.name}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"category-view__main\">\n              <h1 className=\"header header--upper header--primary category-view__main-header\">\n                {products.edges.length > 0\n                  ? `${products.edges[0].node.vendor} Equipment`\n                  : this.props.match.params.vendor_name\n                      .split('-')\n                      .map(item => capFirstLtr(item))\n                      .join(' ')}\n              </h1>\n              <ShopBreadcrumbs\n                categories={vendor.categories}\n                for=\"category\"\n                filtersToPass={filtersToPass}\n                vendorUrlName={this.props.match.params.vendor_name}\n              />\n              <ShopGridSort\n                selectSortMethod={this.selectSortMethod}\n                handleLimChange={this.handleLimChange}\n                {...this.state}\n              />\n              <ShopGrid\n                {...this.state}\n                {...this.props}\n                products={products}\n                setFilteredFinalIdx={this.setFilteredFinalIdx}\n              />\n              {/* <ShopGridPages\n                {...this.props}\n                {...this.state}\n                isDisabled={this.isPaginationDisabled}\n                handlePageForward={this.handlePageForward}\n                handlePageBack={this.handlePageBack}\n              /> */}\n            </div>\n          </div>\n        </PageLayout>\n      );\n    }\n  }\n}\n\nVendorView.propTypes = {\n  location: PropTypes.object,\n  promotions: PropTypes.array,\n  priceRanges: PropTypes.array,\n  vendor: PropTypes.object,\n  heroImage: PropTypes.object,\n  bannerImage: PropTypes.object,\n  vendors: PropTypes.array,\n  loading: PropTypes.bool,\n  sfy_shop: PropTypes.object,\n  hasNextPage: PropTypes.bool,\n  loadMore: PropTypes.func,\n  match: PropTypes.object,\n  sfy_shop_collections: PropTypes.object\n};\nVendorView.defaultProps = {\n  heroImage: {\n    name: 'Shop',\n    link: 'https://s3-us-west-2.amazonaws.com/chf-rcomm/shop_hero.png'\n  },\n  bannerImage: {\n    name: 'Low Price Guaranteed',\n    link: 'https://s3-us-west-2.amazonaws.com/chf-rcomm/shop_banner.png'\n  }\n};\n\nexport default VendorView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport VendorView from '../components/VendorView';\nimport { FILTERED_PRODUCTS_QUERY } from '../../common/schema';\nimport COLLECTIONS_QUERY from '../../common/graphql/SFY/sfyCollectionsQuery.graphql';\nimport VENDOR_QUERY from '../../common/graphql/VendorQuery.graphql';\n\nclass Vendor extends React.Component {\n  render() {\n    return <VendorView {...this.props} />;\n  }\n}\n\nconst VendorWithApollo = compose(\n  FILTERED_PRODUCTS_QUERY(),\n  graphql(COLLECTIONS_QUERY, {\n    options: () => {\n      return { variables: { [`first`]: 50 } };\n    },\n    props: ({ data }) => {\n      const { loading, error, sfy_shop: sfy_shop_collections } = data;\n      if (error) throw new Error(`Error in Categories (Vendor Page) Query: ${error}`);\n      return { loading, sfy_shop_collections };\n    }\n  }),\n  graphql(VENDOR_QUERY, {\n    options: props => {\n      console.log('PROPS MATCH::', props.match.params);\n      return { variables: { input: { handle: props.match.params.vendor_name } } };\n    },\n    props: ({ data }) => {\n      const { loading, error, vendor } = data;\n      // console.log('DATA:::', data);\n      if (error) throw new Error(`Error in Categories (Vendor Page) Query: ${error}`);\n      return { loading, vendor };\n    }\n  })\n)(Vendor);\n\nVendor.propTypes = {\n  location: PropTypes.object,\n  search: PropTypes.string\n};\n\nexport default VendorWithApollo;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n// import translate from '../../i18n';\n// import { MenuItem } from '../../modules/common/components/web';\nimport Products from './containers/Products';\nimport Category from './containers/Category';\nimport Vendor from './containers/Vendor';\nimport SingleProduct from './containers/SingleProduct';\nimport resources from './locales';\nimport Feature from '../connector';\n\n// const NavLinkWithI18n = translate('products')(({ t }) => (\n//   <NavLink to=\"/products\" className=\"nav-link\" activeClassName=\"active\">\n//     {t('navLink')}\n//   </NavLink>\n// ));\nexport default new Feature({\n  route: [\n    <Route exact path=\"/products\" component={Products} />,\n    <Route exact path=\"/products/:category\" component={Category} />,\n    <Route exact path=\"/products/brands/:vendor_name\" component={Vendor} />,\n    <Route exact path=\"/product/:vendor_name/:product_name/:category\" component={SingleProduct} />\n  ],\n  localization: { ns: 'products', resources }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport gql from 'graphql-tag';\n// import classnames from 'classnames';\nimport { MdClose, MdSave } from 'react-icons/md';\n// import {  } from '../../common/components/global';\n// import settings from '../../../../../../settings';\nimport '../styles/manage-specs.scss';\n// import { ADMIN_PRODUCTS_QUERY, CURRENT_USER_QUERY, DELETE_TOKEN, LOGOUT_ADMIN } from '../../common/schema';\n\nimport PRODUCT_DATA_QUERY from '../../common/graphql/ProductDataQuery.graphql';\nimport ADD_PRODUCT_DATA from '../../common/graphql/AddProductData.graphql';\nimport UPDATE_PRODUCT_DATA from '../../common/graphql/UpdateProductData.graphql';\nimport { ADMIN_PRODUCTS_QUERY, MODIFY_PRODUCT_DATA } from '../../common/schema';\nimport { prodFeatures, prodSpecs } from '../../products/components/SingleProductView';\n\nconst selectProdString = 'Select a product';\nconst selectSpecString = 'Select a specification';\nconst fullSpecs = [...prodSpecs, ...prodFeatures];\nconst clearedSubmissionResult = { submissionError: null, submissionSuccess: null };\n\nclass ManageSpecs extends React.Component {\n  state = {\n    currentEdit: {},\n    selectedProduct: selectProdString,\n    selectedSpec: selectSpecString,\n    specInput: '',\n    submissionError: null,\n    submissionSuccess: null\n  };\n  componentDidMount() {\n    if (this.props.productData) {\n      console.log('PRODUCT DATA::', this.props.productData);\n      this.setState({ selectedProduct: this.props.productData.handle });\n    }\n    // console.log('The props::', this.props);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.productData !== prevProps.productData) {\n      console.log('DID UPDATE THE PROPS::', this.props.productData.product_name);\n      return this.setState({ selectedProduct: this.props.productData.handle });\n    }\n    if (prevState.selectedProduct !== this.state.selectedProduct) {\n      // return this.props.refetchProductData({ handle: this.state.selectedProduct });\n    }\n  }\n\n  handleProductSelect = e =>\n    this.setState({\n      selectedProduct: e.target.value,\n      selectedSpec: selectSpecString,\n      currentEdit: {},\n      ...clearedSubmissionResult\n    });\n\n  handleSpecSelect = e =>\n    this.setState({\n      selectedSpec: e.target.value,\n      ...clearedSubmissionResult\n    });\n\n  handleSpecInput = e => {\n    const { currentEdit: prevEdit } = this.state;\n    const {\n      target: { name, value }\n    } = e;\n    this.setState({ currentEdit: { ...prevEdit, [name]: value } });\n  };\n\n  submitSpecs = async e => {\n    e.preventDefault();\n\n    const {\n      productData,\n      addProductData,\n      updateProductData,\n      sfy_shop: { products }\n    } = this.props;\n    const { currentEdit, selectedProduct } = this.state;\n\n    const currentSpecs = productData === null ? {} : productData;\n    const { __typename, id, ...specsToSubmit } = Object.assign(currentSpecs, currentEdit, {\n      handle: selectedProduct\n    });\n\n    let dataUpdateResult;\n    if (productData === null) {\n      // If adding a new product data to rcomm db, add sku and product name from Shopify\n      const [sfyData] = products.edges.filter(({ node }) => node.handle === selectedProduct);\n      const {\n        title,\n        vendor,\n        variants: { edges: variantEdges }\n      } = sfyData.node;\n      const { sku: _sku } = variantEdges[0].node;\n      const updatedSubmission = { ...specsToSubmit, product_name: `${vendor} ${title}`, sku: _sku };\n      dataUpdateResult = await addProductData(updatedSubmission);\n    } else {\n      dataUpdateResult = await updateProductData(specsToSubmit);\n    }\n\n    if (!dataUpdateResult) return;\n\n    if ('errors' in dataUpdateResult) {\n      return this.setState({ submissionError: dataUpdateResult.errors[0] });\n    }\n\n    if ('productData' in dataUpdateResult && dataUpdateResult.productData) {\n      const { product_name, handle } = dataUpdateResult.productData;\n      this.props.refetchProductData({ handle });\n      return this.setState({\n        submissionSuccess: `Successfully updated ${product_name}!`,\n        currentEdit: {},\n        selectedSpec: selectSpecString\n      });\n    }\n  };\n\n  renderInputValue = () => {\n    const { selectedSpec, currentEdit } = this.state;\n    const { productData } = this.props;\n    if (selectedSpec in currentEdit) return currentEdit[selectedSpec];\n    else if (productData && selectedSpec in productData) return productData[selectedSpec];\n    else return '';\n  };\n\n  handleCancelEdit = () => {\n    const { currentEdit, selectedSpec } = this.state;\n    if (selectedSpec in currentEdit) {\n      const { [selectedSpec]: removed, ...rest } = currentEdit;\n      this.setState({ currentEdit: rest });\n    }\n    return;\n  };\n\n  isDisabled = () => {\n    const { loadingProductData, productData } = this.props;\n    if (!loadingProductData && !productData) return false;\n    if (Object.keys(this.state.currentEdit).length > 0) return false;\n    return true;\n  };\n\n  render() {\n    const { renderInputValue, handleCancelEdit, isDisabled } = this;\n    const { selectedProduct, selectedSpec } = this.state;\n    const { loadingProductData, sfy_shop } = this.props;\n    console.log('PRODUCT::', loadingProductData);\n    let products = null;\n    if (!loadingProductData && sfy_shop && 'products' in sfy_shop) {\n      if (sfy_shop.products.edges.length > 0) {\n        products = sfy_shop.products.edges;\n      }\n    }\n    if (loadingProductData) {\n      return <div>Loading</div>;\n    }\n\n    return (\n      <section className=\"manage-specs\">\n        <div className=\"form__select-group\">\n          {/* <label htmlFor=\"product-select\">Please select a product to change product specifications</label> */}\n          <p>{this.props.productData.product_name}</p>\n          {/* <select id=\"product-select\" onChange={this.handleProductSelect} value={selectedProduct}>\n            <option value={selectProdString} disabled>\n              {selectProdString}\n            </option>\n            {products\n              ? products.map(({ node }) => (\n                  <option key={node.handle} value={node.handle}>\n                    {`${node.vendor}: ${node.title}`}\n                  </option>\n                ))\n              : null}\n          </select> */}\n        </div>\n        {selectedProduct !== selectProdString ? (\n          <form onSubmit={this.submitSpecs} className=\"form manage-specs-form\">\n            <div className=\"form__select-group form__select-group--third\">\n              <select\n                id=\"spec-select\"\n                className=\"manage-specs-form__input\"\n                onChange={this.handleSpecSelect}\n                value={selectedSpec}\n              >\n                <option value={selectSpecString} disabled>\n                  Select a specification\n                </option>\n                {fullSpecs.map(([key, value], i) => (\n                  <option key={i} value={key}>\n                    {value}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {selectedSpec !== selectSpecString ? (\n              <div className=\"form__item form__item--two-thirds\">\n                <input\n                  onChange={this.handleSpecInput}\n                  type=\"text\"\n                  name={this.state.selectedSpec}\n                  value={renderInputValue()}\n                />\n              </div>\n            ) : null}\n            <div className=\"manage-specs-form__button-group\">\n              {this.state.currentEdit.hasOwnProperty(this.state.selectedSpec) ? (\n                <button type=\"button\" onClick={() => handleCancelEdit()}>\n                  <MdClose className=\"manage-specs-form__icon\" />\n                  <span>Cancel Edit</span>\n                </button>\n              ) : null}\n              <button disabled={isDisabled()} type=\"submit\">\n                <MdSave className=\"manage-specs-form__icon\" />\n                <span>Submit Updated Specs</span>\n              </button>\n            </div>\n          </form>\n        ) : null}\n        {['submissionSuccess', 'submissionError'].map(property => {\n          if (property in this.state) return <div key={property}>{this.state[property]}</div>;\n          return null;\n        })}\n      </section>\n    );\n  }\n}\nconst QUERY = gql`\n  query productData($handle: String!) {\n    productData(handle: $handle) {\n      id\n      sku\n      product_name\n      handle\n      shock_absorption\n      console\n      user_ids\n      workouts\n      hrt_monitoring\n      stride_technology\n      power\n      design\n      drive_system\n      handlebars\n      seat\n      pedals\n      frame\n      finish\n      motion\n      exercises\n      weight_stack\n      included_accessories\n      optional_weight_stack\n      running_area\n      motor\n      speed\n      incline\n      resistance_levels\n      resistance_system\n      stride\n      max_user_weight\n      ramp\n      stored_vertical_height\n      seat_floor_distance\n      warranty\n    }\n  }\n`;\nconst ManageSpecsWithApollo = compose(\n  ADMIN_PRODUCTS_QUERY(),\n  graphql(QUERY, {\n    options: props => {\n      console.log('PROPS. MATCH ', props.match.params);\n      return { variables: { handle: props.match.params.product }, fetchPolicy: 'network-only' };\n    },\n    props: ({ data }) => {\n      const { loading: loadingProductData, error, productData, refetch: refetchProductData } = data;\n      if (error) throw new Error(`Error in Related Prodcuts Query: ${error}`);\n      console.log('ANYTHING:::', productData);\n      return { loadingProductData, productData, refetchProductData };\n    }\n  }),\n  MODIFY_PRODUCT_DATA(ADD_PRODUCT_DATA, 'addProductData'),\n  MODIFY_PRODUCT_DATA(UPDATE_PRODUCT_DATA, 'updateProductData')\n)(ManageSpecs);\n\nManageSpecs.propTypes = {\n  productsLoading: PropTypes.bool,\n  products: PropTypes.array,\n  productSpecs: PropTypes.array,\n  refetchProductData: PropTypes.func,\n  sfy_shop: PropTypes.object,\n  productData: PropTypes.object,\n  loadingProductData: PropTypes.bool\n};\n\nexport default ManageSpecsWithApollo;\n","import FileUploader from '../util/FileUploader';\n\nconst getField = (field, values) => {\n  if (values.hasOwnProperty(field)) {\n    return values[field];\n  }\n};\n// const handleLocationsCheck = async (context) => {\n//  const check = await context.get.dealers();\n//  console.log('CHECK::', check);\n//  return check;\n// }\n/*eslint-disable no-unused-vars*/\nexport default pubsub => ({\n  Query: {\n    async pages(obj, input, { Admin }) {\n      try {\n        const pages = await Admin.get.pages();\n        // console.log('PAGES:::', pages);\n        if (pages.length == 0) {\n          const page = await Admin.insert.page({ id: 0, name: 'home' });\n          // console.log('PAGE::', page);\n          return page;\n        }\n        return pages;\n      } catch (e) {\n        return e;\n      }\n    },\n    async page(obj, { id, pageTitle }, { Admin, Dealers }) {\n      try {\n        if (id) {\n          return { id };\n        } else {\n          // console.log('NO ID:::', pageTitle);\n          const page = await Admin.get.pageByTitle(pageTitle);\n          if (page.name === 'locations') {\n            // const check = await handleLocationsCheck(Dealers);\n            // console.log('LOCATIONSCHECK DONE', check);\n          }\n          // console.log('PAGE::', page);\n          return { id: page.id, title: page.title, name: page.name };\n        }\n      } catch (e) {\n        console.log('ERRROR GETTING PAGE:', e);\n        return e;\n      }\n    },\n    async vendorData(_, { handle }, { Admin }) {\n      // console.log('Vendor HANDLE:', handle);\n      try {\n        const data = await Admin.get.vendorByHandle(handle);\n        // console.log('DATA::', data, handle.length);\n        if (typeof data == 'undefined' && handle.length > 0) {\n          const vendor = await Admin.insert.vendorSeo(handle);\n          // console.log('VENDOR::', vendor);\n          return vendor;\n        }\n        if (handle.length == 0) {\n          return null;\n        }\n        if (data) {\n          return { handle, seo: data };\n        }\n      } catch (e) {\n        return e;\n      }\n    },\n    async collectionData(_, { handle }, { Admin }) {\n      // console.log('COLLECTION HANDLE:', handle);\n      try {\n        const data = await Admin.get.collectionByHandle(handle);\n        // console.log('COLLECTION DATA::', data, handle);\n        if ((typeof data == 'undefined' || !data) && handle.length > 0) {\n          const collection = await Admin.insert.collectionSeo(handle);\n          // console.log('VENDOR::', collection);\n          return collection;\n        }\n        if (handle.length == 0) {\n          return null;\n        }\n        if (data) {\n          const { id, ...rest } = data;\n          const collection = { id, seo: rest };\n          // console.log('WE SHOULD SEND DATA::;', collection);\n          return collection;\n        }\n      } catch (e) {\n        return e;\n      }\n      return null;\n    }\n  },\n  Page: {\n    async fields(obj, { field_names }, { Admin }, info) {\n      // console.log('PAGE ID::', obj);\n      const { page_content } = await Admin.get.pageContents(obj.id);\n      const requestedFields = field_names\n        .map(([section, field]) => {\n          return page_content\n            .map(({ field_value, ...rest }) => {\n              const values = JSON.parse(field_value);\n              if (section == rest.section_name) {\n                const combined = Object.assign({}, rest, { [field]: getField(field, values) });\n                return combined;\n              }\n            })\n            .reduce(\n              (accum, curr) => {\n                const field_value = curr[field];\n                delete curr[field];\n                accum = Object.assign({}, accum, curr, { field_value: { [field]: field_value } });\n                return accum;\n              },\n              { field_value: null }\n            );\n        })\n        .reduce((accum, curr) => {\n          accum['field_value'] = Object.assign({}, accum['field_value'], curr['field_value']);\n          delete curr['field_value'];\n          accum = Object.assign({}, accum, curr);\n          return accum;\n        }, {});\n      // console.log('REQUESTED FIELDS:', requestedFields);\n      const { field_value, ...fields } = requestedFields;\n      const stringValues = JSON.stringify(field_value);\n      const data = { ...fields, field_value: stringValues };\n      return [data];\n    }\n  },\n  Mutation: {\n    async signS3(obj, { filename, filetype }) {\n      const signedRequest = await FileUploader.getSignedUrl({ filename, filetype });\n      // console.log('signedRequest::??', signedRequest);\n      return signedRequest;\n    },\n    async uploadPageContent(obj, { pageContent }, { Admin }) {\n      try {\n        const [data] = await Admin.update.pageContent(pageContent);\n        return data.page_content;\n      } catch (e) {\n        console.log('EERROO', e);\n      }\n    },\n    async uploadSeo(obj, { path, handle, seo }, { Admin }) {\n      console.log('PATH::', path);\n      console.log('HANDLE::', handle);\n      console.log('SEO::', seo);\n      try {\n        const [data] = await Admin.update.seo({ path, handle, seo });\n        console.log('DATA::', data);\n        return data;\n      } catch (e) {\n        console.log('ERROR UPDATING SEO DATA::', e);\n      }\n    }\n  },\n  Subscription: {}\n});\n","/*eslint-disable no-unused-vars*/\nexport default pubsub => ({\n  Query: {\n    async vendors(_, __, context) {\n      try {\n        return await context.Vendor.get.vendors();\n      } catch (err) {\n        console.log('Error resolving query of vendors', err);\n      }\n    },\n    async vendor(_, { input }, context) {\n      const { handle, id } = input;\n      try {\n        if (id) {\n          return await context.Vendor.get.vendorById(id);\n        }\n        if (handle) {\n          return await context.Vendor.get.vendorByHandle(handle);\n        }\n      } catch (err) {\n        console.log('Error resolving query of single Vendor', err);\n      }\n    }\n  },\n  Vendor: {\n    async categories(obj, _, context) {\n      const { id } = obj;\n      try {\n        return await context.Vendor.get.vendorCategories(id);\n      } catch (err) {\n        console.log('Error resolving categories inside of Vendor', err);\n      }\n    },\n    async vendorData(\n      obj,\n      {\n        input: { handle }\n      },\n      { Admin }\n    ) {\n      console.log('OBJ::', obj);\n      console.log(' input', handle);\n      // const handle = '';\n      try {\n        const data = await Admin.get.vendorByHandle(handle);\n        console.log('DATA::', data, handle.length);\n        if (typeof data == 'undefined' && handle.length > 0) {\n          const vendor = await Admin.insert.vendorSeo(handle);\n          console.log('VENDOR::', vendor);\n          return vendor;\n        }\n        if (handle.length == 0) {\n          return null;\n        }\n        if (data) {\n          return { handle, seo: data };\n        }\n      } catch (e) {\n        return e;\n      }\n    }\n  }\n});\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeExtension\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"vendors\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Vendor\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"vendor\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VendorQueryInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Vendor\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Vendor\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"logo_url\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Category\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"is_featured\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"is_top_six\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"top_six_position\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"vendorData\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VendorQueryInput\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VendorData\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"VendorQueryInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"handle\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":506}};\n    doc.loc.source = {\"body\":\"extend type Query {\\n  # Vendors query\\n  vendors: [Vendor]\\n  # Query an individual vendor by id or name\\n  vendor(input: VendorQueryInput!): Vendor\\n}\\n\\n# Core Vendor Type\\ntype Vendor {\\n  id: Int!\\n  name: String\\n  handle: String\\n  logo_url: String\\n  categories: [Category]\\n  is_featured: Boolean\\n  is_top_six: Boolean\\n  top_six_position: Int\\n  description: String\\n  vendorData(input: VendorQueryInput): VendorData\\n}\\n\\n# Argument type to query single vendor\\ninput VendorQueryInput {\\n  id: Int\\n  handle: String\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAHA;AADA;AAWA;AACA;AACA;AACA;AAIA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAMA;AAAA;AACA;AAPA;AAQA;AAAA;AACA;AATA;AAWA;AADA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AACA;AAGA;AAJA;AACA;AAKA;AACA;AACA;AAhBA;AACA;AADA;AAFA;AAKA;AACA;;;AAYA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAFA;AAUA;;;;AAhCA;AACA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AAiDA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AADA;AAaA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AA3FA;AADA;AA2GA;;;;AAlHA;AACA;AAoHA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAmCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAMA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AAEA;AADA;AADA;AAMA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAWA;AAXA;AAaA;AADA;AAIA;AACA;AAjBA;AAAA;AAAA;AAAA;AACA;AAiBA;AAlBA;AAmBA;AAAA;AAAA;AAnBA;AAyBA;AACA;AA1BA;AAAA;AACA;AADA;AA2BA;AA3BA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AA6BA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAuCA;AAxCA;AA0CA;AACA;AACA;AAHA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAgDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AALA;AAFA;AAgBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAFA;AAgBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAFA;AAgBA;AACA;AACA;AA5DA;AA8DA;AAEA;AACA;;;;;AAhPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA6NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAJA;AAFA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAhBA;AA6BA;;;;AAvTA;AACA;AAyTA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AAZA;AAeA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AAhBA;AAmBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAKA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAVA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AACA;AAGA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAoBA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAmBA;AACA;AACA;AAHA;AACA;AAnBA;AAAA;AAkBA;AAKA;AACA;AAAA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AArBA;AA+CA;AACA;AACA;AA/CA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAQA;AATA;AAFA;AAeA;;;;AA5EA;AACA;AA6EA;AAGA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AAnEA;AACA;AAsnHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AAXA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnnHA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AA3CA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AAAA;AACA;AA/BA;AAgCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAtCA;AAuCA;AACA;AAFA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAqDA;AACA;AACA;AACA;AAxDA;AAwDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AA/DA;AAgEA;AACA;AACA;AAlEA;AAkEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAtFA;AAuFA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlGA;AAkGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA5GA;AA4GA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAlHA;AAkHA;AAAA;AACA;AAnHA;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3HA;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnIA;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5IA;AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArJA;AAqJA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA7JA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAbA;AA6BA;AACA;;;AA+HA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAPA;AADA;AAeA;AACA;AACA;AAAA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAFA;AAFA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAFA;AAFA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAnCA;AADA;AADA;AADA;AA2CA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAmBA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAnFA;AAuGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAKA;AAGA;AACA;AAJA;AApBA;AAxGA;AAPA;AAoJA;AACA;;;;AAnWA;AACA;AAqWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAVA;AACA;AAaA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAyBA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AAEA;AADA;AADA;AAMA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAWA;AAXA;AAaA;AADA;AAIA;AACA;AAjBA;AAAA;AAAA;AAAA;AACA;AAiBA;AAlBA;AAmBA;AAAA;AAAA;AAnBA;AAyBA;AACA;AA1BA;AAAA;AACA;AADA;AA2BA;AA3BA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AA6BA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAuCA;AAxCA;AA0CA;AACA;AACA;AAHA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAgDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AA9GA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAiGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AADA;AATA;AADA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AA5BA;AA0CA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA/DA;AAkEA;;;;AA3MA;AACA;AA4MA;AAyCA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AALA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAcA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AAjBA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AA7EA;AA+EA;AACA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAnCA;AAqzBA;AA2BA;AAhJA;AAAA;;;;;;;;;;;;;;;ACbA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AApBA;AAsqBA;AApCA;AAvBA;AAAA;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}