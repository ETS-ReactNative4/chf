{"version":3,"file":"index.2cf62b67e3e8e58f5bf9.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/components/VendorView.web.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport classnames from 'classnames';\nimport {\n  PageLayout,\n  ScrollToTop,\n  // Hero,\n  CollapseMenu,\n  PageBreadcrumbs\n} from '../../common/components/global';\nimport { toUrlName } from '../../common/components/global/components/PageBreadcrumbs';\nimport ShopBreadcrumbs from './ShopBreadcrumbs';\nimport ShopGrid from './ShopGrid';\nimport ShopGridSort from './ShopGridSort';\n// import ShopGridPages from './ShopGridPages';\nimport Loader from '../../common/components/global/components/Loader';\n\nimport settings from '../../../../../../settings';\nimport '../styles/category-view.scss';\n\nconst capFirstLtr = str => str[0].toUpperCase() + str.slice(1);\n\nclass VendorView extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location } = props;\n    let filters = {};\n    if (\n      typeof location !== 'undefined' &&\n      'state' in location &&\n      typeof location.state !== 'undefined' &&\n      'filters' in location.state &&\n      typeof location.state.filters !== 'undefined'\n    ) {\n      filters = location.state.filters;\n    }\n    this.state = {\n      priceFilterLower: '',\n      priceFilterUpper: '',\n      priceConfirmed: false,\n      priceErr: null,\n      selectedPriceRange: null,\n      selectedPromotion: null,\n      selectedCategory: null,\n      selectedVendor: null,\n      sortMethod: 'featured',\n      displayLim: 12,\n      startDisplayIdx: 0,\n      currPg: 1,\n      filteredFinalIdx: null,\n      ...filters\n    };\n  }\n  handleInput = e => this.setState({ [e.target.name]: e.target.value });\n  scrollToGridTop = () => {\n    return window.scrollTo({\n      top: 200,\n      left: 0,\n      behavior: 'smooth'\n    });\n  };\n  applyPriceFilter = e => {\n    e.preventDefault();\n    this.setState({ priceErr: null });\n    const { priceFilterUpper: u, priceFilterLower: l } = this.state;\n\n    // Validate limits\n    if (!u || !l) return this.setState({ priceErr: 'Please enter an upper and lower price limit.' });\n    const isPrice = new RegExp(/^\\d+(\\.\\d{2})?$/, 'i');\n    if ([u, l].map(lim => isPrice.test(lim)).some(res => res == false)) {\n      return this.setState({ priceErr: 'Please enter valid prices.' });\n    }\n    // If validated, apply filter\n    this.setState({ priceConfirmed: true });\n  };\n  clearPriceFilter = e => {\n    e.preventDefault();\n    this.setState({ priceConfirmed: false, priceFilterLower: '', priceFilterUpper: '' });\n  };\n  getIdxsAndLims = () => {\n    const { edges } = this.props.sfy_shop.products;\n    const { startDisplayIdx, displayLim, currPg } = this.state;\n    const edgesFinalIdx = edges.length - 1;\n    const finalDisplayIdx = startDisplayIdx + displayLim - 1;\n    return { startDisplayIdx, displayLim, currPg, edgesFinalIdx, finalDisplayIdx };\n  };\n  setFilteredFinalIdx = filteredProds => {\n    this.setState({ filteredFinalIdx: filteredProds.length - 1 });\n  };\n  isPaginationDisabled = type => {\n    const { hasNextPage } = this.props;\n    const { selectedVendor, selectedCategory, filteredFinalIdx } = this.state;\n    const { startDisplayIdx, finalDisplayIdx, edgesFinalIdx } = this.getIdxsAndLims();\n    if (type === 'forward') {\n      if (selectedVendor || selectedCategory) {\n        if (finalDisplayIdx < filteredFinalIdx) return false;\n        else return true;\n      }\n      if (finalDisplayIdx < edgesFinalIdx) return false;\n      else {\n        if (hasNextPage) return false;\n        else return true;\n      }\n    }\n    if (type === 'back') {\n      if (startDisplayIdx > 0) return false;\n      else return true;\n    }\n  };\n  handleLimChange = e => {\n    const newLim = parseInt(e.target.value);\n    const { displayLim: oldLim, edgesFinalIdx } = this.getIdxsAndLims();\n    const nextFinalDisplayIdx = newLim - 1;\n    if (newLim > oldLim) {\n      if (nextFinalDisplayIdx > edgesFinalIdx) {\n        const first = nextFinalDisplayIdx - edgesFinalIdx;\n        this.props.loadMore(first);\n      }\n    }\n    return this.setState({ startDisplayIdx: 0, displayLim: newLim, currPg: 1 });\n  };\n  handlePageForward = () => {\n    const { startDisplayIdx, displayLim, edgesFinalIdx, currPg } = this.getIdxsAndLims();\n    const nextStartDisplayIdx = startDisplayIdx + displayLim;\n    const nextFinalDisplayIdx = nextStartDisplayIdx + displayLim - 1;\n    if (nextFinalDisplayIdx > edgesFinalIdx) {\n      const first = nextFinalDisplayIdx - edgesFinalIdx;\n      this.props.loadMore(first);\n    }\n    this.setState({ startDisplayIdx: nextStartDisplayIdx, currPg: currPg + 1 }, () => this.scrollToGridTop());\n  };\n  handlePageBack = () => {\n    const { startDisplayIdx, displayLim, currPg } = this.getIdxsAndLims();\n    const backLog = startDisplayIdx - displayLim;\n    if (backLog >= 0) this.setState({ startDisplayIdx: backLog, currPg: currPg - 1 }, () => this.scrollToGridTop());\n    else this.setState({ startDisplayIdx: 0, currPg: 1 }, () => this.scrollToGridTop());\n  };\n  selectSortMethod = sortMethod => this.setState({ sortMethod: sortMethod });\n  selectPriceRange = priceRangeId => {\n    const { selectedPriceRange } = this.state;\n    if (selectedPriceRange && selectedPriceRange === priceRangeId) {\n      this.setState({ selectedPriceRange: null });\n    } else {\n      this.setState({ selectedPriceRange: priceRangeId });\n    }\n  };\n  selectPromotion = promotionId => {\n    const { selectedPromotion } = this.state;\n    if (selectedPromotion && selectedPromotion === promotionId) {\n      this.setState({ selectedPromotion: null });\n    } else {\n      this.setState({ selectedPromotion: promotionId });\n    }\n  };\n  selectCategory = categoryId => {\n    const { selectedCategory } = this.state;\n    if (selectedCategory && selectedCategory === categoryId) {\n      this.setState({ selectedCategory: null, startDisplayIdx: 0, currPg: 1 });\n    } else {\n      if (this.props.hasNextPage) this.props.loadMore(100);\n      this.setState({ selectedCategory: categoryId, startDisplayIdx: 0, currPg: 1 });\n    }\n  };\n  selectVendor = vendorId => {\n    const { selectedVendor } = this.state;\n    if (selectedVendor && selectedVendor === vendorId) {\n      this.setState({ selectedVendor: null, startDisplayIdx: 0, currPg: 1 });\n    } else {\n      if (this.props.hasNextPage) this.props.loadMore(100);\n      this.setState({ selectedVendor: vendorId, startDisplayIdx: 0, currPg: 1 });\n    }\n  };\n  parseCategories = () => {\n    const {\n      sfy_shop_collections: {\n        collections: { edges: categories }\n      }\n    } = this.props;\n    return categories.map(({ node: { id, title: name } }) => ({ id, name, url_name: toUrlName(name) }));\n  };\n  render() {\n    const { selectedPriceRange, selectedPromotion, selectedCategory } = this.state;\n    const {\n      promotions,\n      priceRanges,\n      vendor,\n      // heroImage,\n      bannerImage,\n      loading,\n      sfy_shop,\n      sfy_shop_collections\n    } = this.props;\n    const { priceConfirmed, priceFilterUpper, priceFilterLower } = this.state;\n    const filtersToPass = { priceConfirmed, priceFilterUpper, priceFilterLower };\n    console.log(\"BRAND PROPS\", vendor);\n    const renderMetaData = vendor => (\n      <Helmet\n        title={vendor.title}\n        meta={[\n          {\n            name: 'description',\n            content: `${vendor.description}`\n          },\n          {\n            name: 'keywords',\n            content: `${vendor.keywords}`\n          }\n        ]}\n      />\n    );\n    if (loading || !sfy_shop || !sfy_shop_collections || !vendor) {\n      return (\n        <PageLayout>\n          {/* {renderMetaData(vendor)} */}\n          <Loader />\n        </PageLayout>\n      );\n    } else if (vendor && !sfy_shop) {\n      return (\n        <PageLayout>\n          {renderMetaData(vendor.vendorData.seo)}\n          <Loader />\n        </PageLayout>\n      );\n    } else {\n      const { products } = sfy_shop;\n      const { collections: categories } = sfy_shop_collections;\n      return (\n        <PageLayout>\n          {renderMetaData(vendor.vendorData.seo)}\n          <ScrollToTop />\n          {/* <Hero overlayNav={true} image={heroImage} /> */}\n          {/* <LowPriceBanner /> */}\n          <img src={bannerImage.link} alt={bannerImage.name} />\n          <PageBreadcrumbs {...this.props} />\n          <div className=\"category-view\">\n            <div className=\"category-view__sidebar\">\n              <div className=\"category-view__collapse-label\">FILTER BY</div>\n              <div className=\"category-view__collapse-menu\">\n                {categories && categories.edges.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"CATEGORY\">\n                      {categories.edges.map(({ node: { id, title } }) => (\n                        <div\n                          key={id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedCategory === id\n                          })}\n                          onClick={() => this.selectCategory(id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{title}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                <div className=\"category-view__collapse\">\n                  <CollapseMenu label=\"PRICE\">\n                    <form className=\"category-view__collapse-item\">\n                      <div>\n                        <label>Lower Limit</label>\n                        <div>\n                          <span>$</span>\n                          <input\n                            style={{ width: '60%' }}\n                            type=\"text\"\n                            name=\"priceFilterLower\"\n                            value={this.state.priceFilterLower}\n                            placeholder=\"0\"\n                            onChange={e => this.handleInput(e)}\n                          />\n                        </div>\n                      </div>\n                      <div>\n                        <label>Upper Limit</label>\n                        <div>\n                          <span>$</span>\n                          <input\n                            style={{ width: '60%' }}\n                            type=\"text\"\n                            name=\"priceFilterUpper\"\n                            value={this.state.priceFilterUpper}\n                            placeholder=\"0\"\n                            onChange={e => this.handleInput(e)}\n                          />\n                        </div>\n                      </div>\n                      <button disabled={this.state.priceConfirmed} onClick={e => this.applyPriceFilter(e)}>\n                        Confirm\n                      </button>\n                      {this.state.priceConfirmed ? (\n                        <button onClick={e => this.clearPriceFilter(e)}> Clear </button>\n                      ) : null}\n                      {this.state.priceErr ? <div>{this.state.priceErr}</div> : null}\n                    </form>\n                  </CollapseMenu>\n                </div>\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                {'promotions' in this.props && promotions.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"PROMOTIONS\">\n                      {promotions.map(promotion => (\n                        <div\n                          key={promotion.id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedPromotion === promotion.id\n                          })}\n                          onClick={() => this.selectPromotion(promotion.id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{promotion.name}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"category-view__collapse-menu\">\n                {'priceRanges' in this.props && priceRanges.length > 0 ? (\n                  <div className=\"category-view__collapse\">\n                    <CollapseMenu label=\"PRICE RANGE\">\n                      {priceRanges.map(priceRange => (\n                        <div\n                          key={priceRange.id}\n                          className={classnames('category-view__collapse-item', {\n                            'category-view__collapse-item--active': selectedPriceRange === priceRange.id\n                          })}\n                          onClick={() => this.selectPriceRange(priceRange.id)}\n                        >\n                          <span className=\"category-view__collapse-name\">{priceRange.name}</span>\n                        </div>\n                      ))}\n                    </CollapseMenu>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"category-view__main\">\n              <h1 className=\"header header--upper header--primary category-view__main-header\">\n                {products.edges.length > 0\n                  ? `${products.edges[0].node.vendor} Equipment`\n                  : this.props.match.params.vendor_name\n                      .split('-')\n                      .map(item => capFirstLtr(item))\n                      .join(' ')}\n              </h1>\n              <ShopBreadcrumbs\n                categories={vendor.categories}\n                for=\"category\"\n                filtersToPass={filtersToPass}\n                vendorUrlName={this.props.match.params.vendor_name}\n              />\n              <ShopGridSort\n                selectSortMethod={this.selectSortMethod}\n                handleLimChange={this.handleLimChange}\n                {...this.state}\n              />\n              <ShopGrid\n                {...this.state}\n                {...this.props}\n                products={products}\n                setFilteredFinalIdx={this.setFilteredFinalIdx}\n              />\n              {/* <ShopGridPages\n                {...this.props}\n                {...this.state}\n                isDisabled={this.isPaginationDisabled}\n                handlePageForward={this.handlePageForward}\n                handlePageBack={this.handlePageBack}\n              /> */}\n            </div>\n          </div>\n        </PageLayout>\n      );\n    }\n  }\n}\n\nVendorView.propTypes = {\n  location: PropTypes.object,\n  promotions: PropTypes.array,\n  priceRanges: PropTypes.array,\n  vendor: PropTypes.object,\n  heroImage: PropTypes.object,\n  bannerImage: PropTypes.object,\n  vendors: PropTypes.array,\n  loading: PropTypes.bool,\n  sfy_shop: PropTypes.object,\n  hasNextPage: PropTypes.bool,\n  loadMore: PropTypes.func,\n  match: PropTypes.object,\n  sfy_shop_collections: PropTypes.object\n};\nVendorView.defaultProps = {\n  heroImage: {\n    name: 'Shop',\n    link: 'https://s3-us-west-2.amazonaws.com/chf-rcomm/shop_hero.png'\n  },\n  bannerImage: {\n    name: 'Low Price Guaranteed',\n    link: 'https://s3-us-west-2.amazonaws.com/chf-rcomm/shop_banner.png'\n  }\n};\n\nexport default VendorView;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AAAA;AACA;AA/BA;AAgCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAtCA;AAuCA;AACA;AAFA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAqDA;AACA;AACA;AACA;AAxDA;AAwDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AA/DA;AAgEA;AACA;AACA;AAlEA;AAkEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAtFA;AAuFA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlGA;AAkGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA5GA;AA4GA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAlHA;AAkHA;AAAA;AACA;AAnHA;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3HA;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnIA;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5IA;AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArJA;AAqJA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA7JA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAbA;AA6BA;AACA;;;AA+HA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAPA;AADA;AAeA;AACA;AACA;AAAA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAFA;AAFA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAFA;AAFA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAnCA;AADA;AADA;AADA;AA2CA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAmBA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AADA;AADA;AAFA;AAnFA;AAuGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAKA;AAGA;AACA;AAJA;AApBA;AAxGA;AAPA;AAoJA;AACA;;;;AAnWA;AACA;AAqWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AACA;AAUA;;;;A","sourceRoot":""}