{"version":3,"file":"index.a2a8dfc2786feaa9666f.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Locations/Form.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/user/index.web.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst defaultDealer = {\n  handle: '',\n  name: ' ',\n  street: ' ',\n  suite: ' ',\n  city: ' ',\n  zip: ' ',\n  state: ' ',\n  country: ' ',\n  email: ' ',\n  phone: ' ',\n  website: ' ',\n  lat: ' ',\n  lng: ' '\n};\nconst Formic = props => {\n  // console.log('FORM PROPS', props);\n  let dealer;\n  if (props.hasOwnProperty('dealerByHandle')) {\n    const { __typename, ...rest } = props.dealerByHandle;\n    dealer = rest;\n  } else {\n    dealer = null;\n  }\n  // console.log('DEALER::', dealer);\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={dealer ? dealer : defaultDealer}\n      onSubmit={async ({ id, ...values }) => {\n        // console.log('VALUES::', values);\n        await props.updateDealer(\n          Object.assign({}, values, {\n            handle: values.name\n              .split(' ')\n              .join('-')\n              .toLowerCase()\n          })\n        );\n        // console.log('DEALER::', dealer);\n      }}\n      render={({ errors, touched, isSubmitting, setFieldValue }) => {\n        // console.log('VALUES::', values);\n        return (\n          <Form className=\"admin__location__form\">\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"text\" name=\"name\" placeholder=\"Location Name\" />\n              {errors.name && touched.name && <div className=\"admin__form__seo--error\">{errors.name}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"text\" name=\"street\" placeholder=\"Street\" />\n              {errors.street && touched.street && <div className=\"admin__form__seo--error\">{errors.street}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"text\" name=\"city\" placeholder=\"City\" />\n              {errors.city && touched.city && <div className=\"admin__form__seo--error\">{errors.city}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"text\" name=\"state\" placeholder=\"State\" />\n              {errors.state && touched.state && <div className=\"admin__form__seo--error\">{errors.state}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"text\" name=\"zip\" placeholder=\"Zip Code\" />\n              {errors.zip && touched.zip && <div className=\"admin__form__seo--error\">{errors.zip}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"tel\" name=\"phone\" placeholder=\"Phone\" />\n              {errors.phone && touched.phone && <div className=\"admin__form__seo--error\">{errors.phone}</div>}\n            </div>\n            <div className=\"admin__form__seo--field\">\n              <Field className=\"admin__form__seo--input\" type=\"email\" name=\"email\" placeholder=\"Email\" />\n              {errors.email && touched.email && <div className=\"admin__form__seo--error\">{errors.email}</div>}\n            </div>\n            <div className=\"admin__form__seo--description\">\n              <Field\n                className=\"admin__form__seo--input\"\n                component=\"textarea\"\n                name=\"description\"\n                placeholder=\"Description\"\n              />\n              {errors.description &&\n                touched.description && <div className=\"admin__form__seo--error\">{errors.description}</div>}\n            </div>\n            <div className=\"admin__btn\">\n              {/* <label htmlFor=\"file\">File upload</label> */}\n              <button type=\"button\" className=\"admin__btn--upload\">\n                Image Upload\n                <input\n                  style={{ opacity: 0 }}\n                  id=\"file\"\n                  name=\"image_url\"\n                  type=\"file\"\n                  onChange={props.adaptFileEventToValue(setFieldValue)}\n                />\n                {/* <input style={{ opacity: 0 }} onChange={this.adaptFileEventToValue(uploadToS3)} type={'file'} multiple /> */}\n              </button>\n            </div>\n            <div id=\"upload-bar\" className=\"upload-progress\">\n              <div className=\"upload-bar\">0%</div>\n            </div>\n            <div className=\"admin__images\">\n              {props.image ? (\n                <img\n                  className=\"admin__images--image\"\n                  // id={entry[0]}\n                  draggable=\"false\"\n                  src={props.image ? props.image : ''}\n                />\n              ) : null}\n            </div>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        );\n      }}\n    />\n  );\n};\nFormic.propTypes = {\n  adaptFileEventToValue: PropTypes.func,\n  dealerByHandle: PropTypes.object,\n  image: PropTypes.string,\n  updateDealer: PropTypes.func\n};\nexport default Formic;\n","import React from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport translate from '../../i18n';\nimport access from './access';\nimport resolvers from './resolvers';\nimport resources from './locales';\n// import ProfileView from './components/ProfileView';\nimport { MenuItem } from '../../modules/common/components/web';\n// import Users from './containers/Users';\n// import UserEdit from './containers/UserEdit';\n// import UserAdd from './containers/UserAdd';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\n// import ForgotPassword from './containers/ForgotPassword';\n// import ResetPassword from './containers/ResetPassword';\n\nimport { AuthRoute, IfLoggedIn, IfNotLoggedIn, /*withLoadedUser,*/ withLogout } from './containers/Auth';\n\nimport Feature from '../connector';\n\n// const ProfileName = withLoadedUser(\n//   ({ currentUser }) => (currentUser ? currentUser.fullName || currentUser.username : null)\n// );\n\nconst LogoutLink = withRouter(\n  withLogout(({ logout, history }) => (\n    <a\n      href=\"javascript:void(0)\"\n      onClick={e => {\n        e.preventDefault();\n        (async () => {\n          await logout();\n          history.push('/');\n        })();\n      }}\n      className=\"nav-link\"\n    >\n      Logout\n    </a>\n  ))\n);\n\nexport * from './containers/Auth';\n\nconst NavLinkUsersWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/users\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.users')}\n  </NavLink>\n));\nconst NavLinkLoginWithI18n = translate('user')(({ t }) => (\n  <NavLink to=\"/login\" className=\"nav-link\" activeClassName=\"active\">\n    {t('navLink.sign')}\n  </NavLink>\n));\n\nexport default new Feature(access, {\n  route: [\n    // <AuthRoute exact path=\"/profile\" role={['user', 'admin']} redirect=\"/login\" component={ProfileView} />,\n    // <AuthRoute exact path=\"/users\" redirect=\"/profile\" role=\"admin\" component={Users} />,\n    // <AuthRoute exact path=\"/users/new\" role={['admin']} component={UserAdd} />,\n    // <AuthRoute path=\"/users/:id\" redirect=\"/profile\" role={['user', 'admin']} component={UserEdit} />,\n    <AuthRoute exact path=\"/register\" redirectOnLoggedIn redirect=\"/admin/dashboard\" component={Register} />,\n    <AuthRoute\n      exact\n      path=\"/admin/login\"\n      redirectOnLoggedIn\n      redirect=\"/admin/dashboard\"\n      component={withRouter(({ history }) => (\n        <Login onLogin={() => history.push('/admin/dashboard')} />\n      ))}\n    />,\n    // <AuthRoute exact path=\"/forgot-password\" redirectOnLoggedIn redirect=\"/profile\" component={ForgotPassword} />,\n    // <AuthRoute exact path=\"/reset-password/:token\" redirectOnLoggedIn redirect=\"/profile\" component={ResetPassword} />\n  ],\n  // navItem: [\n  //   <IfLoggedIn key=\"/users\" role=\"admin\">\n  //     <MenuItem>\n  //       <NavLinkUsersWithI18n />\n  //     </MenuItem>\n  //   </IfLoggedIn>\n  // ],\n  // navItemRight: [\n  //   // <IfLoggedIn key=\"/profile\">\n  //   //   <MenuItem>\n  //   //     <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">\n  //   //       <ProfileName />\n  //   //     </NavLink>\n  //   //   </MenuItem>\n  //   // </IfLoggedIn>,\n  //   <IfLoggedIn key=\"/logout\">\n  //     <MenuItem>\n  //       <LogoutLink />\n  //     </MenuItem>\n  //   </IfLoggedIn>,\n  //   <IfNotLoggedIn key=\"/login\">\n  //     <MenuItem>\n  //       <NavLinkLoginWithI18n />\n  //     </MenuItem>\n  //   </IfNotLoggedIn>\n  // ],\n  resolver: resolvers,\n  localization: { ns: 'user', resources },\n  // eslint-disable-next-line react/display-name\n  rootComponentFactory: req => (req ? <CookiesProvider cookies={req.universalCookies} /> : <CookiesProvider />)\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AARA;AAUA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAFA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAIA;AAJA;AAFA;AAUA;AAAA;AAAA;AAAA;AAAA;AAlEA;AAuEA;AAzFA;AA4FA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AATA;AAAA;AAAA;AADA;AACA;AAgBA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AALA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAhDA;;;;A","sourceRoot":""}