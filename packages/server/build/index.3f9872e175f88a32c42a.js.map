{"version":3,"file":"index.a98d6998398f56894b97.hot-update.js","sources":["/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Locations/index.js","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/components/Seo/index.js","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/containers/Dashboard.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/admin/graphql/PageQuery.graphql","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/home/components/PopularItemsCarousel.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/components/ShopGrid.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/components/SingleProductView.web.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/products/containers/SingleProduct.jsx","/Users/austinreynolds/Documents/MOD/chf-rcomm/packages/client/src/modules/user/containers/Auth.web.jsx","src/modules/admin/resolvers.js","src/modules/admin/sql.js","src/modules/index.ts"],"sourcesContent":["import React, { Component } from 'react';\n\nexport default class Locations extends Component {\n  render() {\n    return <div>Locations</div>;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose, withApollo } from 'react-apollo';\nimport { compose as Rcompose } from 'ramda';\n// import classnames from 'classnames';\n// import { Formik, Field, Form } from 'formik';\n// import { MdClose, MdSave } from 'react-icons/md';\nimport '../../../profile/styles/manage-specs.scss';\n\nimport Loader from '../../../common/components/global/components/Loader';\nimport SeoForm from './SeoForm';\n\nimport '../../styles/forms.scss';\nimport VENDORS_QUERY from '../../../common/graphql/VendorsQuery.graphql';\n\nimport PRODUCT_SEO_QUERY from '../../graphql/ProductSeoQuery.graphql';\nimport UPLOAD_SEO_CONTENT from '../../graphql/UploadSeoContent.graphql';\nimport COLLECTIONS_QUERY from '../../graphql/CollectionsQuery.graphql';\nimport VENDOR_SEO_QUERY from '../../graphql/VendorSeoQuery.graphql';\nimport COLLECTION_SEO_QUERY from '../../graphql/CollectionSeoQuery.graphql';\nimport UPLOAD_SEO from '../../graphql/UploadSeo.graphql';\n\n// import PRODUCT_DATA_QUERY from '../../../common/graphql/ProductDataQuery.graphql';\nimport ADD_PRODUCT_DATA from '../../../common/graphql/AddProductData.graphql';\nimport UPDATE_PRODUCT_DATA from '../../../common/graphql/UpdateProductData.graphql';\nimport { ADMIN_PRODUCTS_QUERY, MODIFY_PRODUCT_DATA } from '../../../common/schema';\n// import { prodFeatures, prodSpecs } from '../../../products/components/SingleProductView';\n\nconst selectProdString = 'Select a product';\nconst selectSpecString = 'Select a specification';\nconst selectContent = 'Select a category';\nconst selectBrandString = 'Select a brand';\nconst selectCollectionString = 'Select a collection';\n// const fullSpecs = [...prodSpecs, ...prodFeatures];\nconst clearedSubmissionResult = { submissionError: null, submissionSuccess: null };\n\nclass ManageSeo extends React.Component {\n  state = {\n    currentEdit: {},\n    selectedProduct: selectProdString,\n    selectedBrand: selectBrandString,\n    selectedCollection: selectCollectionString,\n    selectedSpec: selectSpecString,\n    selectedCategory: selectContent,\n    currentCategoryValues: null,\n    categories: ['Products', 'Brands', 'Collections'],\n    specInput: '',\n    submissionError: null,\n    submissionSuccess: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // const { selectedCategory } = this.state;\n    if (prevState.selectedProduct !== this.state.selectedProduct) {\n      this.loadProductSeo(this.state.selectedProduct);\n    }\n    if (this.state.selectedCategory === 'brands' && prevState.selectedBrand !== this.state.selectedBrand) {\n      this.loadBrandSeo(this.state.selectedBrand);\n      // console.log('brand', brand);\n    }\n    if (\n      this.state.selectedCategory === 'collections' &&\n      prevState.selectedCollection !== this.state.selectedCollection\n    ) {\n      this.loadCollectionSeo(this.state.selectedCollection);\n    }\n    // if (prevState.selectedCategory !== selectedCategory) {\n    //   console.log('SELECTED CAT IS DIFF', selectedCategory);\n    //   // const { productsLoading, sfy_shop, productData } = this.props;\n    //   console.log('THE PROPS::', this.props);\n    // }\n  }\n  loadProductSeo = async handle => {\n    const {\n      data: { productData }\n    } = await this.props.refetchProductData({ handle });\n    console.log('PRODUCT', productData);\n    this.setState({ currentCategoryValues: productData.seo });\n  };\n  loadCollectionSeo = async handle => {\n    const {\n      data: { collectionData }\n    } = await this.props.refetchCollectionSeo({ handle });\n    console.log('COLLECTION loaded::', collectionData);\n    this.setState({ currentCategoryValues: collectionData.seo });\n  };\n  loadBrandSeo = async handle => {\n    const {\n      data: { vendorData }\n    } = await this.props.refetchBrandSeo({ handle });\n    console.log('Brand::', vendorData);\n    this.setState({ currentCategoryValues: vendorData.seo });\n  };\n  handleProductSelect = e =>\n    this.setState({\n      selectedProduct: e.target.value,\n      selectedSpec: selectSpecString,\n      currentEdit: {},\n      ...clearedSubmissionResult\n    });\n  handleCategorySelect = e => {\n    this.setState({ selectedCategory: e.target.value.toLowerCase() });\n  };\n  handleSpecSelect = e =>\n    this.setState({\n      selectedSpec: e.target.value,\n      ...clearedSubmissionResult\n    });\n\n  handleSpecInput = e => {\n    const { currentEdit: prevEdit } = this.state;\n    const {\n      target: { name, value }\n    } = e;\n    this.setState({ currentEdit: { ...prevEdit, [name]: value } });\n  };\n\n  submitSpecs = async e => {\n    e.preventDefault();\n\n    const {\n      productData,\n      addProductData,\n      updateProductData,\n      sfy_shop: { products }\n    } = this.props;\n    const { currentEdit, selectedProduct } = this.state;\n\n    const currentSpecs = productData === null ? {} : productData;\n    const { __typename, id, ...specsToSubmit } = Object.assign(currentSpecs, currentEdit, {\n      handle: selectedProduct\n    });\n\n    let dataUpdateResult;\n    if (productData === null) {\n      // If adding a new product data to rcomm db, add sku and product name from Shopify\n      const [sfyData] = products.edges.filter(({ node }) => node.handle === selectedProduct);\n      const {\n        title,\n        vendor,\n        variants: { edges: variantEdges }\n      } = sfyData.node;\n      const { sku: _sku } = variantEdges[0].node;\n      const updatedSubmission = { ...specsToSubmit, product_name: `${vendor} ${title}`, sku: _sku };\n      dataUpdateResult = await addProductData(updatedSubmission);\n    } else {\n      dataUpdateResult = await updateProductData(specsToSubmit);\n    }\n\n    if (!dataUpdateResult) return;\n\n    if ('errors' in dataUpdateResult) {\n      return this.setState({ submissionError: dataUpdateResult.errors[0] });\n    }\n\n    if ('productData' in dataUpdateResult && dataUpdateResult.productData) {\n      const { product_name, handle } = dataUpdateResult.productData;\n      this.props.refetchProductData({ handle });\n      return this.setState({\n        submissionSuccess: `Successfully updated ${product_name}!`,\n        currentEdit: {},\n        selectedSpec: selectSpecString\n      });\n    }\n  };\n\n  renderInputValue = () => {\n    const { selectedSpec, currentEdit } = this.state;\n    const { productData } = this.props;\n    if (selectedSpec in currentEdit) return currentEdit[selectedSpec];\n    else if (productData && selectedSpec in productData) return productData[selectedSpec];\n    else return '';\n  };\n\n  handleCancelEdit = () => {\n    const { currentEdit, selectedSpec } = this.state;\n    if (selectedSpec in currentEdit) {\n      const { [selectedSpec]: removed, ...rest } = currentEdit;\n      this.setState({ currentEdit: rest });\n    }\n    return;\n  };\n\n  isDisabled = () => {\n    const { loadingProductData, productData } = this.props;\n    if (!loadingProductData && !productData) return false;\n    if (Object.keys(this.state.currentEdit).length > 0) return false;\n    return true;\n  };\n  validateTitle = (values, errors) => {\n    if (!values.title) {\n      errors.title = 'Required';\n    } else if (values.title.length > 60) {\n      errors.title = 'The title length should be under 60 characters';\n    }\n    return { values, errors };\n  };\n  validateDescription = ({ values, errors }) => {\n    if (!values.description) {\n      errors.description = 'Required';\n    } else if (values.description.length > 320) {\n      errors.description = 'Content descriptions should be 320 characters or less';\n    }\n    return { values, errors };\n  };\n  validateKeyWords = ({ values, errors }) => {\n    if (!values.keywords) {\n      errors.keywords = 'Required';\n    }\n    return { values, errors };\n  };\n  validateAll = values => {\n    let errors = {};\n    const composeValidation = Rcompose(this.validateKeyWords, this.validateDescription, this.validateTitle);\n    const validation = composeValidation(values, errors);\n    return validation.errors;\n  };\n  handleBrandSelect = e => {\n    this.setState({ selectedBrand: e.target.value });\n  };\n  handleCollectionSelect = e => {\n    this.setState({ selectedCollection: e.target.value });\n  };\n  renderSelect = category => {\n    const { selectedProduct, selectedBrand, selectedCollection } = this.state;\n    const { vendors, collections } = this.props;\n    switch (category) {\n      case 'products': {\n        const products = this.props.sfy_shop.products.edges;\n        return products ? (\n          <div>\n            <label htmlFor=\"product-select\">Please select a product to change seo values</label>\n            <select id=\"product-select\" onChange={this.handleProductSelect} value={selectedProduct}>\n              <option value={selectProdString} disabled>\n                {selectProdString}\n              </option>\n              {products\n                ? products.map(({ node }) => (\n                    <option key={node.handle} value={node.handle}>\n                      {`${node.vendor}: ${node.title}`}\n                    </option>\n                  ))\n                : null}\n            </select>\n          </div>\n        ) : null;\n      }\n      case 'brands': {\n        return (\n          <div>\n            <label htmlFor=\"product-select\">Please select a brand to change seo values</label>\n            <select id=\"product-select\" onChange={this.handleBrandSelect} value={selectedBrand}>\n              <option value={selectBrandString} disabled>\n                {selectBrandString}\n              </option>\n              {vendors\n                ? vendors.map(({ handle, name }) => (\n                    <option key={handle} value={handle}>\n                      {`${name}`}\n                    </option>\n                  ))\n                : null}\n            </select>\n          </div>\n        );\n      }\n      case 'collections': {\n        return (\n          <div>\n            <label htmlFor=\"product-select\">Please select a collection to change seo values</label>\n            <select id=\"product-select\" onChange={this.handleCollectionSelect} value={selectedCollection}>\n              <option value={selectCollectionString} disabled>\n                {selectCollectionString}\n              </option>\n              {collections\n                ? collections.map(({ node }) => (\n                    <option key={node.handle} value={node.handle}>\n                      {`${node.title}`}\n                    </option>\n                  ))\n                : null}\n            </select>\n          </div>\n        );\n      }\n      default:\n        return null;\n    }\n  };\n  currentSeoData = () => {\n    return this.state.currentCategoryValues;\n  };\n  render() {\n    const {\n      selectedProduct,\n      selectedBrand,\n      selectedCollection,\n      selectedCategory,\n      categories,\n      currentCategoryValues\n    } = this.state;\n    const { productsLoading, sfy_shop } = this.props;\n    // console.log('THE PROPS::', this.props);\n    let products = null;\n    // let seo = null;\n    if (!productsLoading && sfy_shop && 'products' in sfy_shop) {\n      if (sfy_shop.products.edges.length > 0) {\n        products = sfy_shop.products.edges;\n      }\n    }\n    // if (productData) {\n    //   seo = productData.seo;\n    // }\n    if (!products) {\n      return <Loader />;\n    }\n\n    return (\n      <section className=\"manage-specs\">\n        <div className=\"form__select-group\">\n          <label htmlFor=\"product-select\">Please select content category to update</label>\n          <select id=\"product-select\" onChange={this.handleCategorySelect} value={selectedCategory}>\n            <option value={selectedCategory} disabled>\n              {selectedCategory}\n            </option>\n            {categories.map(category => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </div>\n        {this.renderSelect(selectedCategory)}\n\n        <SeoForm\n          seo={this.currentSeoData()}\n          validateAll={this.validateAll}\n          uploadSeoContent={this.props.uploadSeoContent}\n          uploadSeo={this.props.uploadSeo}\n          selectedProduct={selectedProduct}\n          selectedBrand={selectedBrand}\n          selectedCollection={selectedCollection}\n          selectedCategory={selectedCategory}\n          valuesAvailable={currentCategoryValues}\n        />\n      </section>\n    );\n  }\n}\n\nconst ManageSeoWithApollo = compose(\n  withApollo,\n  ADMIN_PRODUCTS_QUERY(),\n  graphql(VENDOR_SEO_QUERY, {\n    options: () => ({ variables: { handle: '' } }),\n    props: ({ data }) => {\n      console.log('VENDOR SEO Data::', data);\n      const { loading, error, refetch } = data;\n      if (error) {\n        return { brandSeoError: error };\n      }\n      if (!loading) {\n        return { refetchBrandSeo: refetch };\n      }\n    }\n  }),\n  graphql(COLLECTION_SEO_QUERY, {\n    options: () => ({ variables: { handle: '' } }),\n    props: ({ data }) => {\n      console.log('COLLECITON SEO DATA::', data);\n      const { loading, error, refetch } = data;\n\n      if (error) {\n        return { collectionSeoError: error };\n      }\n      if (!loading) {\n        return { loadingCollectionSeo: loading, refetchCollectionSeo: refetch };\n      }\n    }\n  }),\n  graphql(COLLECTIONS_QUERY, {\n    options: () => ({ variables: { first: 100 } }),\n    props: ({ data }) => {\n      console.log('COLLECTIONS QUERY DATA::', data);\n      const { loading, admin_collections } = data;\n      if (!loading) {\n        const { edges } = admin_collections;\n        return { loadingCollections: loading, collections: edges };\n      }\n    }\n  }),\n  graphql(PRODUCT_SEO_QUERY, {\n    options: () => ({ variables: { handle: '' }, fetchPolicy: 'network-only' }),\n    props: ({ data }) => {\n      console.log('PRODUCTS SEO DATA', data);\n      const { loading: loadingProductData, error, productData, refetch: refetchProductData } = data;\n      if (error) throw new Error(`Error in Related Prodcuts Query: ${error}`);\n      return { loadingProductData, productData, refetchProductData };\n    }\n  }),\n  graphql(UPLOAD_SEO, {\n    props: ({ mutate }) => ({\n      uploadSeo: async seoData => {\n        const { data } = await mutate({ variables: seoData });\n        return data.uploadSeo;\n      }\n    })\n  }),\n  graphql(UPLOAD_SEO_CONTENT, {\n    props: ({ mutate }) => ({\n      uploadSeoContent: async seoData => {\n        console.log('UPLOAD SEO DATA:', seoData);\n        const {\n          data: { updateProductSeo }\n        } = await mutate({ variables: { seo: seoData } });\n        console.log('CONTENT:', updateProductSeo);\n        return updateProductSeo;\n      }\n    })\n  }),\n  graphql(VENDORS_QUERY, {\n    props: ({ data: { loading, error, vendors } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loading, vendors };\n    }\n  }),\n  MODIFY_PRODUCT_DATA(ADD_PRODUCT_DATA, 'addProductData'),\n  MODIFY_PRODUCT_DATA(UPDATE_PRODUCT_DATA, 'updateProductData')\n)(ManageSeo);\n\nManageSeo.propTypes = {\n  uploadSeo: PropTypes.func,\n  refetchBrandSeo: PropTypes.func,\n  refetchCollectionSeo: PropTypes.func,\n  vendors: PropTypes.array,\n  collections: PropTypes.array,\n  productsLoading: PropTypes.bool,\n  products: PropTypes.array,\n  productSpecs: PropTypes.array,\n  refetchProductData: PropTypes.func,\n  sfy_shop: PropTypes.object,\n  productData: PropTypes.object,\n  loadingProductData: PropTypes.bool,\n  uploadSeoContent: PropTypes.func\n};\n\nexport default ManageSeoWithApollo;\n","/*eslint-disable no-unused-vars*/\nimport React from 'react';\nimport { graphql, compose } from 'react-apollo';\n\nimport AdminView from '../components/AdminView';\nimport PAGES_QUERY from '../graphql/PagesQuery.graphql';\nimport UPLOAD_CONTENT from '../graphql/UploadContent.graphql';\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: new Map()\n    };\n  }\n  imageToState = images => {\n    this.setState({\n      images\n    });\n  };\n  save = (page_id, content) => {\n    // console.log('THIS.PROPS::', this.props);\n    this.props.uploadContent(9, [{}]);\n  };\n  render() {\n    return <AdminView {...this.props} save={this.save} />;\n  }\n}\nAdmin.defaultProps = {\n  images: []\n};\nconst AdminWithApollo = compose(\n  graphql(PAGES_QUERY, {\n    props: ({ data }) => {\n      const { pages, loading: loadingPages, error } = data;\n      console.log('pages', pages);\n      if (loadingPages && !error) {\n        return { loadingPages, pages: null };\n      } else {\n        return { pages, loadingPages };\n      }\n    }\n  }),\n  graphql(UPLOAD_CONTENT, {\n    props: ({ mutate }) => ({\n      uploadContent: async ({ page_id, content }) => {\n        // console.log('PAGE ID::', page_id);\n        // console.log('content::', content);\n        const {\n          data: { uploadPageContent }\n        } = await mutate({ variables: { pageContent: { page_id: page_id, content } } });\n        console.log('RETURN DATA::: ', uploadPageContent);\n        return uploadPageContent;\n      }\n    })\n  })\n)(Admin);\n\nexport default AdminWithApollo;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"page\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"pageTitle\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"fieldNames\"}},\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"page\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"pageTitle\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"pageTitle\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"fields\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"field_names\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"fieldNames\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"field_name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"field_label\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"field_type\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"field_value\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":236}};\n    doc.loc.source = {\"body\":\"query page($id: ID, $pageTitle: String, $fieldNames: [[String]]) {\\n  page(id: $id, pageTitle: $pageTitle) {\\n    id\\n    fields(field_names: $fieldNames) {\\n      field_name\\n      field_label\\n      field_type\\n      field_value\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"page\"] = oneQuery(doc, \"page\");\n        \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Badge, ResponsiveShpfyPicture, ResponsivePicture } from '../../common/components/global';\nimport '../styles/popular-items-carousel.scss';\n\nclass PopularItemsCarousel extends React.Component {\n  renderImage = image => {\n    const className = image.hasOwnProperty('className') ? image.className : '';\n    const options = {\n      image: image.link,\n      altText: image.name,\n      className,\n      image_size: '331X331',\n      sources: [\n        {\n          image: image.link,\n          image_size: '331X331',\n          size: '(min-width: 990px)'\n        }\n      ]\n    };\n    return <ResponsiveShpfyPicture options={options} />;\n  };\n  renderLogo = image => {\n    const className = image.hasOwnProperty('className') ? image.className : '';\n    const options = {\n      image: image.link,\n      altText: image.name,\n      className,\n      image_size: '331X331',\n      sources: [\n        {\n          image: image.link,\n          image_size: '331X331',\n          sizes: '(min-width: 990px) 331px'\n        }\n      ]\n    };\n    return <ResponsivePicture options={options} />;\n  };\n  firstImg = node => node.images.edges[0].node;\n  getPrice = node => node.variants.edges[0].node.price;\n  getCompareAtPrice = node => node.variants.edges[0].node.compareAtPrice;\n  getDisplayPrice = input =>\n    parseInt(input)\n      .toFixed(2)\n      .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  vendorLogo = vendorName => {\n    const formatVendor = name => {\n      return name.replace(/[\\s/-]/g, '').toLowerCase();\n    };\n    const { vendors } = this.props;\n    const [match] = vendors.filter(v => formatVendor(v.name) === formatVendor(vendorName));\n    return match.logo_url;\n  };\n  toUrlName = str => str.replace(/(\\s\\/\\s|\\/|\\s|_)/gi, '-').toLowerCase();\n  productLocation = ({ handle, title, productType, vendor }) => {\n    const vendorName = vendor\n      .split(' ')\n      .join('-')\n      .toLowerCase();\n    // console.log('NODE :::', title);\n\n    return {\n      pathname: `/product/${vendorName}/${title\n        .split(' ')\n        .join('-')\n        .toLowerCase()}/${productType.toLowerCase()}`,\n      state: handle\n    };\n  };\n  render() {\n    const { products } = this.props;\n    return (\n      <div className=\"popular-items-carousel\">\n        {products && products.edges.length > 0 ? (\n          products.edges.map(({ node }) => (\n            <Link key={node.id} to={this.productLocation(node)} className=\"popular-items-carousel__item\">\n              <div className=\"popular-items-carousel__item-image\">\n                {this.renderImage({ link: this.firstImg(node).originalSrc, name: this.firstImg(node).altText })}\n                {/* <img alt={this.firstImg(node).altText} src={this.firstImg(node).originalSrc} /> */}\n                {this.getCompareAtPrice(node) !== null ? <Badge badgeType=\"sale\" /> : null}\n              </div>\n              {this.renderLogo({\n                link: this.vendorLogo(node.vendor),\n                name: node.vendor,\n                className: 'popular-items-carousel__vendor-image'\n              })}\n              {/* <img\n                alt={node.vendor}\n                src={this.vendorLogo(node.vendor) || 'https://via.placeholder.com/200x100'}\n                className=\"popular-items-carousel__vendor-image\"\n              /> */}\n              <h3 className=\"popular-items-carousel__item-name\">{node.title}</h3>\n              {this.getCompareAtPrice(node) !== null ? (\n                <div className=\"popular-items-carousel__item-price-group\">\n                  <div className=\"popular-items-carousel__item-price popular-items-carousel__item-price--original\">\n                    ${this.getDisplayPrice(this.getCompareAtPrice(node))}\n                  </div>\n                  <div className=\"popular-items-carousel__item-price popular-items-carousel__item-price--sale\">\n                    ${this.getDisplayPrice(this.getPrice(node))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"popular-items-carousel__item-price\">${this.getDisplayPrice(this.getPrice(node))}</div>\n              )}\n            </Link>\n          ))\n        ) : (\n          <span>No popular item(s) to display</span>\n        )}\n      </div>\n    );\n  }\n}\n\nPopularItemsCarousel.propTypes = {\n  products: PropTypes.object,\n  vendors: PropTypes.array\n};\n\nexport default PopularItemsCarousel;\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Badge } from '../../common/components/global';\n//import { toUrlName } from '../../common/components/global/components/PageBreadcrumbs';\nimport ResponsiveShpfyPicture from '../../common/components/global/components/ResponsiveShpfyPicture';\n\nimport '../styles/shop-grid.scss';\n\nclass ShopGrid extends React.Component {\n  componentDidMount() {\n    const { selectedCategory, selectedVendor, priceConfirmed } = this.props;\n    if (priceConfirmed || selectedCategory || selectedVendor) {\n      const filtered = this.applyFilter(this.props.products.edges);\n      return this.props.setFilteredFinalIdx(filtered);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const { selectedCategory, selectedVendor, priceConfirmed } = this.props;\n    const {\n      selectedCategory: prevCategory,\n      selectedVendor: prevVendor,\n      priceConfirmed: prevPriceConfirmed\n    } = prevProps;\n    const filtered = this.applyFilter(this.props.products.edges);\n    if (selectedCategory !== prevCategory && selectedCategory) {\n      return this.props.setFilteredFinalIdx(filtered);\n    }\n    if (selectedVendor !== prevVendor && selectedVendor) {\n      return this.props.setFilteredFinalIdx(filtered);\n    }\n    if (priceConfirmed !== prevPriceConfirmed && priceConfirmed) {\n      return this.props.setFilteredFinalIdx(filtered);\n    }\n  }\n  getDisplayPrice = input =>\n    parseInt(input)\n      .toFixed(2)\n      .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  formatVendor = name => {\n    return name.replace(/[\\s/-]/g, '').toLowerCase();\n  };\n  productLocation = (vendor, handle, id, title, productType) => {\n    // console.log('ID', id, 'TITLE', title, 'PRODUCT TYPE', productType);\n    // console.log('NODE::', node);\n    const regex = /(\\/|[\"])/gm;\n    const subst = ``;\n\n    // The substituted value will be contained in the result variable\n    const result = title.replace(regex, subst);\n    const path = vendor\n      .split(' ')\n      .join('-')\n      .toLowerCase();\n    // console.log('HANDLE:::', `/product/${path}/${handle}`);\n\n    return {\n      pathname: `/product/${path}/${result\n        .split(' ')\n        .join('-')\n        .toLowerCase()}/${productType\n        .split('/')\n        .join('-')\n        .toLowerCase()}`,\n      state: handle\n    };\n  };\n  applySort = prods => {\n    const { sortMethod } = this.props;\n    let shopProducts = [...prods];\n    switch (sortMethod) {\n      case 'alpha':\n        shopProducts = _.orderBy(shopProducts, ['node.title'], ['asc']);\n        break;\n      case 'alphaReverse':\n        shopProducts = _.orderBy(shopProducts, ['node.title'], ['desc']);\n        break;\n      case 'price':\n        shopProducts = _.orderBy(shopProducts, p => parseFloat(p.node.variants.edges[0].node.price), ['asc']);\n        break;\n      case 'priceReverse':\n        shopProducts = _.orderBy(shopProducts, p => parseFloat(p.node.variants.edges[0].node.price), ['desc']);\n        break;\n      case 'featured':\n        break;\n    }\n    return shopProducts;\n  };\n  applyFilter = prods => {\n    const { selectedCategory, selectedVendor, priceConfirmed, priceFilterUpper: u, priceFilterLower: l } = this.props;\n    let shopProducts = [...prods];\n    // First filter layer\n    if (priceConfirmed && u && l) {\n      shopProducts = shopProducts.filter(({ node: { variants: { edges } } }) => {\n        const parsedPr = parseFloat(edges[0].node.price);\n        return parseFloat(l) <= parsedPr && parsedPr <= parseFloat(u);\n      });\n    }\n    // Second filter layer\n    if (selectedCategory) {\n      return shopProducts.filter(({ node: { collections: { edges } } }) => {\n        const res = edges.some(({ node: { id } }) => id === selectedCategory);\n        return res;\n      });\n    }\n    if (selectedVendor) {\n      return shopProducts.filter(p => this.formatVendor(p.node.vendor) === this.formatVendor(selectedVendor));\n    }\n    return shopProducts;\n  };\n  firstImg = node => node.images.edges[0].node;\n  renderImage = image => {\n    const className = image.hasOwnProperty('className') ? image.className : '';\n    const options = {\n      image: image.link,\n      altText: image.name,\n      className,\n      image_size: '300X300',\n      sources: [\n        {\n          image: image.link,\n          image_size: '700X700',\n          size: '(min-width: 990px)'\n        },\n        {\n          image: image.link,\n          image_size: '370X370',\n          size: '(max-width: 450px)'\n        }\n      ]\n    };\n    return <ResponsiveShpfyPicture options={options} />;\n  };\n  render() {\n    const { products, displayLim, startDisplayIdx } = this.props;\n    const lowerLim = startDisplayIdx;\n    const upperLim = startDisplayIdx + (displayLim - 1);\n    // console.log('PRODUCTS::', products);\n    // Apply any chosen sort and/or filter\n    const sorted = this.applySort(products.edges);\n    const sortedAndFiltered = this.applyFilter(sorted);\n\n    return (\n      <div className=\"shop-grid\">\n        {sortedAndFiltered.length > 0\n          ? sortedAndFiltered.map(({ node: { id, title, vendor, handle, productType, images }, node }, i) => {\n              // console.log('LOWER::', lowerLim, 'UPPER', upperLim);\n              const { compareAtPrice, price } = node.variants.edges[0].node;\n              if (i >= lowerLim && i <= upperLim) {\n                return (\n                  <Link\n                    key={id}\n                    to={this.productLocation(vendor, handle, id, title, productType, node)}\n                    className=\"shop-grid__item\"\n                  >\n                    <div className=\"shop-grid__item-image\">\n                      {'edges' in images && images.edges.length > 0 ? (\n                        // <img src={this.firstImg(node).originalSrc} alt={this.firstImg(node).altText} />\n                        this.renderImage({ link: this.firstImg(node).originalSrc, name: this.firstImg(node).altText })\n                      ) : (\n                        <img src=\"https://via.placeholder.com/300x300\" alt=\"placeholder\" />\n                      )}\n                      {compareAtPrice !== null ? <Badge badgeType=\"sale\" /> : null}\n                    </div>\n                    <h3 className=\"shop-grid__item-name\">{`${vendor} ${title}`}</h3>\n                    <h4 className=\"shop-grid__item-category\">{productType}</h4>\n                    {compareAtPrice !== null ? (\n                      <div className=\"shop-grid__item-price-group\">\n                        <span className=\"shop-grid__item-price shop-grid__item-price--sale\">\n                          {`$${this.getDisplayPrice(price)}`}\n                        </span>\n                        <span className=\"shop-grid__item-price shop-grid__item-price--original\">\n                          {`$${this.getDisplayPrice(compareAtPrice)}`}\n                        </span>\n                      </div>\n                    ) : (\n                      <div className=\"shop-grid__item-price\">{`$${this.getDisplayPrice(price)}`}</div>\n                    )}\n                  </Link>\n                );\n              } else {\n                return null;\n              }\n            })\n          : null}\n      </div>\n    );\n  }\n}\n\nShopGrid.propTypes = {\n  selectedPriceRange: PropTypes.string,\n  selectedPromotion: PropTypes.string,\n  selectedCategory: PropTypes.string,\n  selectedVendor: PropTypes.string,\n  sortMethod: PropTypes.string,\n  products: PropTypes.object,\n  categories: PropTypes.array,\n  promotions: PropTypes.array,\n  priceRanges: PropTypes.array,\n  category: PropTypes.object,\n  displayLim: PropTypes.number,\n  startDisplayIdx: PropTypes.number,\n  setFilteredFinalIdx: PropTypes.func,\n  priceConfirmed: PropTypes.bool,\n  priceFilterUpper: PropTypes.string,\n  priceFilterLower: PropTypes.string\n};\n\nexport default ShopGrid;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport { FiShoppingCart } from 'react-icons/fi';\nimport { PageLayout, ScrollToTop, Modal, TabContainer, TabItem, Badge } from '../../common/components/global';\nimport SimilarProducts from './SimilarProducts';\nimport settings from '../../../../../../settings';\nimport '../styles/single-product-view.scss';\nimport RPBHQ from '../../common/graphql/SFY/sfyRelatedProductByHandle.graphql';\nimport ResponsiveShpfyPicture from '../../common/components/global/components/ResponsiveShpfyPicture';\n\nexport const prodFeatures = [\n  ['shock_absorption', 'Shock Absorption'],\n  ['console', 'Console'],\n  ['user_ids', 'User IDs'],\n  ['workouts', 'Workouts'],\n  ['hrt_monitoring', 'Heart Monitoring'],\n  ['stride_technology', 'Stride Technology'],\n  ['power', 'Power'],\n  ['design', 'Design'],\n  ['drive_system', 'Drive System'],\n  ['handlebars', 'Handlebars'],\n  ['seat', 'Seat'],\n  ['pedals', 'Pedals'],\n  ['frame', 'Frame'],\n  ['finish', 'Finish'],\n  ['motion', 'Motion'],\n  ['exercises', 'Exercises'],\n  ['weight_stack', 'Weight Stack'],\n  ['included_accessories', 'Included Accessories'],\n  ['optional_weight_stack', 'Optional Weight Stack']\n];\nexport const prodSpecs = [\n  ['running_area', 'Running Area'],\n  ['motor', 'Motor'],\n  ['speed', 'Speed'],\n  ['incline', 'Incline'],\n  ['resistance_levels', 'Resistance Levels'],\n  ['resistance_system', 'Resistance System'],\n  ['stride', 'Stride'],\n  ['max_user_weight', 'Max User Weight'],\n  ['ramp', 'Ramp'],\n  ['stored_vertical_height', 'Stored Vertical Height'],\n  ['seat_floor_distance', 'Seat Floor Distance'],\n  ['warranty', 'Warranty']\n];\n\nconst featureTypes = prodFeatures.map(f => f[0]);\nconst specTypes = prodSpecs.map(s => s[0]);\n\nconst ProductDataList = ({ dataArr, data }) => {\n  return (\n    <ul>\n      {dataArr.map(([key, value], i) => {\n        if (key in data && data[key]) {\n          return (\n            <li key={i}>\n              <span style={{ fontWeight: 600 }}>{value}</span> {data[key]}\n            </li>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </ul>\n  );\n};\n\nclass SingleProductView extends React.Component {\n  state = {\n    selectedImage: '0',\n    showSpecsModal: false,\n    relatedProducts: []\n  };\n  componentDidUpdate(prevProps) {\n    const { relatedProducts, client } = this.props;\n    if (typeof prevProps.relatedProducts === 'undefined' && relatedProducts) {\n      if (relatedProducts.length > 0) {\n        Promise.all(\n          relatedProducts.map(async ({ related_handle: handle }) => {\n            return await client.query({ query: RPBHQ, variables: { handle } });\n          })\n        ).then(res => {\n          const relatedProducts = res.map(({ data: { sfy_shop: { productByHandle: relatedProduct } } }) => {\n            const { images, ...rest } = relatedProduct;\n            const image = images.edges[0].node.originalSrc;\n            return { ...rest, image };\n          });\n          return this.setState({ relatedProducts });\n        });\n      }\n    }\n    return;\n  }\n  addToCart = async variantId => {\n    const checkoutId = localStorage.getItem('sfy-checkout-id');\n    if (!checkoutId) {\n      const addedItem = { lineItems: [{ variantId, quantity: 1 }] };\n      await this.props.createInitialCheckout(addedItem);\n    } else {\n      const addedItem = { lineItems: [{ variantId, quantity: 1 }], checkoutId };\n      await this.props.addCartItem(addedItem);\n    }\n    this.props.toggleCart();\n  };\n  getDisplayPrice = input =>\n    parseInt(input)\n      .toFixed(2)\n      .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  toggleModal = () => this.setState({ showSpecsModal: !this.state.showSpecsModal });\n  formatVendor = name => {\n    return name.replace(/[\\s/-]/g, '').toLowerCase();\n  };\n  vendorLogo = vendorName => {\n    const { vendors } = this.props;\n    const [match] = vendors.filter(v => this.formatVendor(v.name) === this.formatVendor(vendorName));\n    if (typeof match !== 'undefined') return match.logo_url;\n    else return 'https://via.placeholder.com/300x300';\n  };\n  vendorDescription = vendorName => {\n    const { vendors } = this.props;\n    const [match] = vendors.filter(v => this.formatVendor(v.name) === this.formatVendor(vendorName));\n    if (typeof match !== 'undefined') return match.description;\n    else return '';\n  };\n  renderImage = image => {\n    const className = image.hasOwnProperty('className') ? image.className : '';\n    const options = {\n      image: image.link,\n      altText: image.name,\n      className,\n      image_size: '300X300',\n      sources: [\n        {\n          image: image.link,\n          image_size: '700X700',\n          size: '(min-width: 990px)'\n        },\n        {\n          image: image.link,\n          image_size: '370X370',\n          size: '(max-width: 450px)'\n        }\n      ]\n    };\n    return <ResponsiveShpfyPicture options={options} />;\n  };\n  render() {\n    const { showSpecsModal } = this.state;\n    const { product, vendors, relatedProducts, productData, loading } = this.props;\n    // const renderMetaData = () => (\n    //   <Helmet\n    //     title={`${settings.app.name} - ${product.vendor} ${product.title}`}\n    //     meta={[\n    //       {\n    //         name: 'description',\n    //         content: `${product.vendor} ${product.title} - Product page`\n    //       }\n    //     ]}\n    //   />\n    // );\n    const productInfoTabs = [\n      { name: 'About Product' },\n      { name: 'Dimensions' },\n      { name: 'Product Specs' },\n      { name: 'About Vendor' }\n    ];\n\n    if (loading || !product || !vendors || !relatedProducts) {\n      console.log('LOADING::', loading);\n      console.log('PRODUCT:', product);\n      console.log('VENDORS', vendors);\n      console.log('Related Products', relatedProducts);\n      console.log('PRODUCTDATA::', productData);\n      return (\n        <PageLayout>\n          <div>Loading...</div>\n        </PageLayout>\n      );\n    } else {\n      const renderMetaData = () => (\n        <Helmet\n          title={`${settings.app.name} - ${product.vendor} ${product.title}`}\n          meta={[\n            {\n              name: 'title',\n              content: productData && productData.seo ? productData.seo.title : ''\n            },\n            {\n              name: 'description',\n              content: productData && productData.seo ? productData.seo.description : ''\n            },\n            {\n              name: 'keywords',\n              content: productData && productData.seo ? productData.seo.keywords : ''\n            }\n          ]}\n        />\n      );\n      // eslint-disable-next-line\n      const { title, description, productType, images, vendor, availableForSale, priceRange, options } = product;\n      const dimensions = options[0].values[0];\n      // eslint-disable-next-line\n      const {\n        variants: { edges }\n      } = product;\n      // eslint-disable-next-line\n      const {\n        node: { compareAtPrice, price, /*sku, weight, selectedOptions,*/ id: variantId }\n      } = edges[0];\n      const vendorDescription = this.vendorDescription(vendor);\n      // const specifications = [...selectedOptions, { name: 'weight', value: weight }, { nane: 'sku', value: sku }];\n      const specExists = productData ? specTypes.some(key => key in productData && productData[key]) : false;\n      const featureExists = productData ? featureTypes.some(key => key in productData && productData[key]) : false;\n      return (\n        <PageLayout>\n          {renderMetaData()}\n          <ScrollToTop />\n          <div className=\"single-product-view\">\n            <div className=\"single-product-view__product-details\">\n              {'product' in this.props ? (\n                <section className=\"product-details\">\n                  <div className=\"product-details__images\">\n                    {images && 'edges' in images && images.edges.length > 0 ? (\n                      images.edges.map(({ node: { originalSrc, id, altText } }, i) => (\n                        <div key={id} className=\"product-details__image\">\n                          {this.renderImage({ link: originalSrc, name: altText })}\n                          {/* <img src={originalSrc} alt={altText} /> */}\n                          {compareAtPrice !== null && i == 0 ? <Badge badgeType=\"sale\" /> : null}\n                        </div>\n                      ))\n                    ) : (\n                      <span>No product image(s) to display</span>\n                    )}\n                  </div>\n                  <div className=\"product-details__info\">\n                    <img className=\"product-details__vendor-image\" src={this.vendorLogo(vendor)} alt={vendor} />\n                    <h2 className=\"product-details__name\">{title}</h2>\n                    <p className=\"product-details__description\">{description}</p>\n                    <div className=\"product-details__cart\">\n                      {compareAtPrice !== null ? (\n                        <div className=\"product-details__price-group\">\n                          <span className=\"product-details__price product-details__price--sale\">\n                            {`$${this.getDisplayPrice(price)}`}\n                          </span>\n                          <span className=\"product-details__price product-details__price--original\">\n                            {`$${this.getDisplayPrice(compareAtPrice)}`}\n                          </span>\n                        </div>\n                      ) : (\n                        <span className=\"product-details__price\">{`$${this.getDisplayPrice(price)}`}</span>\n                      )}\n                      <div className=\"product-details__button-group\">\n                        <Link to=\"/locations\" className=\"product-details__button\">\n                          <FaSearch size=\"2em\" className=\"product-details__icon\" />\n                          Call For Best Price\n                        </Link>\n                        <button\n                          onClick={() => this.addToCart(variantId)}\n                          className=\"product-details__button\"\n                          disabled={availableForSale === false ? true : false}\n                        >\n                          <FiShoppingCart size=\"2em\" className=\"product-details__icon\" />\n                          Add to cart\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"product-details__specs\">\n                      <div className=\"product-details__collapse-label\" onClick={this.toggleModal}>\n                        Product Information\n                      </div>\n                      <Modal showModal={showSpecsModal} toggleModal={this.toggleModal} transparent={true}>\n                        <TabContainer tabs={productInfoTabs}>\n                          <TabItem>\n                            {/* About Product */}\n                            {description !== '' ? description : <span>No product description to display.</span>}\n                          </TabItem>\n                          <TabItem>\n                            {/* Dimensions */}\n                            {dimensions !== '' ? dimensions : <span>No product dimensions to display.</span>}\n                          </TabItem>\n                          <TabItem>\n                            {/* Product Specs */}\n                            <h5> Features </h5>\n                            {featureExists ? (\n                              <ProductDataList dataArr={prodFeatures} data={productData} />\n                            ) : (\n                              <span>No features available at this time</span>\n                            )}\n                            <h5> Specs </h5>\n                            {specExists ? (\n                              <ProductDataList dataArr={prodSpecs} data={productData} />\n                            ) : (\n                              <span>No specs available at this time</span>\n                            )}\n                          </TabItem>\n                          <TabItem>\n                            {/* About Vendor */}\n                            {vendorDescription !== '' ? (\n                              vendorDescription\n                            ) : (\n                              <span>No vendor story to share at this time.</span>\n                            )}\n                          </TabItem>\n                        </TabContainer>\n                        {/* }<div className=\"product-details__collapse-menu\">\n                          {specifications.length > 0 ? (\n                            <CollapseMenu label=\"Specifications\">\n                              {specifications.map(({ name, value }, i) => (\n                                <div key={i} className=\"product-details__collapse-item\">\n                                  <span className=\"product-details__collapse-name\">{name}</span>\n                                  <span className=\"product-details__collapse-description\">{value}</span>\n                                </div>\n                              ))}\n                            </CollapseMenu>\n                          ) : null}\n                        </div> */}\n                      </Modal>\n                    </div>\n                  </div>\n                </section>\n              ) : (\n                <span>No product to display</span>\n              )}\n            </div>\n            <div className=\"single-product-view__similar-products\">\n              {this.state.relatedProducts.length > 0 ? (\n                <SimilarProducts relatedProducts={this.state.relatedProducts} />\n              ) : null}\n            </div>\n          </div>\n        </PageLayout>\n      );\n    }\n  }\n}\n\nSingleProductView.propTypes = {\n  product: PropTypes.object,\n  relatedProducts: PropTypes.array,\n  loading: PropTypes.bool,\n  createInitialCheckout: PropTypes.func,\n  addCartItem: PropTypes.func,\n  toggleCart: PropTypes.func,\n  vendors: PropTypes.array,\n  productData: PropTypes.object,\n  client: PropTypes.object\n};\n\nProductDataList.propTypes = {\n  dataArr: PropTypes.array,\n  data: PropTypes.object\n};\n\nSingleProductView.defaultProps = {};\n\nexport default SingleProductView;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport { graphql, compose, withApollo } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport SingleProductView from '../components/SingleProductView';\n//import { filter } from './Category';\n//import SINGLE_PRODUCT_QUERY from '../../common/graphql/SFY/sfySingleProduct.graphql';\nimport SINGLE_PRODUCT_QUERY from '../../common/graphql/SFY/sfySingleProductByHandle.graphql';\nimport CREATE_CART from '../../common/graphql/SFY/sfyCheckoutCreate.graphql';\nimport ADD_CART_ITEM from '../../common/graphql/SFY/sfyCheckoutLineItemsAdd.graphql';\nimport VENDORS_QUERY from '../../common/graphql/VendorsQuery.graphql';\nimport RELATED_PRODUCTS_QUERY from '../../common/graphql/RelatedProductsQuery.graphql';\nimport PRODUCT_DATA_QUERY from '../../common/graphql/ProductDataQuery.graphql';\n\n//TODO: Add to common file\nconst toggleCart = () => ({ type: 'TOGGLE_CART' });\nconst updateQty = cartQty => {\n  return { type: 'UPDATE_CART_QTY', cartQty };\n};\nconst cartQty = lineItemEdges => {\n  if (lineItemEdges.length === 0) return 0;\n  return lineItemEdges.reduce((acc, { node: { quantity: qty } }) => {\n    return acc + qty;\n  }, 0);\n};\n\nclass ProductView extends React.Component {\n  render() {\n    return <SingleProductView {...this.props} />;\n  }\n}\n\nconst ProductViewWithApollo = compose(\n  withApollo,\n  graphql(SINGLE_PRODUCT_QUERY, {\n    options: props => {\n      // console.log('PROPS::', props);\n      const { state: handle } = props.location;\n      // console.log('HANDLE:', handle);\n      return { variables: { handle } };\n    },\n    props: ({ data }) => {\n      // console.log('DATA::::', data);\n      const { loading, sfy_shop, error } = data;\n      if (error) throw new Error(`Error in Products Query: ${error}`);\n      else if (loading || !sfy_shop) return { loading };\n      else if (!loading && sfy_shop) return { loading, product: sfy_shop.productByHandle };\n    }\n  }),\n  graphql(CREATE_CART, {\n    props: ({ ownProps: { updateCartQty }, mutate }) => ({\n      createInitialCheckout: async addedItem => {\n        try {\n          const {\n            data: {\n              sfy_checkoutCreate: { checkout, checkoutUserErrors: userErrors }\n            }\n          } = await mutate({\n            variables: { input: addedItem }\n          });\n          if (Array.isArray(userErrors) && userErrors.length > 0) {\n            return { errors: userErrors.map(err => err.message) };\n          } else {\n            if ('id' in checkout && checkout.id && typeof window !== 'undefined') {\n              updateCartQty(cartQty(checkout.lineItems.edges));\n              localStorage.setItem('sfy-checkout-id', checkout.id);\n              return checkout;\n            }\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  }),\n  graphql(ADD_CART_ITEM, {\n    props: ({ ownProps: { updateCartQty }, mutate }) => ({\n      addCartItem: async addedItem => {\n        try {\n          const {\n            data: {\n              sfy_checkoutLineItemsAdd: { checkout, checkoutUserErrors: userErrors }\n            }\n          } = await mutate({\n            variables: addedItem\n          });\n          if (Array.isArray(userErrors) && userErrors.length > 0) {\n            return { errors: userErrors.map(err => err.message) };\n          } else {\n            if ('id' in checkout && checkout.id && typeof window !== 'undefined') {\n              updateCartQty(cartQty(checkout.lineItems.edges));\n              localStorage.setItem('sfy-checkout-id', checkout.id);\n              return checkout;\n            }\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  }),\n  graphql(VENDORS_QUERY, {\n    props: ({ data: { loading, error, vendors } }) => {\n      if (error) throw new Error(`Error in Vendors Query: ${error}`);\n      return { loading, vendors };\n    }\n  }),\n  graphql(PRODUCT_DATA_QUERY, {\n    options: props => {\n      const { state: handle } = props.location;\n      return { variables: { handle } };\n    },\n    props: ({ data }) => {\n      const { loading, error, productData } = data;\n      console.log('product data::::', productData);\n      if (error) throw new Error(`Error in Product Data Query: ${error}`);\n      return { loading, productData };\n    }\n  }),\n  graphql(RELATED_PRODUCTS_QUERY, {\n    options: props => {\n      const { state: product_handle } = props.location;\n      return { variables: { product_handle } };\n    },\n    props: ({ data }) => {\n      // console.log('REL PROD DATA', data);\n      const { loading, error, relatedProducts } = data;\n      if (error) throw new Error(`Error in Related Prodcuts Query: ${error}`);\n      return { loading, relatedProducts };\n    }\n  })\n)(ProductView);\n\nconst ProductViewWithRedux = connect(\n  null,\n  dispatch => ({\n    toggleCart: () => dispatch(toggleCart()),\n    updateCartQty: cartQty => dispatch(updateQty(cartQty))\n  })\n)(ProductViewWithApollo);\n\nProductView.propTypes = {\n  location: PropTypes.object\n};\n\nexport default ProductViewWithRedux;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { withLoadedUser } from './AuthBase';\n\nconst AuthRoute = withLoadedUser(\n  ({ currentUser, role, redirect = '/admin/login', redirectOnLoggedIn, component: Component, ...rest }) => {\n    const RenderComponent = props => {\n      // The users is not logged in\n      if (redirectOnLoggedIn && currentUser) {\n        return <Redirect to={{ pathname: redirect }} />;\n      }\n\n      return isRoleMatch(role, currentUser) ? (\n        <Component currentUser={currentUser} {...props} {...rest} />\n      ) : (\n        <Redirect to={{ pathname: redirect }} />\n      );\n    };\n\n    return <Route {...rest} render={RenderComponent} />;\n  }\n);\n\nAuthRoute.propTypes = {\n  role: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n  redirect: PropTypes.string,\n  redirectOnLoggedIn: PropTypes.bool\n};\n\nconst isRoleMatch = (role, currentUser) => {\n  if (!role) {\n    return true;\n  }\n  return currentUser && (Array.isArray(role) ? role : [role]).includes(currentUser.role);\n};\n\nexport * from './AuthBase';\nexport { AuthRoute };\n","import FileUploader from '../util/FileUploader';\n\nconst getField = (field, values) => {\n  if (values.hasOwnProperty(field)) {\n    return values[field];\n  }\n};\n/*eslint-disable no-unused-vars*/\nexport default pubsub => ({\n  Query: {\n    async pages(obj, input, { Admin }) {\n      try {\n        const pages = await Admin.get.pages();\n        // console.log('PAGES:::', pages);\n        if (pages.length == 0) {\n          const page = await Admin.insert.page({ id: 0, name: 'home' });\n          // console.log('PAGE::', page);\n          return page;\n        }\n        return pages;\n      } catch (e) {\n        return e;\n      }\n    },\n    async page(obj, { id, pageTitle }, { Admin }) {\n      try {\n        if (id) {\n          return { id };\n        } else {\n          console.log('NO ID:::', pageTitle);\n          const page = await Admin.get.pageByTitle(pageTitle);\n          console.log('PAGE::', page);\n          return { id: page.id };\n        }\n      } catch (e) {\n        console.log('ERRROR GETTING PAGE:', e);\n        return e;\n      }\n    },\n    async vendorData(_, { handle }, { Admin }) {\n      console.log('Vendor HANDLE:', handle);\n      try {\n        const data = await Admin.get.vendorByHandle(handle);\n        console.log('DATA::', data, handle.length);\n        if (typeof data == 'undefined' && handle.length > 0) {\n          const vendor = await Admin.insert.vendorSeo(handle);\n          console.log('VENDOR::', vendor);\n          return vendor;\n        }\n        if (handle.length == 0) {\n          return null;\n        }\n        if (data) {\n          return { handle, seo: data };\n        }\n      } catch (e) {\n        return e;\n      }\n    },\n    async collectionData(_, { handle }, { Admin }) {\n      console.log('COLLECTION HANDLE:', handle);\n      try {\n        const data = await Admin.get.collectionByHandle(handle);\n        console.log('COLLECTION DATA::', data, handle);\n        if ((typeof data == 'undefined' || !data) && handle.length > 0) {\n          const collection = await Admin.insert.collectionSeo(handle);\n          console.log('VENDOR::', collection);\n          return collection;\n        }\n        if (handle.length == 0) {\n          return null;\n        }\n        if (data) {\n          return data;\n        }\n      } catch (e) {\n        return e;\n      }\n      return null;\n    }\n  },\n  Page: {\n    async fields(obj, { field_names }, { Admin }, info) {\n      // console.log('PAGE ID::', obj);\n      const { page_content } = await Admin.get.pageContents(obj.id);\n      const requestedFields = field_names\n        .map(([section, field]) => {\n          return page_content\n            .map(({ field_value, ...rest }) => {\n              const values = JSON.parse(field_value);\n              if (section == rest.section_name) {\n                const combined = Object.assign({}, rest, { [field]: getField(field, values) });\n                return combined;\n              }\n            })\n            .reduce(\n              (accum, curr) => {\n                const field_value = curr[field];\n                delete curr[field];\n                accum = Object.assign({}, accum, curr, { field_value: { [field]: field_value } });\n                return accum;\n              },\n              { field_value: null }\n            );\n        })\n        .reduce((accum, curr) => {\n          accum['field_value'] = Object.assign({}, accum['field_value'], curr['field_value']);\n          delete curr['field_value'];\n          accum = Object.assign({}, accum, curr);\n          return accum;\n        }, {});\n      // console.log('REQUESTED FIELDS:', requestedFields);\n      const { field_value, ...fields } = requestedFields;\n      const stringValues = JSON.stringify(field_value);\n      const data = { ...fields, field_value: stringValues };\n      return [data];\n    }\n  },\n  Mutation: {\n    async signS3(obj, { filename, filetype }) {\n      const signedRequest = await FileUploader.getSignedUrl({ filename, filetype });\n      // console.log('signedRequest::??', signedRequest);\n      return signedRequest;\n    },\n    async uploadPageContent(obj, { pageContent }, { Admin }) {\n      try {\n        const [data] = await Admin.update.pageContent(pageContent);\n        return data.page_content;\n      } catch (e) {\n        console.log('EERROO', e);\n      }\n    },\n    async uploadSeo(obj, { path, handle, seo }, { Admin }) {\n      console.log('PATH::', path);\n      console.log('HANDLE::', handle);\n      console.log('SEO::', seo);\n      try {\n        const [data] = await Admin.update.seo({ path, handle, seo });\n        console.log('DATA::', data);\n        return data;\n      } catch (e) {\n        console.log('ERROR UPDATING SEO DATA::', e);\n      }\n    }\n  },\n  Subscription: {}\n});\n","/*eslint-disable no-unused-vars*/\nimport knex from '../../sql/connector';\n\nexport default class Admin {\n  get = {\n    async pages() {\n      try {\n        return await knex('pages').select('*');\n      } catch (e) {\n        return e;\n      }\n    },\n    async pageById(id) {\n      try {\n        return await knex('pages')\n          .select('*')\n          .where('id', id)\n          .first();\n      } catch (e) {\n        return e;\n      }\n    },\n    async pageByTitle(title) {\n      try {\n        return await knex('pages')\n          .select('*')\n          .where('title', title)\n          .first();\n      } catch (e) {\n        return e;\n      }\n    },\n    async vendorByHandle(handle) {\n      try {\n        const exists = await knex.schema.hasTable('vendor_seo');\n        if (!exists) {\n          await knex.schema.createTable('vendor_seo', function(t) {\n            t.increments('id').primary();\n            t.string('handle', 100);\n            t.string('title', 100);\n            t.text('description');\n            t.text('keywords');\n          });\n        }\n        return await knex('vendor_seo')\n          .select('*')\n          .where({ handle })\n          .first();\n      } catch (e) {\n        return e;\n      }\n    },\n    async collectionByHandle(handle) {\n      try {\n        const exists = await knex.schema.hasTable('collection_seo');\n        if (!exists) {\n          await knex.schema.createTable('collection_seo', function(t) {\n            t.increments('id').primary();\n            t.string('handle', 100);\n            t.string('title', 100);\n            t.text('description');\n            t.text('keywords');\n          });\n        }\n        return await knex('collection_seo')\n          .select('*')\n          .where({ handle })\n          .first();\n      } catch (e) {\n        return e;\n      }\n    },\n    async pageContents(page_id) {\n      try {\n        return await knex('page_contents')\n          .select('page_content')\n          .where('page_id', page_id)\n          .first();\n      } catch (e) {\n        return e;\n      }\n    }\n  };\n  insert = {\n    async page({ name }) {\n      try {\n        const data = await knex('pages')\n          .returning(['id', 'name'])\n          .insert({ name });\n        await knex('page_contents').insert({ page_id: data[0].id });\n        return data;\n      } catch (e) {\n        return e;\n      }\n    },\n    async vendorSeo(handle) {\n      try {\n        const data = await knex('vendor_seo')\n          .returning(['id', 'handle'])\n          .insert({ handle });\n        return data;\n      } catch (e) {\n        return e;\n      }\n    },\n    async collectionSeo(handle) {\n      try {\n        const data = await knex('collection_seo')\n          .returning(['id', 'handle'])\n          .insert({ handle });\n        return data;\n      } catch (e) {\n        return e;\n      }\n    }\n  };\n  update = {\n    async pageContent({ page_id, content }) {\n      try {\n        return await knex('page_contents')\n          .where('page_id', page_id)\n          .update({ page_content: JSON.stringify(content) }, ['page_content']);\n      } catch (e) {\n        return e;\n      }\n    },\n    async seo({ path, handle, seo }) {\n      try {\n        const update = await knex(`${path}_seo`).where({ handle });\n        if (update.length == 0) {\n          // console.log('NOTHING::');\n          return await knex(`${path}_seo`)\n            .insert({ handle, ...seo })\n            .returning(['handle', 'title', 'description', 'keywords']);\n        } else {\n          // console.log('WE HAVE A PRODUCT:', update);\n          return await knex(`${path}_seo`)\n            .where({ handle })\n            .update(seo)\n            .returning(['handle', 'title', 'description', 'keywords']);\n        }\n      } catch (e) {\n        return e;\n      }\n    }\n  };\n  delete = {};\n}\n","import admin from './admin';\nimport vendor from './vendor';\nimport categories from './categories';\nimport product from './product';\nimport cookies from './cookies';\nimport i18n from './i18n';\nimport user from './user';\nimport contact from './contact';\nimport mailer from './mailer';\nimport graphqlTypes from './graphqlTypes';\nimport './debug';\n\nimport Feature from './connector';\n\nexport default new Feature(admin, categories, product, vendor, cookies, i18n, user, contact, mailer, graphqlTypes);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAmCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAMA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AAEA;AADA;AADA;AAMA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAWA;AAXA;AAaA;AADA;AAIA;AACA;AAjBA;AAAA;AAAA;AAAA;AACA;AAiBA;AAlBA;AAmBA;AAAA;AAAA;AAnBA;AAyBA;AACA;AA1BA;AAAA;AACA;AADA;AA2BA;AA3BA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AA6BA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAuCA;AAxCA;AA0CA;AACA;AACA;AAHA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAgDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AALA;AAFA;AAgBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAFA;AAgBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAFA;AAgBA;AACA;AACA;AA5DA;AA8DA;AAEA;AACA;;;;;AAhPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA6NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAJA;AAFA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAhBA;AA6BA;;;;AAvTA;AACA;AAyTA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAOA;AACA;AADA;AAGA;AACA;AAXA;AAYA;AACA;AACA;AACA;AAbA;AACA;AADA;AAFA;AAKA;AACA;;;AASA;AACA;AACA;;;;AAlBA;AACA;AAmBA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AACA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AACA;AAcnHA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AANA;AAaA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AANA;AAaA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AACA;AADA;AAKA;AAAA;AALA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAIA;AALA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAJA;AASA;AAAA;AAAA;AAAA;AAAA;AA3BA;AADA;AAiCA;AAAA;AAAA;AAAA;AAnCA;AAuCA;;;;AA5GA;AACA;AA8GA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AA0BA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAOA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAXA;AAkBA;AACA;;;;;AA1HA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAmGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AASA;AAAA;AAAA;AAAA;AA1BA;AA8BA;AACA;AACA;AACA;AAxCA;AA4CA;;;;AAlLA;AACA;AAoLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;AACA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AADA;AAIA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AAyBA;AAAA;AACA;AADA;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","sourceRoot":""}